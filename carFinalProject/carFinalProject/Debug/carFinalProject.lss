
carFinalProject.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000dde  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         0000000a  00800060  00000dde  00000e72  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          0000000d  0080006a  0080006a  00000e7c  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000e7c  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000eac  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000001d8  00000000  00000000  00000ee8  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001c93  00000000  00000000  000010c0  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000ae3  00000000  00000000  00002d53  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000e0b  00000000  00000000  00003836  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000003f4  00000000  00000000  00004644  2**2
                  CONTENTS, READONLY, DEBUGGING
<<<<<<< HEAD
 10 .debug_str    00000659  00000000  00000000  0000426c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000807  00000000  00000000  000048c5  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000158  00000000  00000000  000050cc  2**0
=======
 10 .debug_str    00000678  00000000  00000000  00004a38  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000c58  00000000  00000000  000050b0  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000168  00000000  00000000  00005d08  2**0
>>>>>>> parent of e4935ad... ..
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  2c:	0c 94 77 02 	jmp	0x4ee	; 0x4ee <__vector_11>
  30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	ee ed       	ldi	r30, 0xDE	; 222
  68:	fd e0       	ldi	r31, 0x0D	; 13
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	aa 36       	cpi	r26, 0x6A	; 106
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>

00000076 <__do_clear_bss>:
  76:	20 e0       	ldi	r18, 0x00	; 0
  78:	aa e6       	ldi	r26, 0x6A	; 106
  7a:	b0 e0       	ldi	r27, 0x00	; 0
  7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
  7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
  80:	a7 37       	cpi	r26, 0x77	; 119
  82:	b2 07       	cpc	r27, r18
  84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
  86:	0e 94 72 02 	call	0x4e4	; 0x4e4 <main>
  8a:	0c 94 ed 06 	jmp	0xdda	; 0xdda <_exit>

0000008e <__bad_interrupt>:
  8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <APP_INIT>:
<<<<<<< HEAD
  92:	0e 94 d5 04 	call	0x9aa	; 0x9aa <TIM0_PWM_INIT>
  96:	0e 94 6c 01 	call	0x2d8	; 0x2d8 <REMOTE_INIT>
=======
#include "../ECUAL/REMOTE.h"


void APP_INIT(){
	
	TIM0_PWM_INIT();
  92:	0e 94 da 04 	call	0x9b4	; 0x9b4 <TIM0_PWM_INIT>
	
	REMOTE_INIT();
  96:	0e 94 4d 01 	call	0x29a	; 0x29a <REMOTE_INIT>
	
	CAR_INIT();
>>>>>>> parent of e4935ad... ..
  9a:	0e 94 72 00 	call	0xe4	; 0xe4 <CAR_INIT>
  9e:	08 95       	ret

000000a0 <APP_UPDATE>:
  a0:	02 c0       	rjmp	.+4      	; 0xa6 <APP_UPDATE+0x6>
<<<<<<< HEAD
  a2:	0e 94 ad 01 	call	0x35a	; 0x35a <REMOTE_MOVE>
  a6:	0e 94 50 02 	call	0x4a0	; 0x4a0 <REMOTE_MOVE_PRESSED>
=======
		REMOTE_MOVE();
  a2:	0e 94 8e 01 	call	0x31c	; 0x31c <REMOTE_MOVE>
	
}

void APP_UPDATE(){
	
	while(REMOTE_MOVE_PRESSED()){
  a6:	0e 94 3a 02 	call	0x474	; 0x474 <REMOTE_MOVE_PRESSED>
>>>>>>> parent of e4935ad... ..
  aa:	89 2b       	or	r24, r25
  ac:	d1 f7       	brne	.-12     	; 0xa2 <APP_UPDATE+0x2>
  ae:	0e 94 37 01 	call	0x26e	; 0x26e <CAR_STOP>
  b2:	02 c0       	rjmp	.+4      	; 0xb8 <APP_UPDATE+0x18>
<<<<<<< HEAD
  b4:	0e 94 da 01 	call	0x3b4	; 0x3b4 <REMOTE_LEFT>
  b8:	0e 94 5e 02 	call	0x4bc	; 0x4bc <REMOTE_LEFT_PRESSED>
=======
		REMOTE_LEFT();
  b4:	0e 94 be 01 	call	0x37c	; 0x37c <REMOTE_LEFT>
		REMOTE_MOVE();
	}
	
	CAR_STOP();
	
	while(REMOTE_LEFT_PRESSED()){
  b8:	0e 94 48 02 	call	0x490	; 0x490 <REMOTE_LEFT_PRESSED>
>>>>>>> parent of e4935ad... ..
  bc:	89 2b       	or	r24, r25
  be:	d1 f7       	brne	.-12     	; 0xb4 <APP_UPDATE+0x14>
  c0:	0e 94 37 01 	call	0x26e	; 0x26e <CAR_STOP>
  c4:	02 c0       	rjmp	.+4      	; 0xca <APP_UPDATE+0x2a>
<<<<<<< HEAD
  c6:	0e 94 eb 01 	call	0x3d6	; 0x3d6 <REMOTE_RIGHT>
  ca:	0e 94 6c 02 	call	0x4d8	; 0x4d8 <REMOTE_RIGHT_PRESSED>
=======
		REMOTE_RIGHT();
  c6:	0e 94 d2 01 	call	0x3a4	; 0x3a4 <REMOTE_RIGHT>
		REMOTE_LEFT();
	}
	
	CAR_STOP();
	
	while(REMOTE_RIGHT_PRESSED()){
  ca:	0e 94 56 02 	call	0x4ac	; 0x4ac <REMOTE_RIGHT_PRESSED>
>>>>>>> parent of e4935ad... ..
  ce:	89 2b       	or	r24, r25
  d0:	d1 f7       	brne	.-12     	; 0xc6 <APP_UPDATE+0x26>
  d2:	0e 94 37 01 	call	0x26e	; 0x26e <CAR_STOP>
<<<<<<< HEAD
  d6:	0e 94 7a 02 	call	0x4f4	; 0x4f4 <REMOTE_G_PRESSED>
  da:	89 2b       	or	r24, r25
  dc:	11 f0       	breq	.+4      	; 0xe2 <APP_UPDATE+0x42>
  de:	0e 94 fc 01 	call	0x3f8	; 0x3f8 <REMOTE_G>
=======
	
	if(REMOTE_G_PRESSED()){
  d6:	0e 94 64 02 	call	0x4c8	; 0x4c8 <REMOTE_G_PRESSED>
  da:	89 2b       	or	r24, r25
  dc:	11 f0       	breq	.+4      	; 0xe2 <APP_UPDATE+0x42>
		REMOTE_G();
  de:	0e 94 e6 01 	call	0x3cc	; 0x3cc <REMOTE_G>
>>>>>>> parent of e4935ad... ..
  e2:	08 95       	ret

000000e4 <CAR_INIT>:

void CAR_INIT(){

// Set enable pins as output

DIO_INIT_BIT(PORT_B, EN1, OUTPUT);
  e4:	41 e0       	ldi	r20, 0x01	; 1
  e6:	50 e0       	ldi	r21, 0x00	; 0
  e8:	61 e0       	ldi	r22, 0x01	; 1
  ea:	70 e0       	ldi	r23, 0x00	; 0
  ec:	82 e0       	ldi	r24, 0x02	; 2
  ee:	90 e0       	ldi	r25, 0x00	; 0
  f0:	0e 94 d9 02 	call	0x5b2	; 0x5b2 <DIO_INIT_BIT>
DIO_INIT_BIT(PORT_B, EN2, OUTPUT);
  f4:	41 e0       	ldi	r20, 0x01	; 1
  f6:	50 e0       	ldi	r21, 0x00	; 0
  f8:	62 e0       	ldi	r22, 0x02	; 2
  fa:	70 e0       	ldi	r23, 0x00	; 0
  fc:	82 e0       	ldi	r24, 0x02	; 2
  fe:	90 e0       	ldi	r25, 0x00	; 0
 100:	0e 94 d9 02 	call	0x5b2	; 0x5b2 <DIO_INIT_BIT>

// Set direction control pins as output

DIO_INIT_BIT(PORT_B, M1_B, OUTPUT);
 104:	41 e0       	ldi	r20, 0x01	; 1
 106:	50 e0       	ldi	r21, 0x00	; 0
 108:	64 e0       	ldi	r22, 0x04	; 4
 10a:	70 e0       	ldi	r23, 0x00	; 0
 10c:	82 e0       	ldi	r24, 0x02	; 2
 10e:	90 e0       	ldi	r25, 0x00	; 0
 110:	0e 94 d9 02 	call	0x5b2	; 0x5b2 <DIO_INIT_BIT>
DIO_INIT_BIT(PORT_B, M1_F, OUTPUT);
 114:	41 e0       	ldi	r20, 0x01	; 1
 116:	50 e0       	ldi	r21, 0x00	; 0
 118:	65 e0       	ldi	r22, 0x05	; 5
 11a:	70 e0       	ldi	r23, 0x00	; 0
 11c:	82 e0       	ldi	r24, 0x02	; 2
 11e:	90 e0       	ldi	r25, 0x00	; 0
 120:	0e 94 d9 02 	call	0x5b2	; 0x5b2 <DIO_INIT_BIT>
DIO_INIT_BIT(PORT_B, M2_B, OUTPUT);
 124:	41 e0       	ldi	r20, 0x01	; 1
 126:	50 e0       	ldi	r21, 0x00	; 0
 128:	66 e0       	ldi	r22, 0x06	; 6
 12a:	70 e0       	ldi	r23, 0x00	; 0
 12c:	82 e0       	ldi	r24, 0x02	; 2
 12e:	90 e0       	ldi	r25, 0x00	; 0
 130:	0e 94 d9 02 	call	0x5b2	; 0x5b2 <DIO_INIT_BIT>
DIO_INIT_BIT(PORT_B, M2_F, OUTPUT);
 134:	41 e0       	ldi	r20, 0x01	; 1
 136:	50 e0       	ldi	r21, 0x00	; 0
 138:	67 e0       	ldi	r22, 0x07	; 7
 13a:	70 e0       	ldi	r23, 0x00	; 0
 13c:	82 e0       	ldi	r24, 0x02	; 2
 13e:	90 e0       	ldi	r25, 0x00	; 0
 140:	0e 94 d9 02 	call	0x5b2	; 0x5b2 <DIO_INIT_BIT>

// Set initial direction as forward and initial speed 30%

DIO_WRITE_BIT(PORT_B, M1_F, HIGH);
 144:	41 e0       	ldi	r20, 0x01	; 1
 146:	50 e0       	ldi	r21, 0x00	; 0
 148:	65 e0       	ldi	r22, 0x05	; 5
 14a:	70 e0       	ldi	r23, 0x00	; 0
 14c:	82 e0       	ldi	r24, 0x02	; 2
 14e:	90 e0       	ldi	r25, 0x00	; 0
 150:	0e 94 60 03 	call	0x6c0	; 0x6c0 <DIO_WRITE_BIT>
DIO_WRITE_BIT(PORT_B, M2_F, HIGH);
 154:	41 e0       	ldi	r20, 0x01	; 1
 156:	50 e0       	ldi	r21, 0x00	; 0
 158:	67 e0       	ldi	r22, 0x07	; 7
 15a:	70 e0       	ldi	r23, 0x00	; 0
 15c:	82 e0       	ldi	r24, 0x02	; 2
 15e:	90 e0       	ldi	r25, 0x00	; 0
 160:	0e 94 60 03 	call	0x6c0	; 0x6c0 <DIO_WRITE_BIT>
 164:	08 95       	ret

00000166 <CAR_FORWARD>:

}

void CAR_FORWARD(){
	DIO_WRITE_BIT(PORT_B, M1_F, HIGH);
 166:	41 e0       	ldi	r20, 0x01	; 1
 168:	50 e0       	ldi	r21, 0x00	; 0
 16a:	65 e0       	ldi	r22, 0x05	; 5
 16c:	70 e0       	ldi	r23, 0x00	; 0
 16e:	82 e0       	ldi	r24, 0x02	; 2
 170:	90 e0       	ldi	r25, 0x00	; 0
 172:	0e 94 60 03 	call	0x6c0	; 0x6c0 <DIO_WRITE_BIT>
	DIO_WRITE_BIT(PORT_B, M1_B, LOW);
 176:	40 e0       	ldi	r20, 0x00	; 0
 178:	50 e0       	ldi	r21, 0x00	; 0
 17a:	64 e0       	ldi	r22, 0x04	; 4
 17c:	70 e0       	ldi	r23, 0x00	; 0
 17e:	82 e0       	ldi	r24, 0x02	; 2
 180:	90 e0       	ldi	r25, 0x00	; 0
 182:	0e 94 60 03 	call	0x6c0	; 0x6c0 <DIO_WRITE_BIT>
	DIO_WRITE_BIT(PORT_B, M2_F, HIGH);
 186:	41 e0       	ldi	r20, 0x01	; 1
 188:	50 e0       	ldi	r21, 0x00	; 0
 18a:	67 e0       	ldi	r22, 0x07	; 7
 18c:	70 e0       	ldi	r23, 0x00	; 0
 18e:	82 e0       	ldi	r24, 0x02	; 2
 190:	90 e0       	ldi	r25, 0x00	; 0
 192:	0e 94 60 03 	call	0x6c0	; 0x6c0 <DIO_WRITE_BIT>
	DIO_WRITE_BIT(PORT_B, M2_B, LOW);
 196:	40 e0       	ldi	r20, 0x00	; 0
 198:	50 e0       	ldi	r21, 0x00	; 0
 19a:	66 e0       	ldi	r22, 0x06	; 6
 19c:	70 e0       	ldi	r23, 0x00	; 0
 19e:	82 e0       	ldi	r24, 0x02	; 2
 1a0:	90 e0       	ldi	r25, 0x00	; 0
 1a2:	0e 94 60 03 	call	0x6c0	; 0x6c0 <DIO_WRITE_BIT>
 1a6:	08 95       	ret

000001a8 <CAR_BACKWARD>:
}

void CAR_BACKWARD(){
	DIO_WRITE_BIT(PORT_B, M1_F, LOW);
 1a8:	40 e0       	ldi	r20, 0x00	; 0
 1aa:	50 e0       	ldi	r21, 0x00	; 0
 1ac:	65 e0       	ldi	r22, 0x05	; 5
 1ae:	70 e0       	ldi	r23, 0x00	; 0
 1b0:	82 e0       	ldi	r24, 0x02	; 2
 1b2:	90 e0       	ldi	r25, 0x00	; 0
 1b4:	0e 94 60 03 	call	0x6c0	; 0x6c0 <DIO_WRITE_BIT>
	DIO_WRITE_BIT(PORT_B, M1_B, HIGH);
 1b8:	41 e0       	ldi	r20, 0x01	; 1
 1ba:	50 e0       	ldi	r21, 0x00	; 0
 1bc:	64 e0       	ldi	r22, 0x04	; 4
 1be:	70 e0       	ldi	r23, 0x00	; 0
 1c0:	82 e0       	ldi	r24, 0x02	; 2
 1c2:	90 e0       	ldi	r25, 0x00	; 0
 1c4:	0e 94 60 03 	call	0x6c0	; 0x6c0 <DIO_WRITE_BIT>
	DIO_WRITE_BIT(PORT_B, M2_F, LOW);
 1c8:	40 e0       	ldi	r20, 0x00	; 0
 1ca:	50 e0       	ldi	r21, 0x00	; 0
 1cc:	67 e0       	ldi	r22, 0x07	; 7
 1ce:	70 e0       	ldi	r23, 0x00	; 0
 1d0:	82 e0       	ldi	r24, 0x02	; 2
 1d2:	90 e0       	ldi	r25, 0x00	; 0
 1d4:	0e 94 60 03 	call	0x6c0	; 0x6c0 <DIO_WRITE_BIT>
	DIO_WRITE_BIT(PORT_B, M2_B, HIGH);
 1d8:	41 e0       	ldi	r20, 0x01	; 1
 1da:	50 e0       	ldi	r21, 0x00	; 0
 1dc:	66 e0       	ldi	r22, 0x06	; 6
 1de:	70 e0       	ldi	r23, 0x00	; 0
 1e0:	82 e0       	ldi	r24, 0x02	; 2
 1e2:	90 e0       	ldi	r25, 0x00	; 0
 1e4:	0e 94 60 03 	call	0x6c0	; 0x6c0 <DIO_WRITE_BIT>
 1e8:	08 95       	ret

000001ea <CAR_LEFT>:
}

void CAR_LEFT(){
	DIO_WRITE_BIT(PORT_B, M1_F, HIGH);
 1ea:	41 e0       	ldi	r20, 0x01	; 1
 1ec:	50 e0       	ldi	r21, 0x00	; 0
 1ee:	65 e0       	ldi	r22, 0x05	; 5
 1f0:	70 e0       	ldi	r23, 0x00	; 0
 1f2:	82 e0       	ldi	r24, 0x02	; 2
 1f4:	90 e0       	ldi	r25, 0x00	; 0
 1f6:	0e 94 60 03 	call	0x6c0	; 0x6c0 <DIO_WRITE_BIT>
	DIO_WRITE_BIT(PORT_B, M1_B, LOW);
 1fa:	40 e0       	ldi	r20, 0x00	; 0
 1fc:	50 e0       	ldi	r21, 0x00	; 0
 1fe:	64 e0       	ldi	r22, 0x04	; 4
 200:	70 e0       	ldi	r23, 0x00	; 0
 202:	82 e0       	ldi	r24, 0x02	; 2
 204:	90 e0       	ldi	r25, 0x00	; 0
 206:	0e 94 60 03 	call	0x6c0	; 0x6c0 <DIO_WRITE_BIT>
	DIO_WRITE_BIT(PORT_B, M2_F, LOW);
 20a:	40 e0       	ldi	r20, 0x00	; 0
 20c:	50 e0       	ldi	r21, 0x00	; 0
 20e:	67 e0       	ldi	r22, 0x07	; 7
 210:	70 e0       	ldi	r23, 0x00	; 0
 212:	82 e0       	ldi	r24, 0x02	; 2
 214:	90 e0       	ldi	r25, 0x00	; 0
 216:	0e 94 60 03 	call	0x6c0	; 0x6c0 <DIO_WRITE_BIT>
	DIO_WRITE_BIT(PORT_B, M2_B, HIGH);
 21a:	41 e0       	ldi	r20, 0x01	; 1
 21c:	50 e0       	ldi	r21, 0x00	; 0
 21e:	66 e0       	ldi	r22, 0x06	; 6
 220:	70 e0       	ldi	r23, 0x00	; 0
 222:	82 e0       	ldi	r24, 0x02	; 2
 224:	90 e0       	ldi	r25, 0x00	; 0
 226:	0e 94 60 03 	call	0x6c0	; 0x6c0 <DIO_WRITE_BIT>
 22a:	08 95       	ret

0000022c <CAR_RIGHT>:
}

void CAR_RIGHT(){
	DIO_WRITE_BIT(PORT_B, M1_F, LOW);
 22c:	40 e0       	ldi	r20, 0x00	; 0
 22e:	50 e0       	ldi	r21, 0x00	; 0
 230:	65 e0       	ldi	r22, 0x05	; 5
 232:	70 e0       	ldi	r23, 0x00	; 0
 234:	82 e0       	ldi	r24, 0x02	; 2
 236:	90 e0       	ldi	r25, 0x00	; 0
 238:	0e 94 60 03 	call	0x6c0	; 0x6c0 <DIO_WRITE_BIT>
	DIO_WRITE_BIT(PORT_B, M1_B, HIGH);
 23c:	41 e0       	ldi	r20, 0x01	; 1
 23e:	50 e0       	ldi	r21, 0x00	; 0
 240:	64 e0       	ldi	r22, 0x04	; 4
 242:	70 e0       	ldi	r23, 0x00	; 0
 244:	82 e0       	ldi	r24, 0x02	; 2
 246:	90 e0       	ldi	r25, 0x00	; 0
 248:	0e 94 60 03 	call	0x6c0	; 0x6c0 <DIO_WRITE_BIT>
	DIO_WRITE_BIT(PORT_B, M2_F, HIGH);
 24c:	41 e0       	ldi	r20, 0x01	; 1
 24e:	50 e0       	ldi	r21, 0x00	; 0
 250:	67 e0       	ldi	r22, 0x07	; 7
 252:	70 e0       	ldi	r23, 0x00	; 0
 254:	82 e0       	ldi	r24, 0x02	; 2
 256:	90 e0       	ldi	r25, 0x00	; 0
 258:	0e 94 60 03 	call	0x6c0	; 0x6c0 <DIO_WRITE_BIT>
	DIO_WRITE_BIT(PORT_B, M2_B, LOW);
 25c:	40 e0       	ldi	r20, 0x00	; 0
 25e:	50 e0       	ldi	r21, 0x00	; 0
 260:	66 e0       	ldi	r22, 0x06	; 6
 262:	70 e0       	ldi	r23, 0x00	; 0
 264:	82 e0       	ldi	r24, 0x02	; 2
 266:	90 e0       	ldi	r25, 0x00	; 0
 268:	0e 94 60 03 	call	0x6c0	; 0x6c0 <DIO_WRITE_BIT>
 26c:	08 95       	ret

0000026e <CAR_STOP>:
}

void CAR_STOP(){
	
<<<<<<< HEAD
	PWM_STOP();
 26e:	0e 94 df 04 	call	0x9be	; 0x9be <PWM_STOP>
	DIO_WRITE_BIT(PORT_B, EN1 , LOW);
 272:	40 e0       	ldi	r20, 0x00	; 0
 274:	50 e0       	ldi	r21, 0x00	; 0
 276:	61 e0       	ldi	r22, 0x01	; 1
 278:	70 e0       	ldi	r23, 0x00	; 0
 27a:	82 e0       	ldi	r24, 0x02	; 2
 27c:	90 e0       	ldi	r25, 0x00	; 0
 27e:	0e 94 5a 03 	call	0x6b4	; 0x6b4 <DIO_WRITE_BIT>
	DIO_WRITE_BIT(PORT_B, EN2 , LOW);
 282:	40 e0       	ldi	r20, 0x00	; 0
 284:	50 e0       	ldi	r21, 0x00	; 0
 286:	62 e0       	ldi	r22, 0x02	; 2
 288:	70 e0       	ldi	r23, 0x00	; 0
 28a:	82 e0       	ldi	r24, 0x02	; 2
 28c:	90 e0       	ldi	r25, 0x00	; 0
 28e:	0e 94 5a 03 	call	0x6b4	; 0x6b4 <DIO_WRITE_BIT>
 292:	08 95       	ret

00000294 <CAR_MOTORS_ON>:
}


void CAR_MOTORS_ON(){
	DIO_WRITE_BIT(PORT_B, EN1 , HIGH);
 294:	41 e0       	ldi	r20, 0x01	; 1
 296:	50 e0       	ldi	r21, 0x00	; 0
 298:	61 e0       	ldi	r22, 0x01	; 1
 29a:	70 e0       	ldi	r23, 0x00	; 0
 29c:	82 e0       	ldi	r24, 0x02	; 2
 29e:	90 e0       	ldi	r25, 0x00	; 0
 2a0:	0e 94 5a 03 	call	0x6b4	; 0x6b4 <DIO_WRITE_BIT>
	DIO_WRITE_BIT(PORT_B, EN2 , HIGH);
 2a4:	41 e0       	ldi	r20, 0x01	; 1
 2a6:	50 e0       	ldi	r21, 0x00	; 0
 2a8:	62 e0       	ldi	r22, 0x02	; 2
 2aa:	70 e0       	ldi	r23, 0x00	; 0
 2ac:	82 e0       	ldi	r24, 0x02	; 2
 2ae:	90 e0       	ldi	r25, 0x00	; 0
 2b0:	0e 94 5a 03 	call	0x6b4	; 0x6b4 <DIO_WRITE_BIT>
 2b4:	08 95       	ret

000002b6 <CAR_MOTORS_OFF>:
}

void CAR_MOTORS_OFF(){
=======
	TIM0_STOP();
 26e:	0e 94 43 04 	call	0x886	; 0x886 <TIM0_STOP>
	_TIMSK_ &=~(1<<_TOIE0_);
 272:	89 b7       	in	r24, 0x39	; 57
 274:	8e 7f       	andi	r24, 0xFE	; 254
 276:	89 bf       	out	0x39, r24	; 57
>>>>>>> parent of e4935ad... ..
	DIO_WRITE_BIT(PORT_B, EN1 , LOW);
 278:	40 e0       	ldi	r20, 0x00	; 0
 27a:	50 e0       	ldi	r21, 0x00	; 0
 27c:	61 e0       	ldi	r22, 0x01	; 1
 27e:	70 e0       	ldi	r23, 0x00	; 0
 280:	82 e0       	ldi	r24, 0x02	; 2
 282:	90 e0       	ldi	r25, 0x00	; 0
 284:	0e 94 60 03 	call	0x6c0	; 0x6c0 <DIO_WRITE_BIT>
	DIO_WRITE_BIT(PORT_B, EN2 , LOW);
 288:	40 e0       	ldi	r20, 0x00	; 0
 28a:	50 e0       	ldi	r21, 0x00	; 0
 28c:	62 e0       	ldi	r22, 0x02	; 2
 28e:	70 e0       	ldi	r23, 0x00	; 0
 290:	82 e0       	ldi	r24, 0x02	; 2
 292:	90 e0       	ldi	r25, 0x00	; 0
 294:	0e 94 60 03 	call	0x6c0	; 0x6c0 <DIO_WRITE_BIT>
 298:	08 95       	ret

0000029a <REMOTE_INIT>:

void REMOTE_INIT(){

// Enable pin pull-ups for all connected push-buttons

DIO_INIT_BIT(PORT_A, LEFT_B, INPUT);
 29a:	40 e0       	ldi	r20, 0x00	; 0
 29c:	50 e0       	ldi	r21, 0x00	; 0
 29e:	61 e0       	ldi	r22, 0x01	; 1
 2a0:	70 e0       	ldi	r23, 0x00	; 0
 2a2:	81 e0       	ldi	r24, 0x01	; 1
 2a4:	90 e0       	ldi	r25, 0x00	; 0
 2a6:	0e 94 d9 02 	call	0x5b2	; 0x5b2 <DIO_INIT_BIT>
DIO_INIT_BIT(PORT_A, RIGHT_B, INPUT);
 2aa:	40 e0       	ldi	r20, 0x00	; 0
 2ac:	50 e0       	ldi	r21, 0x00	; 0
 2ae:	63 e0       	ldi	r22, 0x03	; 3
 2b0:	70 e0       	ldi	r23, 0x00	; 0
 2b2:	81 e0       	ldi	r24, 0x01	; 1
 2b4:	90 e0       	ldi	r25, 0x00	; 0
 2b6:	0e 94 d9 02 	call	0x5b2	; 0x5b2 <DIO_INIT_BIT>
DIO_INIT_BIT(PORT_A, MOVE_STOP_B, INPUT);
 2ba:	40 e0       	ldi	r20, 0x00	; 0
 2bc:	50 e0       	ldi	r21, 0x00	; 0
 2be:	65 e0       	ldi	r22, 0x05	; 5
 2c0:	70 e0       	ldi	r23, 0x00	; 0
 2c2:	81 e0       	ldi	r24, 0x01	; 1
 2c4:	90 e0       	ldi	r25, 0x00	; 0
 2c6:	0e 94 d9 02 	call	0x5b2	; 0x5b2 <DIO_INIT_BIT>
DIO_INIT_BIT(PORT_A, CHNG_SPD_DIR_B, INPUT);
 2ca:	40 e0       	ldi	r20, 0x00	; 0
 2cc:	50 e0       	ldi	r21, 0x00	; 0
 2ce:	67 e0       	ldi	r22, 0x07	; 7
 2d0:	70 e0       	ldi	r23, 0x00	; 0
 2d2:	81 e0       	ldi	r24, 0x01	; 1
 2d4:	90 e0       	ldi	r25, 0x00	; 0
 2d6:	0e 94 d9 02 	call	0x5b2	; 0x5b2 <DIO_INIT_BIT>

DIO_WRITE_BIT(PORT_A, LEFT_B, HIGH);
 2da:	41 e0       	ldi	r20, 0x01	; 1
 2dc:	50 e0       	ldi	r21, 0x00	; 0
 2de:	61 e0       	ldi	r22, 0x01	; 1
 2e0:	70 e0       	ldi	r23, 0x00	; 0
 2e2:	81 e0       	ldi	r24, 0x01	; 1
 2e4:	90 e0       	ldi	r25, 0x00	; 0
 2e6:	0e 94 60 03 	call	0x6c0	; 0x6c0 <DIO_WRITE_BIT>
DIO_WRITE_BIT(PORT_A, RIGHT_B, HIGH);
 2ea:	41 e0       	ldi	r20, 0x01	; 1
 2ec:	50 e0       	ldi	r21, 0x00	; 0
 2ee:	63 e0       	ldi	r22, 0x03	; 3
 2f0:	70 e0       	ldi	r23, 0x00	; 0
 2f2:	81 e0       	ldi	r24, 0x01	; 1
 2f4:	90 e0       	ldi	r25, 0x00	; 0
 2f6:	0e 94 60 03 	call	0x6c0	; 0x6c0 <DIO_WRITE_BIT>
DIO_WRITE_BIT(PORT_A, MOVE_STOP_B, HIGH);
 2fa:	41 e0       	ldi	r20, 0x01	; 1
 2fc:	50 e0       	ldi	r21, 0x00	; 0
 2fe:	65 e0       	ldi	r22, 0x05	; 5
 300:	70 e0       	ldi	r23, 0x00	; 0
 302:	81 e0       	ldi	r24, 0x01	; 1
 304:	90 e0       	ldi	r25, 0x00	; 0
 306:	0e 94 60 03 	call	0x6c0	; 0x6c0 <DIO_WRITE_BIT>
DIO_WRITE_BIT(PORT_A, CHNG_SPD_DIR_B, HIGH);
 30a:	41 e0       	ldi	r20, 0x01	; 1
 30c:	50 e0       	ldi	r21, 0x00	; 0
 30e:	67 e0       	ldi	r22, 0x07	; 7
 310:	70 e0       	ldi	r23, 0x00	; 0
 312:	81 e0       	ldi	r24, 0x01	; 1
 314:	90 e0       	ldi	r25, 0x00	; 0
 316:	0e 94 60 03 	call	0x6c0	; 0x6c0 <DIO_WRITE_BIT>
 31a:	08 95       	ret

0000031c <REMOTE_MOVE>:

}


void REMOTE_MOVE(){
 31c:	cf 92       	push	r12
 31e:	df 92       	push	r13
 320:	ef 92       	push	r14
 322:	ff 92       	push	r15
	_TIMSK_ |= (1<<_TOIE0_);
 324:	89 b7       	in	r24, 0x39	; 57
 326:	81 60       	ori	r24, 0x01	; 1
 328:	89 bf       	out	0x39, r24	; 57
	if(direction == 1){
 32a:	80 91 68 00 	lds	r24, 0x0068	; 0x800068 <direction>
 32e:	90 91 69 00 	lds	r25, 0x0069	; 0x800069 <direction+0x1>
 332:	81 30       	cpi	r24, 0x01	; 1
 334:	91 05       	cpc	r25, r1
 336:	19 f4       	brne	.+6      	; 0x33e <REMOTE_MOVE+0x22>
		CAR_FORWARD();
 338:	0e 94 b3 00 	call	0x166	; 0x166 <CAR_FORWARD>
 33c:	04 c0       	rjmp	.+8      	; 0x346 <REMOTE_MOVE+0x2a>
	}
	else if(direction == 2){
 33e:	02 97       	sbiw	r24, 0x02	; 2
 340:	11 f4       	brne	.+4      	; 0x346 <REMOTE_MOVE+0x2a>
		CAR_BACKWARD();
 342:	0e 94 d4 00 	call	0x1a8	; 0x1a8 <CAR_BACKWARD>
	}
	TIM0_PWM_start(duty, freq);
 346:	c0 90 64 00 	lds	r12, 0x0064	; 0x800064 <freq>
 34a:	d0 90 65 00 	lds	r13, 0x0065	; 0x800065 <freq+0x1>
 34e:	e0 90 66 00 	lds	r14, 0x0066	; 0x800066 <freq+0x2>
 352:	f0 90 67 00 	lds	r15, 0x0067	; 0x800067 <freq+0x3>
 356:	60 91 62 00 	lds	r22, 0x0062	; 0x800062 <duty>
 35a:	70 91 63 00 	lds	r23, 0x0063	; 0x800063 <duty+0x1>
 35e:	07 2e       	mov	r0, r23
 360:	00 0c       	add	r0, r0
 362:	88 0b       	sbc	r24, r24
 364:	99 0b       	sbc	r25, r25
 366:	0e 94 f4 05 	call	0xbe8	; 0xbe8 <__floatsisf>
 36a:	a7 01       	movw	r20, r14
 36c:	96 01       	movw	r18, r12
 36e:	0e 94 69 04 	call	0x8d2	; 0x8d2 <TIM0_PWM_start>
}
 372:	ff 90       	pop	r15
 374:	ef 90       	pop	r14
 376:	df 90       	pop	r13
 378:	cf 90       	pop	r12
 37a:	08 95       	ret

0000037c <REMOTE_LEFT>:

void REMOTE_LEFT(){
	_TIMSK_ |= (1<<_TOIE0_);
 37c:	89 b7       	in	r24, 0x39	; 57
 37e:	81 60       	ori	r24, 0x01	; 1
 380:	89 bf       	out	0x39, r24	; 57
	CAR_LEFT();
 382:	0e 94 f5 00 	call	0x1ea	; 0x1ea <CAR_LEFT>
	TIM0_PWM_start(DUTY_30, freq);
 386:	20 91 64 00 	lds	r18, 0x0064	; 0x800064 <freq>
 38a:	30 91 65 00 	lds	r19, 0x0065	; 0x800065 <freq+0x1>
 38e:	40 91 66 00 	lds	r20, 0x0066	; 0x800066 <freq+0x2>
 392:	50 91 67 00 	lds	r21, 0x0067	; 0x800067 <freq+0x3>
 396:	60 e0       	ldi	r22, 0x00	; 0
 398:	70 e0       	ldi	r23, 0x00	; 0
 39a:	80 ef       	ldi	r24, 0xF0	; 240
 39c:	91 e4       	ldi	r25, 0x41	; 65
 39e:	0e 94 69 04 	call	0x8d2	; 0x8d2 <TIM0_PWM_start>
 3a2:	08 95       	ret

000003a4 <REMOTE_RIGHT>:
}

void REMOTE_RIGHT(){
	_TIMSK_ |= (1<<_TOIE0_);
 3a4:	89 b7       	in	r24, 0x39	; 57
 3a6:	81 60       	ori	r24, 0x01	; 1
 3a8:	89 bf       	out	0x39, r24	; 57
	CAR_RIGHT();
 3aa:	0e 94 16 01 	call	0x22c	; 0x22c <CAR_RIGHT>
	TIM0_PWM_start(DUTY_30, freq);
 3ae:	20 91 64 00 	lds	r18, 0x0064	; 0x800064 <freq>
 3b2:	30 91 65 00 	lds	r19, 0x0065	; 0x800065 <freq+0x1>
 3b6:	40 91 66 00 	lds	r20, 0x0066	; 0x800066 <freq+0x2>
 3ba:	50 91 67 00 	lds	r21, 0x0067	; 0x800067 <freq+0x3>
 3be:	60 e0       	ldi	r22, 0x00	; 0
 3c0:	70 e0       	ldi	r23, 0x00	; 0
 3c2:	80 ef       	ldi	r24, 0xF0	; 240
 3c4:	91 e4       	ldi	r25, 0x41	; 65
 3c6:	0e 94 69 04 	call	0x8d2	; 0x8d2 <TIM0_PWM_start>
 3ca:	08 95       	ret

000003cc <REMOTE_G>:
}

void REMOTE_G(){
	count++;
<<<<<<< HEAD
 3f8:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <__data_start>
 3fc:	90 91 61 00 	lds	r25, 0x0061	; 0x800061 <__data_start+0x1>
 400:	01 96       	adiw	r24, 0x01	; 1
 402:	90 93 61 00 	sts	0x0061, r25	; 0x800061 <__data_start+0x1>
 406:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__data_start>
=======
 3cc:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <__data_start>
 3d0:	90 91 61 00 	lds	r25, 0x0061	; 0x800061 <__data_start+0x1>
 3d4:	01 96       	adiw	r24, 0x01	; 1
 3d6:	90 93 61 00 	sts	0x0061, r25	; 0x800061 <__data_start+0x1>
 3da:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__data_start>
>>>>>>> parent of e4935ad... ..
	if (count == 1){
 3de:	81 30       	cpi	r24, 0x01	; 1
 3e0:	91 05       	cpc	r25, r1
 3e2:	69 f4       	brne	.+26     	; 0x3fe <REMOTE_G+0x32>
		duty = DUTY_30;
 3e4:	8e e1       	ldi	r24, 0x1E	; 30
 3e6:	90 e0       	ldi	r25, 0x00	; 0
 3e8:	90 93 63 00 	sts	0x0063, r25	; 0x800063 <duty+0x1>
 3ec:	80 93 62 00 	sts	0x0062, r24	; 0x800062 <duty>
		direction = FORWARD;
 3f0:	81 e0       	ldi	r24, 0x01	; 1
 3f2:	90 e0       	ldi	r25, 0x00	; 0
 3f4:	90 93 69 00 	sts	0x0069, r25	; 0x800069 <direction+0x1>
 3f8:	80 93 68 00 	sts	0x0068, r24	; 0x800068 <direction>
 3fc:	32 c0       	rjmp	.+100    	; 0x462 <__LOCK_REGION_LENGTH__+0x62>
	}
	else if(count == 2){
 3fe:	82 30       	cpi	r24, 0x02	; 2
 400:	91 05       	cpc	r25, r1
 402:	69 f4       	brne	.+26     	; 0x41e <__LOCK_REGION_LENGTH__+0x1e>
		duty = DUTY_60;
 404:	8c e3       	ldi	r24, 0x3C	; 60
 406:	90 e0       	ldi	r25, 0x00	; 0
 408:	90 93 63 00 	sts	0x0063, r25	; 0x800063 <duty+0x1>
 40c:	80 93 62 00 	sts	0x0062, r24	; 0x800062 <duty>
		direction = FORWARD;
 410:	81 e0       	ldi	r24, 0x01	; 1
 412:	90 e0       	ldi	r25, 0x00	; 0
 414:	90 93 69 00 	sts	0x0069, r25	; 0x800069 <direction+0x1>
 418:	80 93 68 00 	sts	0x0068, r24	; 0x800068 <direction>
 41c:	22 c0       	rjmp	.+68     	; 0x462 <__LOCK_REGION_LENGTH__+0x62>
	}
	else if(count == 3){
 41e:	83 30       	cpi	r24, 0x03	; 3
 420:	91 05       	cpc	r25, r1
 422:	69 f4       	brne	.+26     	; 0x43e <__LOCK_REGION_LENGTH__+0x3e>
		duty = DUTY_90;
 424:	8a e5       	ldi	r24, 0x5A	; 90
 426:	90 e0       	ldi	r25, 0x00	; 0
 428:	90 93 63 00 	sts	0x0063, r25	; 0x800063 <duty+0x1>
 42c:	80 93 62 00 	sts	0x0062, r24	; 0x800062 <duty>
		direction = FORWARD;
 430:	81 e0       	ldi	r24, 0x01	; 1
 432:	90 e0       	ldi	r25, 0x00	; 0
 434:	90 93 69 00 	sts	0x0069, r25	; 0x800069 <direction+0x1>
 438:	80 93 68 00 	sts	0x0068, r24	; 0x800068 <direction>
 43c:	12 c0       	rjmp	.+36     	; 0x462 <__LOCK_REGION_LENGTH__+0x62>
	}
	else if(count == 4){
 43e:	04 97       	sbiw	r24, 0x04	; 4
 440:	81 f4       	brne	.+32     	; 0x462 <__LOCK_REGION_LENGTH__+0x62>
		duty = DUTY_30;
 442:	8e e1       	ldi	r24, 0x1E	; 30
 444:	90 e0       	ldi	r25, 0x00	; 0
 446:	90 93 63 00 	sts	0x0063, r25	; 0x800063 <duty+0x1>
 44a:	80 93 62 00 	sts	0x0062, r24	; 0x800062 <duty>
		direction = BACKWARD;
 44e:	82 e0       	ldi	r24, 0x02	; 2
 450:	90 e0       	ldi	r25, 0x00	; 0
 452:	90 93 69 00 	sts	0x0069, r25	; 0x800069 <direction+0x1>
 456:	80 93 68 00 	sts	0x0068, r24	; 0x800068 <direction>
		count = 0;
<<<<<<< HEAD
 486:	10 92 61 00 	sts	0x0061, r1	; 0x800061 <__data_start+0x1>
 48a:	10 92 60 00 	sts	0x0060, r1	; 0x800060 <__data_start>
=======
 45a:	10 92 61 00 	sts	0x0061, r1	; 0x800061 <__data_start+0x1>
 45e:	10 92 60 00 	sts	0x0060, r1	; 0x800060 <__data_start>
>>>>>>> parent of e4935ad... ..
	}
	while(!DIO_READ_BIT(PORT_A, CHNG_SPD_DIR_B));
 462:	67 e0       	ldi	r22, 0x07	; 7
 464:	70 e0       	ldi	r23, 0x00	; 0
 466:	81 e0       	ldi	r24, 0x01	; 1
 468:	90 e0       	ldi	r25, 0x00	; 0
 46a:	0e 94 e7 03 	call	0x7ce	; 0x7ce <DIO_READ_BIT>
 46e:	88 23       	and	r24, r24
 470:	c1 f3       	breq	.-16     	; 0x462 <__LOCK_REGION_LENGTH__+0x62>
}
 472:	08 95       	ret

00000474 <REMOTE_MOVE_PRESSED>:

int REMOTE_MOVE_PRESSED(){
	return !DIO_READ_BIT(PORT_A, MOVE_STOP_B);
 474:	65 e0       	ldi	r22, 0x05	; 5
 476:	70 e0       	ldi	r23, 0x00	; 0
 478:	81 e0       	ldi	r24, 0x01	; 1
 47a:	90 e0       	ldi	r25, 0x00	; 0
 47c:	0e 94 e7 03 	call	0x7ce	; 0x7ce <DIO_READ_BIT>
 480:	21 e0       	ldi	r18, 0x01	; 1
 482:	30 e0       	ldi	r19, 0x00	; 0
 484:	88 23       	and	r24, r24
 486:	11 f0       	breq	.+4      	; 0x48c <REMOTE_MOVE_PRESSED+0x18>
 488:	20 e0       	ldi	r18, 0x00	; 0
 48a:	30 e0       	ldi	r19, 0x00	; 0
}
 48c:	c9 01       	movw	r24, r18
 48e:	08 95       	ret

00000490 <REMOTE_LEFT_PRESSED>:

int REMOTE_LEFT_PRESSED(){
	return !DIO_READ_BIT(PORT_A, LEFT_B);
 490:	61 e0       	ldi	r22, 0x01	; 1
 492:	70 e0       	ldi	r23, 0x00	; 0
 494:	81 e0       	ldi	r24, 0x01	; 1
 496:	90 e0       	ldi	r25, 0x00	; 0
 498:	0e 94 e7 03 	call	0x7ce	; 0x7ce <DIO_READ_BIT>
 49c:	21 e0       	ldi	r18, 0x01	; 1
 49e:	30 e0       	ldi	r19, 0x00	; 0
 4a0:	88 23       	and	r24, r24
 4a2:	11 f0       	breq	.+4      	; 0x4a8 <REMOTE_LEFT_PRESSED+0x18>
 4a4:	20 e0       	ldi	r18, 0x00	; 0
 4a6:	30 e0       	ldi	r19, 0x00	; 0
}
 4a8:	c9 01       	movw	r24, r18
 4aa:	08 95       	ret

000004ac <REMOTE_RIGHT_PRESSED>:

int REMOTE_RIGHT_PRESSED(){
	return !DIO_READ_BIT(PORT_A, RIGHT_B);
 4ac:	63 e0       	ldi	r22, 0x03	; 3
 4ae:	70 e0       	ldi	r23, 0x00	; 0
 4b0:	81 e0       	ldi	r24, 0x01	; 1
 4b2:	90 e0       	ldi	r25, 0x00	; 0
 4b4:	0e 94 e7 03 	call	0x7ce	; 0x7ce <DIO_READ_BIT>
 4b8:	21 e0       	ldi	r18, 0x01	; 1
 4ba:	30 e0       	ldi	r19, 0x00	; 0
 4bc:	88 23       	and	r24, r24
 4be:	11 f0       	breq	.+4      	; 0x4c4 <REMOTE_RIGHT_PRESSED+0x18>
 4c0:	20 e0       	ldi	r18, 0x00	; 0
 4c2:	30 e0       	ldi	r19, 0x00	; 0
}
 4c4:	c9 01       	movw	r24, r18
 4c6:	08 95       	ret

000004c8 <REMOTE_G_PRESSED>:

int REMOTE_G_PRESSED(){
	return !DIO_READ_BIT(PORT_A, CHNG_SPD_DIR_B);
 4c8:	67 e0       	ldi	r22, 0x07	; 7
 4ca:	70 e0       	ldi	r23, 0x00	; 0
 4cc:	81 e0       	ldi	r24, 0x01	; 1
 4ce:	90 e0       	ldi	r25, 0x00	; 0
 4d0:	0e 94 e7 03 	call	0x7ce	; 0x7ce <DIO_READ_BIT>
 4d4:	21 e0       	ldi	r18, 0x01	; 1
 4d6:	30 e0       	ldi	r19, 0x00	; 0
 4d8:	88 23       	and	r24, r24
 4da:	11 f0       	breq	.+4      	; 0x4e0 <REMOTE_G_PRESSED+0x18>
 4dc:	20 e0       	ldi	r18, 0x00	; 0
 4de:	30 e0       	ldi	r19, 0x00	; 0
 4e0:	c9 01       	movw	r24, r18
 4e2:	08 95       	ret

000004e4 <main>:
int count = 1;

int main(void)
{

	APP_INIT();
 4e4:	0e 94 49 00 	call	0x92	; 0x92 <APP_INIT>
	
	
    while (1) 
    {
		
		APP_UPDATE();
 4e8:	0e 94 50 00 	call	0xa0	; 0xa0 <APP_UPDATE>
 4ec:	fd cf       	rjmp	.-6      	; 0x4e8 <main+0x4>

000004ee <__vector_11>:
		
    }
}

void __vector_11 (void)
{
 4ee:	1f 92       	push	r1
 4f0:	0f 92       	push	r0
 4f2:	0f b6       	in	r0, 0x3f	; 63
 4f4:	0f 92       	push	r0
 4f6:	11 24       	eor	r1, r1
 4f8:	2f 93       	push	r18
 4fa:	3f 93       	push	r19
 4fc:	4f 93       	push	r20
 4fe:	5f 93       	push	r21
 500:	6f 93       	push	r22
 502:	7f 93       	push	r23
 504:	8f 93       	push	r24
 506:	9f 93       	push	r25
 508:	af 93       	push	r26
 50a:	bf 93       	push	r27
 50c:	ef 93       	push	r30
 50e:	ff 93       	push	r31
	if (flag==0)
 510:	80 91 6a 00 	lds	r24, 0x006A	; 0x80006a <__data_end>
 514:	81 11       	cpse	r24, r1
 516:	1f c0       	rjmp	.+62     	; 0x556 <__vector_11+0x68>
	{
<<<<<<< HEAD
		CAR_MOTORS_ON();
 544:	0e 94 4a 01 	call	0x294	; 0x294 <CAR_MOTORS_ON>
=======
		DIO_WRITE_BIT(PORT_B, EN1 , HIGH);
 518:	41 e0       	ldi	r20, 0x01	; 1
 51a:	50 e0       	ldi	r21, 0x00	; 0
 51c:	61 e0       	ldi	r22, 0x01	; 1
 51e:	70 e0       	ldi	r23, 0x00	; 0
 520:	82 e0       	ldi	r24, 0x02	; 2
 522:	90 e0       	ldi	r25, 0x00	; 0
 524:	0e 94 60 03 	call	0x6c0	; 0x6c0 <DIO_WRITE_BIT>
		DIO_WRITE_BIT(PORT_B, EN2 , HIGH);
 528:	41 e0       	ldi	r20, 0x01	; 1
 52a:	50 e0       	ldi	r21, 0x00	; 0
 52c:	62 e0       	ldi	r22, 0x02	; 2
 52e:	70 e0       	ldi	r23, 0x00	; 0
 530:	82 e0       	ldi	r24, 0x02	; 2
 532:	90 e0       	ldi	r25, 0x00	; 0
 534:	0e 94 60 03 	call	0x6c0	; 0x6c0 <DIO_WRITE_BIT>
>>>>>>> parent of e4935ad... ..
		_TCNT0_=TON;
 538:	60 91 6f 00 	lds	r22, 0x006F	; 0x80006f <TON>
 53c:	70 91 70 00 	lds	r23, 0x0070	; 0x800070 <TON+0x1>
 540:	80 91 71 00 	lds	r24, 0x0071	; 0x800071 <TON+0x2>
 544:	90 91 72 00 	lds	r25, 0x0072	; 0x800072 <TON+0x3>
 548:	0e 94 c3 05 	call	0xb86	; 0xb86 <__fixunssfsi>
 54c:	62 bf       	out	0x32, r22	; 50
		flag=1;
 54e:	81 e0       	ldi	r24, 0x01	; 1
 550:	80 93 6a 00 	sts	0x006A, r24	; 0x80006a <__data_end>
 554:	1d c0       	rjmp	.+58     	; 0x590 <__vector_11+0xa2>
	}
	else
	{
<<<<<<< HEAD

		CAR_MOTORS_OFF();
 566:	0e 94 5b 01 	call	0x2b6	; 0x2b6 <CAR_MOTORS_OFF>
=======
		DIO_WRITE_BIT(PORT_B, EN1 , LOW);
 556:	40 e0       	ldi	r20, 0x00	; 0
 558:	50 e0       	ldi	r21, 0x00	; 0
 55a:	61 e0       	ldi	r22, 0x01	; 1
 55c:	70 e0       	ldi	r23, 0x00	; 0
 55e:	82 e0       	ldi	r24, 0x02	; 2
 560:	90 e0       	ldi	r25, 0x00	; 0
 562:	0e 94 60 03 	call	0x6c0	; 0x6c0 <DIO_WRITE_BIT>
		DIO_WRITE_BIT(PORT_B, EN2 , LOW);
 566:	40 e0       	ldi	r20, 0x00	; 0
 568:	50 e0       	ldi	r21, 0x00	; 0
 56a:	62 e0       	ldi	r22, 0x02	; 2
 56c:	70 e0       	ldi	r23, 0x00	; 0
 56e:	82 e0       	ldi	r24, 0x02	; 2
 570:	90 e0       	ldi	r25, 0x00	; 0
 572:	0e 94 60 03 	call	0x6c0	; 0x6c0 <DIO_WRITE_BIT>
>>>>>>> parent of e4935ad... ..
		_TCNT0_= TOFF;
 576:	60 91 6b 00 	lds	r22, 0x006B	; 0x80006b <TOFF>
 57a:	70 91 6c 00 	lds	r23, 0x006C	; 0x80006c <TOFF+0x1>
 57e:	80 91 6d 00 	lds	r24, 0x006D	; 0x80006d <TOFF+0x2>
 582:	90 91 6e 00 	lds	r25, 0x006E	; 0x80006e <TOFF+0x3>
 586:	0e 94 c3 05 	call	0xb86	; 0xb86 <__fixunssfsi>
 58a:	62 bf       	out	0x32, r22	; 50
		flag=0;
 58c:	10 92 6a 00 	sts	0x006A, r1	; 0x80006a <__data_end>
	}
<<<<<<< HEAD
 584:	ff 91       	pop	r31
 586:	ef 91       	pop	r30
 588:	bf 91       	pop	r27
 58a:	af 91       	pop	r26
 58c:	9f 91       	pop	r25
 58e:	8f 91       	pop	r24
 590:	7f 91       	pop	r23
 592:	6f 91       	pop	r22
 594:	5f 91       	pop	r21
 596:	4f 91       	pop	r20
 598:	3f 91       	pop	r19
 59a:	2f 91       	pop	r18
 59c:	0f 90       	pop	r0
 59e:	0f be       	out	0x3f, r0	; 63
 5a0:	0f 90       	pop	r0
 5a2:	1f 90       	pop	r1
 5a4:	18 95       	reti

000005a6 <DIO_INIT_BIT>:
 5a6:	82 30       	cpi	r24, 0x02	; 2
 5a8:	91 05       	cpc	r25, r1
 5aa:	51 f1       	breq	.+84     	; 0x600 <DIO_INIT_BIT+0x5a>
 5ac:	1c f4       	brge	.+6      	; 0x5b4 <DIO_INIT_BIT+0xe>
 5ae:	01 97       	sbiw	r24, 0x01	; 1
 5b0:	49 f0       	breq	.+18     	; 0x5c4 <DIO_INIT_BIT+0x1e>
 5b2:	08 95       	ret
 5b4:	83 30       	cpi	r24, 0x03	; 3
 5b6:	91 05       	cpc	r25, r1
 5b8:	09 f4       	brne	.+2      	; 0x5bc <DIO_INIT_BIT+0x16>
 5ba:	40 c0       	rjmp	.+128    	; 0x63c <DIO_INIT_BIT+0x96>
 5bc:	04 97       	sbiw	r24, 0x04	; 4
 5be:	09 f4       	brne	.+2      	; 0x5c2 <DIO_INIT_BIT+0x1c>
 5c0:	5b c0       	rjmp	.+182    	; 0x678 <DIO_INIT_BIT+0xd2>
 5c2:	08 95       	ret
 5c4:	41 15       	cp	r20, r1
 5c6:	51 05       	cpc	r21, r1
 5c8:	21 f0       	breq	.+8      	; 0x5d2 <DIO_INIT_BIT+0x2c>
 5ca:	41 30       	cpi	r20, 0x01	; 1
 5cc:	51 05       	cpc	r21, r1
 5ce:	69 f0       	breq	.+26     	; 0x5ea <DIO_INIT_BIT+0x44>
 5d0:	08 95       	ret
 5d2:	2a b3       	in	r18, 0x1a	; 26
 5d4:	81 e0       	ldi	r24, 0x01	; 1
 5d6:	90 e0       	ldi	r25, 0x00	; 0
 5d8:	02 c0       	rjmp	.+4      	; 0x5de <DIO_INIT_BIT+0x38>
 5da:	88 0f       	add	r24, r24
 5dc:	99 1f       	adc	r25, r25
 5de:	6a 95       	dec	r22
 5e0:	e2 f7       	brpl	.-8      	; 0x5da <DIO_INIT_BIT+0x34>
 5e2:	80 95       	com	r24
 5e4:	82 23       	and	r24, r18
 5e6:	8a bb       	out	0x1a, r24	; 26
 5e8:	08 95       	ret
 5ea:	2a b3       	in	r18, 0x1a	; 26
 5ec:	81 e0       	ldi	r24, 0x01	; 1
 5ee:	90 e0       	ldi	r25, 0x00	; 0
 5f0:	02 c0       	rjmp	.+4      	; 0x5f6 <DIO_INIT_BIT+0x50>
 5f2:	88 0f       	add	r24, r24
 5f4:	99 1f       	adc	r25, r25
 5f6:	6a 95       	dec	r22
 5f8:	e2 f7       	brpl	.-8      	; 0x5f2 <DIO_INIT_BIT+0x4c>
 5fa:	82 2b       	or	r24, r18
 5fc:	8a bb       	out	0x1a, r24	; 26
 5fe:	08 95       	ret
 600:	41 15       	cp	r20, r1
 602:	51 05       	cpc	r21, r1
 604:	21 f0       	breq	.+8      	; 0x60e <DIO_INIT_BIT+0x68>
 606:	41 30       	cpi	r20, 0x01	; 1
 608:	51 05       	cpc	r21, r1
 60a:	69 f0       	breq	.+26     	; 0x626 <DIO_INIT_BIT+0x80>
 60c:	08 95       	ret
 60e:	27 b3       	in	r18, 0x17	; 23
 610:	81 e0       	ldi	r24, 0x01	; 1
 612:	90 e0       	ldi	r25, 0x00	; 0
 614:	02 c0       	rjmp	.+4      	; 0x61a <DIO_INIT_BIT+0x74>
 616:	88 0f       	add	r24, r24
 618:	99 1f       	adc	r25, r25
 61a:	6a 95       	dec	r22
 61c:	e2 f7       	brpl	.-8      	; 0x616 <DIO_INIT_BIT+0x70>
 61e:	80 95       	com	r24
 620:	82 23       	and	r24, r18
 622:	87 bb       	out	0x17, r24	; 23
 624:	08 95       	ret
 626:	27 b3       	in	r18, 0x17	; 23
 628:	81 e0       	ldi	r24, 0x01	; 1
 62a:	90 e0       	ldi	r25, 0x00	; 0
 62c:	02 c0       	rjmp	.+4      	; 0x632 <DIO_INIT_BIT+0x8c>
 62e:	88 0f       	add	r24, r24
 630:	99 1f       	adc	r25, r25
 632:	6a 95       	dec	r22
 634:	e2 f7       	brpl	.-8      	; 0x62e <DIO_INIT_BIT+0x88>
 636:	82 2b       	or	r24, r18
 638:	87 bb       	out	0x17, r24	; 23
 63a:	08 95       	ret
 63c:	41 15       	cp	r20, r1
 63e:	51 05       	cpc	r21, r1
 640:	21 f0       	breq	.+8      	; 0x64a <DIO_INIT_BIT+0xa4>
 642:	41 30       	cpi	r20, 0x01	; 1
 644:	51 05       	cpc	r21, r1
 646:	69 f0       	breq	.+26     	; 0x662 <DIO_INIT_BIT+0xbc>
 648:	08 95       	ret
 64a:	24 b3       	in	r18, 0x14	; 20
 64c:	81 e0       	ldi	r24, 0x01	; 1
 64e:	90 e0       	ldi	r25, 0x00	; 0
 650:	02 c0       	rjmp	.+4      	; 0x656 <DIO_INIT_BIT+0xb0>
 652:	88 0f       	add	r24, r24
 654:	99 1f       	adc	r25, r25
 656:	6a 95       	dec	r22
 658:	e2 f7       	brpl	.-8      	; 0x652 <DIO_INIT_BIT+0xac>
 65a:	80 95       	com	r24
 65c:	82 23       	and	r24, r18
 65e:	84 bb       	out	0x14, r24	; 20
 660:	08 95       	ret
 662:	24 b3       	in	r18, 0x14	; 20
 664:	81 e0       	ldi	r24, 0x01	; 1
 666:	90 e0       	ldi	r25, 0x00	; 0
 668:	02 c0       	rjmp	.+4      	; 0x66e <DIO_INIT_BIT+0xc8>
 66a:	88 0f       	add	r24, r24
 66c:	99 1f       	adc	r25, r25
 66e:	6a 95       	dec	r22
 670:	e2 f7       	brpl	.-8      	; 0x66a <DIO_INIT_BIT+0xc4>
 672:	82 2b       	or	r24, r18
 674:	84 bb       	out	0x14, r24	; 20
 676:	08 95       	ret
 678:	41 15       	cp	r20, r1
 67a:	51 05       	cpc	r21, r1
 67c:	21 f0       	breq	.+8      	; 0x686 <DIO_INIT_BIT+0xe0>
 67e:	41 30       	cpi	r20, 0x01	; 1
 680:	51 05       	cpc	r21, r1
 682:	69 f0       	breq	.+26     	; 0x69e <DIO_INIT_BIT+0xf8>
 684:	08 95       	ret
 686:	21 b3       	in	r18, 0x11	; 17
 688:	81 e0       	ldi	r24, 0x01	; 1
 68a:	90 e0       	ldi	r25, 0x00	; 0
 68c:	02 c0       	rjmp	.+4      	; 0x692 <DIO_INIT_BIT+0xec>
 68e:	88 0f       	add	r24, r24
 690:	99 1f       	adc	r25, r25
 692:	6a 95       	dec	r22
 694:	e2 f7       	brpl	.-8      	; 0x68e <DIO_INIT_BIT+0xe8>
 696:	80 95       	com	r24
 698:	82 23       	and	r24, r18
 69a:	81 bb       	out	0x11, r24	; 17
 69c:	08 95       	ret
 69e:	21 b3       	in	r18, 0x11	; 17
 6a0:	81 e0       	ldi	r24, 0x01	; 1
 6a2:	90 e0       	ldi	r25, 0x00	; 0
 6a4:	02 c0       	rjmp	.+4      	; 0x6aa <DIO_INIT_BIT+0x104>
 6a6:	88 0f       	add	r24, r24
 6a8:	99 1f       	adc	r25, r25
 6aa:	6a 95       	dec	r22
 6ac:	e2 f7       	brpl	.-8      	; 0x6a6 <DIO_INIT_BIT+0x100>
 6ae:	82 2b       	or	r24, r18
 6b0:	81 bb       	out	0x11, r24	; 17
 6b2:	08 95       	ret

000006b4 <DIO_WRITE_BIT>:
 6b4:	82 30       	cpi	r24, 0x02	; 2
 6b6:	91 05       	cpc	r25, r1
 6b8:	51 f1       	breq	.+84     	; 0x70e <DIO_WRITE_BIT+0x5a>
 6ba:	1c f4       	brge	.+6      	; 0x6c2 <DIO_WRITE_BIT+0xe>
 6bc:	01 97       	sbiw	r24, 0x01	; 1
 6be:	49 f0       	breq	.+18     	; 0x6d2 <DIO_WRITE_BIT+0x1e>
 6c0:	08 95       	ret
 6c2:	83 30       	cpi	r24, 0x03	; 3
 6c4:	91 05       	cpc	r25, r1
 6c6:	09 f4       	brne	.+2      	; 0x6ca <DIO_WRITE_BIT+0x16>
 6c8:	40 c0       	rjmp	.+128    	; 0x74a <DIO_WRITE_BIT+0x96>
 6ca:	04 97       	sbiw	r24, 0x04	; 4
 6cc:	09 f4       	brne	.+2      	; 0x6d0 <DIO_WRITE_BIT+0x1c>
 6ce:	5b c0       	rjmp	.+182    	; 0x786 <DIO_WRITE_BIT+0xd2>
 6d0:	08 95       	ret
 6d2:	41 15       	cp	r20, r1
 6d4:	51 05       	cpc	r21, r1
 6d6:	21 f0       	breq	.+8      	; 0x6e0 <DIO_WRITE_BIT+0x2c>
 6d8:	41 30       	cpi	r20, 0x01	; 1
 6da:	51 05       	cpc	r21, r1
 6dc:	69 f0       	breq	.+26     	; 0x6f8 <DIO_WRITE_BIT+0x44>
 6de:	08 95       	ret
 6e0:	2b b3       	in	r18, 0x1b	; 27
 6e2:	81 e0       	ldi	r24, 0x01	; 1
 6e4:	90 e0       	ldi	r25, 0x00	; 0
 6e6:	02 c0       	rjmp	.+4      	; 0x6ec <DIO_WRITE_BIT+0x38>
 6e8:	88 0f       	add	r24, r24
 6ea:	99 1f       	adc	r25, r25
 6ec:	6a 95       	dec	r22
 6ee:	e2 f7       	brpl	.-8      	; 0x6e8 <DIO_WRITE_BIT+0x34>
 6f0:	80 95       	com	r24
 6f2:	82 23       	and	r24, r18
 6f4:	8b bb       	out	0x1b, r24	; 27
 6f6:	08 95       	ret
 6f8:	2b b3       	in	r18, 0x1b	; 27
 6fa:	81 e0       	ldi	r24, 0x01	; 1
 6fc:	90 e0       	ldi	r25, 0x00	; 0
 6fe:	02 c0       	rjmp	.+4      	; 0x704 <DIO_WRITE_BIT+0x50>
 700:	88 0f       	add	r24, r24
 702:	99 1f       	adc	r25, r25
 704:	6a 95       	dec	r22
 706:	e2 f7       	brpl	.-8      	; 0x700 <DIO_WRITE_BIT+0x4c>
 708:	82 2b       	or	r24, r18
 70a:	8b bb       	out	0x1b, r24	; 27
 70c:	08 95       	ret
 70e:	41 15       	cp	r20, r1
 710:	51 05       	cpc	r21, r1
 712:	21 f0       	breq	.+8      	; 0x71c <DIO_WRITE_BIT+0x68>
 714:	41 30       	cpi	r20, 0x01	; 1
 716:	51 05       	cpc	r21, r1
 718:	69 f0       	breq	.+26     	; 0x734 <DIO_WRITE_BIT+0x80>
 71a:	08 95       	ret
 71c:	28 b3       	in	r18, 0x18	; 24
 71e:	81 e0       	ldi	r24, 0x01	; 1
 720:	90 e0       	ldi	r25, 0x00	; 0
 722:	02 c0       	rjmp	.+4      	; 0x728 <DIO_WRITE_BIT+0x74>
 724:	88 0f       	add	r24, r24
 726:	99 1f       	adc	r25, r25
 728:	6a 95       	dec	r22
 72a:	e2 f7       	brpl	.-8      	; 0x724 <DIO_WRITE_BIT+0x70>
 72c:	80 95       	com	r24
 72e:	82 23       	and	r24, r18
 730:	88 bb       	out	0x18, r24	; 24
 732:	08 95       	ret
 734:	28 b3       	in	r18, 0x18	; 24
 736:	81 e0       	ldi	r24, 0x01	; 1
 738:	90 e0       	ldi	r25, 0x00	; 0
 73a:	02 c0       	rjmp	.+4      	; 0x740 <DIO_WRITE_BIT+0x8c>
 73c:	88 0f       	add	r24, r24
 73e:	99 1f       	adc	r25, r25
 740:	6a 95       	dec	r22
 742:	e2 f7       	brpl	.-8      	; 0x73c <DIO_WRITE_BIT+0x88>
 744:	82 2b       	or	r24, r18
 746:	88 bb       	out	0x18, r24	; 24
 748:	08 95       	ret
 74a:	41 15       	cp	r20, r1
 74c:	51 05       	cpc	r21, r1
 74e:	21 f0       	breq	.+8      	; 0x758 <DIO_WRITE_BIT+0xa4>
 750:	41 30       	cpi	r20, 0x01	; 1
 752:	51 05       	cpc	r21, r1
 754:	69 f0       	breq	.+26     	; 0x770 <DIO_WRITE_BIT+0xbc>
 756:	08 95       	ret
 758:	25 b3       	in	r18, 0x15	; 21
 75a:	81 e0       	ldi	r24, 0x01	; 1
 75c:	90 e0       	ldi	r25, 0x00	; 0
 75e:	02 c0       	rjmp	.+4      	; 0x764 <DIO_WRITE_BIT+0xb0>
 760:	88 0f       	add	r24, r24
 762:	99 1f       	adc	r25, r25
 764:	6a 95       	dec	r22
 766:	e2 f7       	brpl	.-8      	; 0x760 <DIO_WRITE_BIT+0xac>
 768:	80 95       	com	r24
 76a:	82 23       	and	r24, r18
 76c:	85 bb       	out	0x15, r24	; 21
 76e:	08 95       	ret
 770:	25 b3       	in	r18, 0x15	; 21
 772:	81 e0       	ldi	r24, 0x01	; 1
 774:	90 e0       	ldi	r25, 0x00	; 0
 776:	02 c0       	rjmp	.+4      	; 0x77c <DIO_WRITE_BIT+0xc8>
 778:	88 0f       	add	r24, r24
 77a:	99 1f       	adc	r25, r25
 77c:	6a 95       	dec	r22
 77e:	e2 f7       	brpl	.-8      	; 0x778 <DIO_WRITE_BIT+0xc4>
 780:	82 2b       	or	r24, r18
 782:	85 bb       	out	0x15, r24	; 21
 784:	08 95       	ret
 786:	41 15       	cp	r20, r1
 788:	51 05       	cpc	r21, r1
 78a:	21 f0       	breq	.+8      	; 0x794 <DIO_WRITE_BIT+0xe0>
 78c:	41 30       	cpi	r20, 0x01	; 1
 78e:	51 05       	cpc	r21, r1
 790:	69 f0       	breq	.+26     	; 0x7ac <DIO_WRITE_BIT+0xf8>
 792:	08 95       	ret
 794:	22 b3       	in	r18, 0x12	; 18
 796:	81 e0       	ldi	r24, 0x01	; 1
 798:	90 e0       	ldi	r25, 0x00	; 0
 79a:	02 c0       	rjmp	.+4      	; 0x7a0 <DIO_WRITE_BIT+0xec>
 79c:	88 0f       	add	r24, r24
 79e:	99 1f       	adc	r25, r25
 7a0:	6a 95       	dec	r22
 7a2:	e2 f7       	brpl	.-8      	; 0x79c <DIO_WRITE_BIT+0xe8>
 7a4:	80 95       	com	r24
 7a6:	82 23       	and	r24, r18
 7a8:	82 bb       	out	0x12, r24	; 18
 7aa:	08 95       	ret
 7ac:	22 b3       	in	r18, 0x12	; 18
 7ae:	81 e0       	ldi	r24, 0x01	; 1
 7b0:	90 e0       	ldi	r25, 0x00	; 0
 7b2:	02 c0       	rjmp	.+4      	; 0x7b8 <DIO_WRITE_BIT+0x104>
 7b4:	88 0f       	add	r24, r24
 7b6:	99 1f       	adc	r25, r25
 7b8:	6a 95       	dec	r22
 7ba:	e2 f7       	brpl	.-8      	; 0x7b4 <DIO_WRITE_BIT+0x100>
 7bc:	82 2b       	or	r24, r18
 7be:	82 bb       	out	0x12, r24	; 18
 7c0:	08 95       	ret

000007c2 <DIO_READ_BIT>:
 7c2:	82 30       	cpi	r24, 0x02	; 2
 7c4:	91 05       	cpc	r25, r1
 7c6:	99 f0       	breq	.+38     	; 0x7ee <DIO_READ_BIT+0x2c>
 7c8:	1c f4       	brge	.+6      	; 0x7d0 <DIO_READ_BIT+0xe>
 7ca:	01 97       	sbiw	r24, 0x01	; 1
 7cc:	39 f0       	breq	.+14     	; 0x7dc <DIO_READ_BIT+0x1a>
 7ce:	2a c0       	rjmp	.+84     	; 0x824 <DIO_READ_BIT+0x62>
 7d0:	83 30       	cpi	r24, 0x03	; 3
 7d2:	91 05       	cpc	r25, r1
 7d4:	a9 f0       	breq	.+42     	; 0x800 <DIO_READ_BIT+0x3e>
 7d6:	04 97       	sbiw	r24, 0x04	; 4
 7d8:	e1 f0       	breq	.+56     	; 0x812 <DIO_READ_BIT+0x50>
 7da:	24 c0       	rjmp	.+72     	; 0x824 <DIO_READ_BIT+0x62>
 7dc:	89 b3       	in	r24, 0x19	; 25
 7de:	90 e0       	ldi	r25, 0x00	; 0
 7e0:	02 c0       	rjmp	.+4      	; 0x7e6 <DIO_READ_BIT+0x24>
 7e2:	95 95       	asr	r25
 7e4:	87 95       	ror	r24
 7e6:	6a 95       	dec	r22
 7e8:	e2 f7       	brpl	.-8      	; 0x7e2 <DIO_READ_BIT+0x20>
 7ea:	81 70       	andi	r24, 0x01	; 1
 7ec:	08 95       	ret
 7ee:	86 b3       	in	r24, 0x16	; 22
 7f0:	90 e0       	ldi	r25, 0x00	; 0
 7f2:	02 c0       	rjmp	.+4      	; 0x7f8 <DIO_READ_BIT+0x36>
 7f4:	95 95       	asr	r25
 7f6:	87 95       	ror	r24
 7f8:	6a 95       	dec	r22
 7fa:	e2 f7       	brpl	.-8      	; 0x7f4 <DIO_READ_BIT+0x32>
 7fc:	81 70       	andi	r24, 0x01	; 1
 7fe:	08 95       	ret
 800:	83 b3       	in	r24, 0x13	; 19
 802:	90 e0       	ldi	r25, 0x00	; 0
 804:	02 c0       	rjmp	.+4      	; 0x80a <DIO_READ_BIT+0x48>
 806:	95 95       	asr	r25
 808:	87 95       	ror	r24
 80a:	6a 95       	dec	r22
 80c:	e2 f7       	brpl	.-8      	; 0x806 <DIO_READ_BIT+0x44>
 80e:	81 70       	andi	r24, 0x01	; 1
 810:	08 95       	ret
 812:	80 b3       	in	r24, 0x10	; 16
 814:	90 e0       	ldi	r25, 0x00	; 0
 816:	02 c0       	rjmp	.+4      	; 0x81c <DIO_READ_BIT+0x5a>
 818:	95 95       	asr	r25
 81a:	87 95       	ror	r24
 81c:	6a 95       	dec	r22
 81e:	e2 f7       	brpl	.-8      	; 0x818 <DIO_READ_BIT+0x56>
 820:	81 70       	andi	r24, 0x01	; 1
 822:	08 95       	ret
 824:	80 e0       	ldi	r24, 0x00	; 0
 826:	08 95       	ret

00000828 <SET_prescaler>:
 828:	00 97       	sbiw	r24, 0x00	; 0
 82a:	19 f4       	brne	.+6      	; 0x832 <SET_prescaler+0xa>
 82c:	83 b7       	in	r24, 0x33	; 51
 82e:	83 bf       	out	0x33, r24	; 51
 830:	08 95       	ret
 832:	81 30       	cpi	r24, 0x01	; 1
 834:	91 05       	cpc	r25, r1
 836:	21 f4       	brne	.+8      	; 0x840 <SET_prescaler+0x18>
=======
 590:	ff 91       	pop	r31
 592:	ef 91       	pop	r30
 594:	bf 91       	pop	r27
 596:	af 91       	pop	r26
 598:	9f 91       	pop	r25
 59a:	8f 91       	pop	r24
 59c:	7f 91       	pop	r23
 59e:	6f 91       	pop	r22
 5a0:	5f 91       	pop	r21
 5a2:	4f 91       	pop	r20
 5a4:	3f 91       	pop	r19
 5a6:	2f 91       	pop	r18
 5a8:	0f 90       	pop	r0
 5aa:	0f be       	out	0x3f, r0	; 63
 5ac:	0f 90       	pop	r0
 5ae:	1f 90       	pop	r1
 5b0:	18 95       	reti

000005b2 <DIO_INIT_BIT>:
 5b2:	82 30       	cpi	r24, 0x02	; 2
 5b4:	91 05       	cpc	r25, r1
 5b6:	51 f1       	breq	.+84     	; 0x60c <DIO_INIT_BIT+0x5a>
 5b8:	1c f4       	brge	.+6      	; 0x5c0 <DIO_INIT_BIT+0xe>
 5ba:	01 97       	sbiw	r24, 0x01	; 1
 5bc:	49 f0       	breq	.+18     	; 0x5d0 <DIO_INIT_BIT+0x1e>
 5be:	08 95       	ret
 5c0:	83 30       	cpi	r24, 0x03	; 3
 5c2:	91 05       	cpc	r25, r1
 5c4:	09 f4       	brne	.+2      	; 0x5c8 <DIO_INIT_BIT+0x16>
 5c6:	40 c0       	rjmp	.+128    	; 0x648 <DIO_INIT_BIT+0x96>
 5c8:	04 97       	sbiw	r24, 0x04	; 4
 5ca:	09 f4       	brne	.+2      	; 0x5ce <DIO_INIT_BIT+0x1c>
 5cc:	5b c0       	rjmp	.+182    	; 0x684 <DIO_INIT_BIT+0xd2>
 5ce:	08 95       	ret
 5d0:	41 15       	cp	r20, r1
 5d2:	51 05       	cpc	r21, r1
 5d4:	21 f0       	breq	.+8      	; 0x5de <DIO_INIT_BIT+0x2c>
 5d6:	41 30       	cpi	r20, 0x01	; 1
 5d8:	51 05       	cpc	r21, r1
 5da:	69 f0       	breq	.+26     	; 0x5f6 <DIO_INIT_BIT+0x44>
 5dc:	08 95       	ret
 5de:	2a b3       	in	r18, 0x1a	; 26
 5e0:	81 e0       	ldi	r24, 0x01	; 1
 5e2:	90 e0       	ldi	r25, 0x00	; 0
 5e4:	02 c0       	rjmp	.+4      	; 0x5ea <DIO_INIT_BIT+0x38>
 5e6:	88 0f       	add	r24, r24
 5e8:	99 1f       	adc	r25, r25
 5ea:	6a 95       	dec	r22
 5ec:	e2 f7       	brpl	.-8      	; 0x5e6 <DIO_INIT_BIT+0x34>
 5ee:	80 95       	com	r24
 5f0:	82 23       	and	r24, r18
 5f2:	8a bb       	out	0x1a, r24	; 26
 5f4:	08 95       	ret
 5f6:	2a b3       	in	r18, 0x1a	; 26
 5f8:	81 e0       	ldi	r24, 0x01	; 1
 5fa:	90 e0       	ldi	r25, 0x00	; 0
 5fc:	02 c0       	rjmp	.+4      	; 0x602 <DIO_INIT_BIT+0x50>
 5fe:	88 0f       	add	r24, r24
 600:	99 1f       	adc	r25, r25
 602:	6a 95       	dec	r22
 604:	e2 f7       	brpl	.-8      	; 0x5fe <DIO_INIT_BIT+0x4c>
 606:	82 2b       	or	r24, r18
 608:	8a bb       	out	0x1a, r24	; 26
 60a:	08 95       	ret
 60c:	41 15       	cp	r20, r1
 60e:	51 05       	cpc	r21, r1
 610:	21 f0       	breq	.+8      	; 0x61a <DIO_INIT_BIT+0x68>
 612:	41 30       	cpi	r20, 0x01	; 1
 614:	51 05       	cpc	r21, r1
 616:	69 f0       	breq	.+26     	; 0x632 <DIO_INIT_BIT+0x80>
 618:	08 95       	ret
 61a:	27 b3       	in	r18, 0x17	; 23
 61c:	81 e0       	ldi	r24, 0x01	; 1
 61e:	90 e0       	ldi	r25, 0x00	; 0
 620:	02 c0       	rjmp	.+4      	; 0x626 <DIO_INIT_BIT+0x74>
 622:	88 0f       	add	r24, r24
 624:	99 1f       	adc	r25, r25
 626:	6a 95       	dec	r22
 628:	e2 f7       	brpl	.-8      	; 0x622 <DIO_INIT_BIT+0x70>
 62a:	80 95       	com	r24
 62c:	82 23       	and	r24, r18
 62e:	87 bb       	out	0x17, r24	; 23
 630:	08 95       	ret
 632:	27 b3       	in	r18, 0x17	; 23
 634:	81 e0       	ldi	r24, 0x01	; 1
 636:	90 e0       	ldi	r25, 0x00	; 0
 638:	02 c0       	rjmp	.+4      	; 0x63e <DIO_INIT_BIT+0x8c>
 63a:	88 0f       	add	r24, r24
 63c:	99 1f       	adc	r25, r25
 63e:	6a 95       	dec	r22
 640:	e2 f7       	brpl	.-8      	; 0x63a <DIO_INIT_BIT+0x88>
 642:	82 2b       	or	r24, r18
 644:	87 bb       	out	0x17, r24	; 23
 646:	08 95       	ret
 648:	41 15       	cp	r20, r1
 64a:	51 05       	cpc	r21, r1
 64c:	21 f0       	breq	.+8      	; 0x656 <DIO_INIT_BIT+0xa4>
 64e:	41 30       	cpi	r20, 0x01	; 1
 650:	51 05       	cpc	r21, r1
 652:	69 f0       	breq	.+26     	; 0x66e <DIO_INIT_BIT+0xbc>
 654:	08 95       	ret
 656:	24 b3       	in	r18, 0x14	; 20
 658:	81 e0       	ldi	r24, 0x01	; 1
 65a:	90 e0       	ldi	r25, 0x00	; 0
 65c:	02 c0       	rjmp	.+4      	; 0x662 <DIO_INIT_BIT+0xb0>
 65e:	88 0f       	add	r24, r24
 660:	99 1f       	adc	r25, r25
 662:	6a 95       	dec	r22
 664:	e2 f7       	brpl	.-8      	; 0x65e <DIO_INIT_BIT+0xac>
 666:	80 95       	com	r24
 668:	82 23       	and	r24, r18
 66a:	84 bb       	out	0x14, r24	; 20
 66c:	08 95       	ret
 66e:	24 b3       	in	r18, 0x14	; 20
 670:	81 e0       	ldi	r24, 0x01	; 1
 672:	90 e0       	ldi	r25, 0x00	; 0
 674:	02 c0       	rjmp	.+4      	; 0x67a <DIO_INIT_BIT+0xc8>
 676:	88 0f       	add	r24, r24
 678:	99 1f       	adc	r25, r25
 67a:	6a 95       	dec	r22
 67c:	e2 f7       	brpl	.-8      	; 0x676 <DIO_INIT_BIT+0xc4>
 67e:	82 2b       	or	r24, r18
 680:	84 bb       	out	0x14, r24	; 20
 682:	08 95       	ret
 684:	41 15       	cp	r20, r1
 686:	51 05       	cpc	r21, r1
 688:	21 f0       	breq	.+8      	; 0x692 <DIO_INIT_BIT+0xe0>
 68a:	41 30       	cpi	r20, 0x01	; 1
 68c:	51 05       	cpc	r21, r1
 68e:	69 f0       	breq	.+26     	; 0x6aa <DIO_INIT_BIT+0xf8>
 690:	08 95       	ret
 692:	21 b3       	in	r18, 0x11	; 17
 694:	81 e0       	ldi	r24, 0x01	; 1
 696:	90 e0       	ldi	r25, 0x00	; 0
 698:	02 c0       	rjmp	.+4      	; 0x69e <DIO_INIT_BIT+0xec>
 69a:	88 0f       	add	r24, r24
 69c:	99 1f       	adc	r25, r25
 69e:	6a 95       	dec	r22
 6a0:	e2 f7       	brpl	.-8      	; 0x69a <DIO_INIT_BIT+0xe8>
 6a2:	80 95       	com	r24
 6a4:	82 23       	and	r24, r18
 6a6:	81 bb       	out	0x11, r24	; 17
 6a8:	08 95       	ret
 6aa:	21 b3       	in	r18, 0x11	; 17
 6ac:	81 e0       	ldi	r24, 0x01	; 1
 6ae:	90 e0       	ldi	r25, 0x00	; 0
 6b0:	02 c0       	rjmp	.+4      	; 0x6b6 <DIO_INIT_BIT+0x104>
 6b2:	88 0f       	add	r24, r24
 6b4:	99 1f       	adc	r25, r25
 6b6:	6a 95       	dec	r22
 6b8:	e2 f7       	brpl	.-8      	; 0x6b2 <DIO_INIT_BIT+0x100>
 6ba:	82 2b       	or	r24, r18
 6bc:	81 bb       	out	0x11, r24	; 17
 6be:	08 95       	ret

000006c0 <DIO_WRITE_BIT>:
 6c0:	82 30       	cpi	r24, 0x02	; 2
 6c2:	91 05       	cpc	r25, r1
 6c4:	51 f1       	breq	.+84     	; 0x71a <DIO_WRITE_BIT+0x5a>
 6c6:	1c f4       	brge	.+6      	; 0x6ce <DIO_WRITE_BIT+0xe>
 6c8:	01 97       	sbiw	r24, 0x01	; 1
 6ca:	49 f0       	breq	.+18     	; 0x6de <DIO_WRITE_BIT+0x1e>
 6cc:	08 95       	ret
 6ce:	83 30       	cpi	r24, 0x03	; 3
 6d0:	91 05       	cpc	r25, r1
 6d2:	09 f4       	brne	.+2      	; 0x6d6 <DIO_WRITE_BIT+0x16>
 6d4:	40 c0       	rjmp	.+128    	; 0x756 <DIO_WRITE_BIT+0x96>
 6d6:	04 97       	sbiw	r24, 0x04	; 4
 6d8:	09 f4       	brne	.+2      	; 0x6dc <DIO_WRITE_BIT+0x1c>
 6da:	5b c0       	rjmp	.+182    	; 0x792 <DIO_WRITE_BIT+0xd2>
 6dc:	08 95       	ret
 6de:	41 15       	cp	r20, r1
 6e0:	51 05       	cpc	r21, r1
 6e2:	21 f0       	breq	.+8      	; 0x6ec <DIO_WRITE_BIT+0x2c>
 6e4:	41 30       	cpi	r20, 0x01	; 1
 6e6:	51 05       	cpc	r21, r1
 6e8:	69 f0       	breq	.+26     	; 0x704 <DIO_WRITE_BIT+0x44>
 6ea:	08 95       	ret
 6ec:	2b b3       	in	r18, 0x1b	; 27
 6ee:	81 e0       	ldi	r24, 0x01	; 1
 6f0:	90 e0       	ldi	r25, 0x00	; 0
 6f2:	02 c0       	rjmp	.+4      	; 0x6f8 <DIO_WRITE_BIT+0x38>
 6f4:	88 0f       	add	r24, r24
 6f6:	99 1f       	adc	r25, r25
 6f8:	6a 95       	dec	r22
 6fa:	e2 f7       	brpl	.-8      	; 0x6f4 <DIO_WRITE_BIT+0x34>
 6fc:	80 95       	com	r24
 6fe:	82 23       	and	r24, r18
 700:	8b bb       	out	0x1b, r24	; 27
 702:	08 95       	ret
 704:	2b b3       	in	r18, 0x1b	; 27
 706:	81 e0       	ldi	r24, 0x01	; 1
 708:	90 e0       	ldi	r25, 0x00	; 0
 70a:	02 c0       	rjmp	.+4      	; 0x710 <DIO_WRITE_BIT+0x50>
 70c:	88 0f       	add	r24, r24
 70e:	99 1f       	adc	r25, r25
 710:	6a 95       	dec	r22
 712:	e2 f7       	brpl	.-8      	; 0x70c <DIO_WRITE_BIT+0x4c>
 714:	82 2b       	or	r24, r18
 716:	8b bb       	out	0x1b, r24	; 27
 718:	08 95       	ret
 71a:	41 15       	cp	r20, r1
 71c:	51 05       	cpc	r21, r1
 71e:	21 f0       	breq	.+8      	; 0x728 <DIO_WRITE_BIT+0x68>
 720:	41 30       	cpi	r20, 0x01	; 1
 722:	51 05       	cpc	r21, r1
 724:	69 f0       	breq	.+26     	; 0x740 <DIO_WRITE_BIT+0x80>
 726:	08 95       	ret
 728:	28 b3       	in	r18, 0x18	; 24
 72a:	81 e0       	ldi	r24, 0x01	; 1
 72c:	90 e0       	ldi	r25, 0x00	; 0
 72e:	02 c0       	rjmp	.+4      	; 0x734 <DIO_WRITE_BIT+0x74>
 730:	88 0f       	add	r24, r24
 732:	99 1f       	adc	r25, r25
 734:	6a 95       	dec	r22
 736:	e2 f7       	brpl	.-8      	; 0x730 <DIO_WRITE_BIT+0x70>
 738:	80 95       	com	r24
 73a:	82 23       	and	r24, r18
 73c:	88 bb       	out	0x18, r24	; 24
 73e:	08 95       	ret
 740:	28 b3       	in	r18, 0x18	; 24
 742:	81 e0       	ldi	r24, 0x01	; 1
 744:	90 e0       	ldi	r25, 0x00	; 0
 746:	02 c0       	rjmp	.+4      	; 0x74c <DIO_WRITE_BIT+0x8c>
 748:	88 0f       	add	r24, r24
 74a:	99 1f       	adc	r25, r25
 74c:	6a 95       	dec	r22
 74e:	e2 f7       	brpl	.-8      	; 0x748 <DIO_WRITE_BIT+0x88>
 750:	82 2b       	or	r24, r18
 752:	88 bb       	out	0x18, r24	; 24
 754:	08 95       	ret
 756:	41 15       	cp	r20, r1
 758:	51 05       	cpc	r21, r1
 75a:	21 f0       	breq	.+8      	; 0x764 <DIO_WRITE_BIT+0xa4>
 75c:	41 30       	cpi	r20, 0x01	; 1
 75e:	51 05       	cpc	r21, r1
 760:	69 f0       	breq	.+26     	; 0x77c <DIO_WRITE_BIT+0xbc>
 762:	08 95       	ret
 764:	25 b3       	in	r18, 0x15	; 21
 766:	81 e0       	ldi	r24, 0x01	; 1
 768:	90 e0       	ldi	r25, 0x00	; 0
 76a:	02 c0       	rjmp	.+4      	; 0x770 <DIO_WRITE_BIT+0xb0>
 76c:	88 0f       	add	r24, r24
 76e:	99 1f       	adc	r25, r25
 770:	6a 95       	dec	r22
 772:	e2 f7       	brpl	.-8      	; 0x76c <DIO_WRITE_BIT+0xac>
 774:	80 95       	com	r24
 776:	82 23       	and	r24, r18
 778:	85 bb       	out	0x15, r24	; 21
 77a:	08 95       	ret
 77c:	25 b3       	in	r18, 0x15	; 21
 77e:	81 e0       	ldi	r24, 0x01	; 1
 780:	90 e0       	ldi	r25, 0x00	; 0
 782:	02 c0       	rjmp	.+4      	; 0x788 <DIO_WRITE_BIT+0xc8>
 784:	88 0f       	add	r24, r24
 786:	99 1f       	adc	r25, r25
 788:	6a 95       	dec	r22
 78a:	e2 f7       	brpl	.-8      	; 0x784 <DIO_WRITE_BIT+0xc4>
 78c:	82 2b       	or	r24, r18
 78e:	85 bb       	out	0x15, r24	; 21
 790:	08 95       	ret
 792:	41 15       	cp	r20, r1
 794:	51 05       	cpc	r21, r1
 796:	21 f0       	breq	.+8      	; 0x7a0 <DIO_WRITE_BIT+0xe0>
 798:	41 30       	cpi	r20, 0x01	; 1
 79a:	51 05       	cpc	r21, r1
 79c:	69 f0       	breq	.+26     	; 0x7b8 <DIO_WRITE_BIT+0xf8>
 79e:	08 95       	ret
 7a0:	22 b3       	in	r18, 0x12	; 18
 7a2:	81 e0       	ldi	r24, 0x01	; 1
 7a4:	90 e0       	ldi	r25, 0x00	; 0
 7a6:	02 c0       	rjmp	.+4      	; 0x7ac <DIO_WRITE_BIT+0xec>
 7a8:	88 0f       	add	r24, r24
 7aa:	99 1f       	adc	r25, r25
 7ac:	6a 95       	dec	r22
 7ae:	e2 f7       	brpl	.-8      	; 0x7a8 <DIO_WRITE_BIT+0xe8>
 7b0:	80 95       	com	r24
 7b2:	82 23       	and	r24, r18
 7b4:	82 bb       	out	0x12, r24	; 18
 7b6:	08 95       	ret
 7b8:	22 b3       	in	r18, 0x12	; 18
 7ba:	81 e0       	ldi	r24, 0x01	; 1
 7bc:	90 e0       	ldi	r25, 0x00	; 0
 7be:	02 c0       	rjmp	.+4      	; 0x7c4 <DIO_WRITE_BIT+0x104>
 7c0:	88 0f       	add	r24, r24
 7c2:	99 1f       	adc	r25, r25
 7c4:	6a 95       	dec	r22
 7c6:	e2 f7       	brpl	.-8      	; 0x7c0 <DIO_WRITE_BIT+0x100>
 7c8:	82 2b       	or	r24, r18
 7ca:	82 bb       	out	0x12, r24	; 18
 7cc:	08 95       	ret

000007ce <DIO_READ_BIT>:
 7ce:	82 30       	cpi	r24, 0x02	; 2
 7d0:	91 05       	cpc	r25, r1
 7d2:	99 f0       	breq	.+38     	; 0x7fa <DIO_READ_BIT+0x2c>
 7d4:	1c f4       	brge	.+6      	; 0x7dc <DIO_READ_BIT+0xe>
 7d6:	01 97       	sbiw	r24, 0x01	; 1
 7d8:	39 f0       	breq	.+14     	; 0x7e8 <DIO_READ_BIT+0x1a>
 7da:	2a c0       	rjmp	.+84     	; 0x830 <DIO_READ_BIT+0x62>
 7dc:	83 30       	cpi	r24, 0x03	; 3
 7de:	91 05       	cpc	r25, r1
 7e0:	a9 f0       	breq	.+42     	; 0x80c <DIO_READ_BIT+0x3e>
 7e2:	04 97       	sbiw	r24, 0x04	; 4
 7e4:	e1 f0       	breq	.+56     	; 0x81e <DIO_READ_BIT+0x50>
 7e6:	24 c0       	rjmp	.+72     	; 0x830 <DIO_READ_BIT+0x62>
 7e8:	89 b3       	in	r24, 0x19	; 25
 7ea:	90 e0       	ldi	r25, 0x00	; 0
 7ec:	02 c0       	rjmp	.+4      	; 0x7f2 <DIO_READ_BIT+0x24>
 7ee:	95 95       	asr	r25
 7f0:	87 95       	ror	r24
 7f2:	6a 95       	dec	r22
 7f4:	e2 f7       	brpl	.-8      	; 0x7ee <DIO_READ_BIT+0x20>
 7f6:	81 70       	andi	r24, 0x01	; 1
 7f8:	08 95       	ret
 7fa:	86 b3       	in	r24, 0x16	; 22
 7fc:	90 e0       	ldi	r25, 0x00	; 0
 7fe:	02 c0       	rjmp	.+4      	; 0x804 <DIO_READ_BIT+0x36>
 800:	95 95       	asr	r25
 802:	87 95       	ror	r24
 804:	6a 95       	dec	r22
 806:	e2 f7       	brpl	.-8      	; 0x800 <DIO_READ_BIT+0x32>
 808:	81 70       	andi	r24, 0x01	; 1
 80a:	08 95       	ret
 80c:	83 b3       	in	r24, 0x13	; 19
 80e:	90 e0       	ldi	r25, 0x00	; 0
 810:	02 c0       	rjmp	.+4      	; 0x816 <DIO_READ_BIT+0x48>
 812:	95 95       	asr	r25
 814:	87 95       	ror	r24
 816:	6a 95       	dec	r22
 818:	e2 f7       	brpl	.-8      	; 0x812 <DIO_READ_BIT+0x44>
 81a:	81 70       	andi	r24, 0x01	; 1
 81c:	08 95       	ret
 81e:	80 b3       	in	r24, 0x10	; 16
 820:	90 e0       	ldi	r25, 0x00	; 0
 822:	02 c0       	rjmp	.+4      	; 0x828 <DIO_READ_BIT+0x5a>
 824:	95 95       	asr	r25
 826:	87 95       	ror	r24
 828:	6a 95       	dec	r22
 82a:	e2 f7       	brpl	.-8      	; 0x824 <DIO_READ_BIT+0x56>
 82c:	81 70       	andi	r24, 0x01	; 1
 82e:	08 95       	ret
 830:	80 e0       	ldi	r24, 0x00	; 0
 832:	08 95       	ret

00000834 <SET_prescaler>:
			SET_prescaler(Prescaler_1024_);
			wait_ovf();
			TIM0_STOP();
			

}
 834:	00 97       	sbiw	r24, 0x00	; 0
 836:	19 f4       	brne	.+6      	; 0x83e <SET_prescaler+0xa>
>>>>>>> parent of e4935ad... ..
 838:	83 b7       	in	r24, 0x33	; 51
 83a:	83 bf       	out	0x33, r24	; 51
 83c:	08 95       	ret
 83e:	81 30       	cpi	r24, 0x01	; 1
 840:	91 05       	cpc	r25, r1
 842:	21 f4       	brne	.+8      	; 0x84c <SET_prescaler+0x18>
 844:	83 b7       	in	r24, 0x33	; 51
 846:	81 60       	ori	r24, 0x01	; 1
 848:	83 bf       	out	0x33, r24	; 51
 84a:	08 95       	ret
 84c:	88 30       	cpi	r24, 0x08	; 8
 84e:	91 05       	cpc	r25, r1
 850:	21 f4       	brne	.+8      	; 0x85a <SET_prescaler+0x26>
 852:	83 b7       	in	r24, 0x33	; 51
 854:	82 60       	ori	r24, 0x02	; 2
 856:	83 bf       	out	0x33, r24	; 51
 858:	08 95       	ret
 85a:	80 34       	cpi	r24, 0x40	; 64
 85c:	91 05       	cpc	r25, r1
 85e:	21 f4       	brne	.+8      	; 0x868 <__stack+0x9>
 860:	83 b7       	in	r24, 0x33	; 51
 862:	83 60       	ori	r24, 0x03	; 3
 864:	83 bf       	out	0x33, r24	; 51
 866:	08 95       	ret
 868:	81 15       	cp	r24, r1
 86a:	21 e0       	ldi	r18, 0x01	; 1
 86c:	92 07       	cpc	r25, r18
 86e:	21 f4       	brne	.+8      	; 0x878 <__stack+0x19>
 870:	83 b7       	in	r24, 0x33	; 51
 872:	84 60       	ori	r24, 0x04	; 4
 874:	83 bf       	out	0x33, r24	; 51
 876:	08 95       	ret
 878:	81 15       	cp	r24, r1
 87a:	94 40       	sbci	r25, 0x04	; 4
 87c:	19 f4       	brne	.+6      	; 0x884 <__stack+0x25>
 87e:	83 b7       	in	r24, 0x33	; 51
 880:	85 60       	ori	r24, 0x05	; 5
 882:	83 bf       	out	0x33, r24	; 51
 884:	08 95       	ret

<<<<<<< HEAD
00000886 <Timer_MODEs>:
 886:	81 11       	cpse	r24, r1
 888:	04 c0       	rjmp	.+8      	; 0x892 <Timer_MODEs+0xc>
 88a:	83 b7       	in	r24, 0x33	; 51
 88c:	87 7b       	andi	r24, 0xB7	; 183
 88e:	83 bf       	out	0x33, r24	; 51
 890:	08 95       	ret
 892:	81 30       	cpi	r24, 0x01	; 1
 894:	39 f4       	brne	.+14     	; 0x8a4 <Timer_MODEs+0x1e>
 896:	83 b7       	in	r24, 0x33	; 51
 898:	88 60       	ori	r24, 0x08	; 8
 89a:	83 bf       	out	0x33, r24	; 51
 89c:	83 b7       	in	r24, 0x33	; 51
 89e:	8f 7b       	andi	r24, 0xBF	; 191
 8a0:	83 bf       	out	0x33, r24	; 51
 8a2:	08 95       	ret
 8a4:	82 30       	cpi	r24, 0x02	; 2
 8a6:	39 f4       	brne	.+14     	; 0x8b6 <Timer_MODEs+0x30>
 8a8:	83 b7       	in	r24, 0x33	; 51
 8aa:	80 64       	ori	r24, 0x40	; 64
 8ac:	83 bf       	out	0x33, r24	; 51
 8ae:	83 b7       	in	r24, 0x33	; 51
 8b0:	87 7f       	andi	r24, 0xF7	; 247
 8b2:	83 bf       	out	0x33, r24	; 51
 8b4:	08 95       	ret
 8b6:	83 30       	cpi	r24, 0x03	; 3
 8b8:	19 f4       	brne	.+6      	; 0x8c0 <Timer_MODEs+0x3a>
 8ba:	83 b7       	in	r24, 0x33	; 51
 8bc:	88 64       	ori	r24, 0x48	; 72
 8be:	83 bf       	out	0x33, r24	; 51
 8c0:	08 95       	ret

000008c2 <TIM0_PWM_start>:
 8c2:	8f 92       	push	r8
 8c4:	9f 92       	push	r9
 8c6:	af 92       	push	r10
 8c8:	bf 92       	push	r11
 8ca:	cf 92       	push	r12
 8cc:	df 92       	push	r13
 8ce:	ef 92       	push	r14
 8d0:	ff 92       	push	r15
 8d2:	4b 01       	movw	r8, r22
 8d4:	5c 01       	movw	r10, r24
 8d6:	60 e0       	ldi	r22, 0x00	; 0
 8d8:	70 e0       	ldi	r23, 0x00	; 0
 8da:	80 e8       	ldi	r24, 0x80	; 128
 8dc:	9f e3       	ldi	r25, 0x3F	; 63
 8de:	0e 94 52 05 	call	0xaa4	; 0xaa4 <__divsf3>
 8e2:	6b 01       	movw	r12, r22
 8e4:	7c 01       	movw	r14, r24
 8e6:	60 93 73 00 	sts	0x0073, r22	; 0x800073 <period>
 8ea:	70 93 74 00 	sts	0x0074, r23	; 0x800074 <period+0x1>
 8ee:	80 93 75 00 	sts	0x0075, r24	; 0x800075 <period+0x2>
 8f2:	90 93 76 00 	sts	0x0076, r25	; 0x800076 <period+0x3>
 8f6:	a5 01       	movw	r20, r10
 8f8:	94 01       	movw	r18, r8
 8fa:	0e 94 81 06 	call	0xd02	; 0xd02 <__mulsf3>
 8fe:	20 e0       	ldi	r18, 0x00	; 0
 900:	30 e0       	ldi	r19, 0x00	; 0
 902:	48 ec       	ldi	r20, 0xC8	; 200
 904:	52 e4       	ldi	r21, 0x42	; 66
 906:	0e 94 52 05 	call	0xaa4	; 0xaa4 <__divsf3>
 90a:	4b 01       	movw	r8, r22
 90c:	5c 01       	movw	r10, r24
 90e:	20 e0       	ldi	r18, 0x00	; 0
 910:	34 e2       	ldi	r19, 0x24	; 36
 912:	44 e7       	ldi	r20, 0x74	; 116
 914:	59 e4       	ldi	r21, 0x49	; 73
 916:	0e 94 81 06 	call	0xd02	; 0xd02 <__mulsf3>
 91a:	20 e0       	ldi	r18, 0x00	; 0
 91c:	30 e0       	ldi	r19, 0x00	; 0
 91e:	40 e8       	ldi	r20, 0x80	; 128
 920:	5b e3       	ldi	r21, 0x3B	; 59
 922:	0e 94 81 06 	call	0xd02	; 0xd02 <__mulsf3>
 926:	9b 01       	movw	r18, r22
 928:	ac 01       	movw	r20, r24
 92a:	60 e0       	ldi	r22, 0x00	; 0
 92c:	70 e0       	ldi	r23, 0x00	; 0
 92e:	8f e7       	ldi	r24, 0x7F	; 127
 930:	93 e4       	ldi	r25, 0x43	; 67
 932:	0e 94 e5 04 	call	0x9ca	; 0x9ca <__subsf3>
 936:	60 93 6f 00 	sts	0x006F, r22	; 0x80006f <TON>
 93a:	70 93 70 00 	sts	0x0070, r23	; 0x800070 <TON+0x1>
 93e:	80 93 71 00 	sts	0x0071, r24	; 0x800071 <TON+0x2>
 942:	90 93 72 00 	sts	0x0072, r25	; 0x800072 <TON+0x3>
 946:	a5 01       	movw	r20, r10
 948:	94 01       	movw	r18, r8
 94a:	c7 01       	movw	r24, r14
 94c:	b6 01       	movw	r22, r12
 94e:	0e 94 e5 04 	call	0x9ca	; 0x9ca <__subsf3>
 952:	20 e0       	ldi	r18, 0x00	; 0
 954:	34 e2       	ldi	r19, 0x24	; 36
 956:	44 e7       	ldi	r20, 0x74	; 116
 958:	59 e4       	ldi	r21, 0x49	; 73
 95a:	0e 94 81 06 	call	0xd02	; 0xd02 <__mulsf3>
 95e:	20 e0       	ldi	r18, 0x00	; 0
 960:	30 e0       	ldi	r19, 0x00	; 0
 962:	40 e8       	ldi	r20, 0x80	; 128
 964:	5b e3       	ldi	r21, 0x3B	; 59
 966:	0e 94 81 06 	call	0xd02	; 0xd02 <__mulsf3>
 96a:	9b 01       	movw	r18, r22
 96c:	ac 01       	movw	r20, r24
 96e:	60 e0       	ldi	r22, 0x00	; 0
 970:	70 e0       	ldi	r23, 0x00	; 0
 972:	8f e7       	ldi	r24, 0x7F	; 127
 974:	93 e4       	ldi	r25, 0x43	; 67
 976:	0e 94 e5 04 	call	0x9ca	; 0x9ca <__subsf3>
 97a:	60 93 6b 00 	sts	0x006B, r22	; 0x80006b <TOFF>
 97e:	70 93 6c 00 	sts	0x006C, r23	; 0x80006c <TOFF+0x1>
 982:	80 93 6d 00 	sts	0x006D, r24	; 0x80006d <TOFF+0x2>
 986:	90 93 6e 00 	sts	0x006E, r25	; 0x80006e <TOFF+0x3>
 98a:	89 b7       	in	r24, 0x39	; 57
 98c:	81 60       	ori	r24, 0x01	; 1
 98e:	89 bf       	out	0x39, r24	; 57
 990:	80 e0       	ldi	r24, 0x00	; 0
 992:	91 e0       	ldi	r25, 0x01	; 1
 994:	0e 94 14 04 	call	0x828	; 0x828 <SET_prescaler>
 998:	ff 90       	pop	r15
 99a:	ef 90       	pop	r14
 99c:	df 90       	pop	r13
 99e:	cf 90       	pop	r12
 9a0:	bf 90       	pop	r11
 9a2:	af 90       	pop	r10
 9a4:	9f 90       	pop	r9
 9a6:	8f 90       	pop	r8
 9a8:	08 95       	ret

000009aa <TIM0_PWM_INIT>:
 9aa:	80 e0       	ldi	r24, 0x00	; 0
 9ac:	0e 94 43 04 	call	0x886	; 0x886 <Timer_MODEs>
 9b0:	89 b7       	in	r24, 0x39	; 57
 9b2:	81 60       	ori	r24, 0x01	; 1
 9b4:	89 bf       	out	0x39, r24	; 57
 9b6:	8f b7       	in	r24, 0x3f	; 63
 9b8:	80 68       	ori	r24, 0x80	; 128
 9ba:	8f bf       	out	0x3f, r24	; 63
 9bc:	08 95       	ret

000009be <PWM_STOP>:
 9be:	0e 94 3d 04 	call	0x87a	; 0x87a <TIM0_STOP>
 9c2:	89 b7       	in	r24, 0x39	; 57
 9c4:	8e 7f       	andi	r24, 0xFE	; 254
 9c6:	89 bf       	out	0x39, r24	; 57
 9c8:	08 95       	ret

000009ca <__subsf3>:
 9ca:	50 58       	subi	r21, 0x80	; 128

000009cc <__addsf3>:
 9cc:	bb 27       	eor	r27, r27
 9ce:	aa 27       	eor	r26, r26
 9d0:	0e 94 fd 04 	call	0x9fa	; 0x9fa <__addsf3x>
 9d4:	0c 94 47 06 	jmp	0xc8e	; 0xc8e <__fp_round>
 9d8:	0e 94 39 06 	call	0xc72	; 0xc72 <__fp_pscA>
 9dc:	38 f0       	brcs	.+14     	; 0x9ec <__addsf3+0x20>
 9de:	0e 94 40 06 	call	0xc80	; 0xc80 <__fp_pscB>
 9e2:	20 f0       	brcs	.+8      	; 0x9ec <__addsf3+0x20>
 9e4:	39 f4       	brne	.+14     	; 0x9f4 <__addsf3+0x28>
 9e6:	9f 3f       	cpi	r25, 0xFF	; 255
 9e8:	19 f4       	brne	.+6      	; 0x9f0 <__addsf3+0x24>
 9ea:	26 f4       	brtc	.+8      	; 0x9f4 <__addsf3+0x28>
 9ec:	0c 94 36 06 	jmp	0xc6c	; 0xc6c <__fp_nan>
 9f0:	0e f4       	brtc	.+2      	; 0x9f4 <__addsf3+0x28>
 9f2:	e0 95       	com	r30
 9f4:	e7 fb       	bst	r30, 7
 9f6:	0c 94 30 06 	jmp	0xc60	; 0xc60 <__fp_inf>

000009fa <__addsf3x>:
 9fa:	e9 2f       	mov	r30, r25
 9fc:	0e 94 58 06 	call	0xcb0	; 0xcb0 <__fp_split3>
 a00:	58 f3       	brcs	.-42     	; 0x9d8 <__addsf3+0xc>
 a02:	ba 17       	cp	r27, r26
 a04:	62 07       	cpc	r22, r18
 a06:	73 07       	cpc	r23, r19
 a08:	84 07       	cpc	r24, r20
 a0a:	95 07       	cpc	r25, r21
 a0c:	20 f0       	brcs	.+8      	; 0xa16 <__addsf3x+0x1c>
 a0e:	79 f4       	brne	.+30     	; 0xa2e <__addsf3x+0x34>
 a10:	a6 f5       	brtc	.+104    	; 0xa7a <__addsf3x+0x80>
 a12:	0c 94 7a 06 	jmp	0xcf4	; 0xcf4 <__fp_zero>
 a16:	0e f4       	brtc	.+2      	; 0xa1a <__addsf3x+0x20>
 a18:	e0 95       	com	r30
 a1a:	0b 2e       	mov	r0, r27
 a1c:	ba 2f       	mov	r27, r26
 a1e:	a0 2d       	mov	r26, r0
 a20:	0b 01       	movw	r0, r22
 a22:	b9 01       	movw	r22, r18
 a24:	90 01       	movw	r18, r0
 a26:	0c 01       	movw	r0, r24
 a28:	ca 01       	movw	r24, r20
 a2a:	a0 01       	movw	r20, r0
 a2c:	11 24       	eor	r1, r1
 a2e:	ff 27       	eor	r31, r31
 a30:	59 1b       	sub	r21, r25
 a32:	99 f0       	breq	.+38     	; 0xa5a <__addsf3x+0x60>
 a34:	59 3f       	cpi	r21, 0xF9	; 249
 a36:	50 f4       	brcc	.+20     	; 0xa4c <__addsf3x+0x52>
 a38:	50 3e       	cpi	r21, 0xE0	; 224
 a3a:	68 f1       	brcs	.+90     	; 0xa96 <__addsf3x+0x9c>
 a3c:	1a 16       	cp	r1, r26
 a3e:	f0 40       	sbci	r31, 0x00	; 0
 a40:	a2 2f       	mov	r26, r18
 a42:	23 2f       	mov	r18, r19
 a44:	34 2f       	mov	r19, r20
 a46:	44 27       	eor	r20, r20
 a48:	58 5f       	subi	r21, 0xF8	; 248
 a4a:	f3 cf       	rjmp	.-26     	; 0xa32 <__addsf3x+0x38>
 a4c:	46 95       	lsr	r20
 a4e:	37 95       	ror	r19
 a50:	27 95       	ror	r18
 a52:	a7 95       	ror	r26
 a54:	f0 40       	sbci	r31, 0x00	; 0
 a56:	53 95       	inc	r21
 a58:	c9 f7       	brne	.-14     	; 0xa4c <__addsf3x+0x52>
 a5a:	7e f4       	brtc	.+30     	; 0xa7a <__addsf3x+0x80>
 a5c:	1f 16       	cp	r1, r31
 a5e:	ba 0b       	sbc	r27, r26
 a60:	62 0b       	sbc	r22, r18
 a62:	73 0b       	sbc	r23, r19
 a64:	84 0b       	sbc	r24, r20
 a66:	ba f0       	brmi	.+46     	; 0xa96 <__addsf3x+0x9c>
 a68:	91 50       	subi	r25, 0x01	; 1
 a6a:	a1 f0       	breq	.+40     	; 0xa94 <__addsf3x+0x9a>
 a6c:	ff 0f       	add	r31, r31
 a6e:	bb 1f       	adc	r27, r27
 a70:	66 1f       	adc	r22, r22
 a72:	77 1f       	adc	r23, r23
 a74:	88 1f       	adc	r24, r24
 a76:	c2 f7       	brpl	.-16     	; 0xa68 <__addsf3x+0x6e>
 a78:	0e c0       	rjmp	.+28     	; 0xa96 <__addsf3x+0x9c>
 a7a:	ba 0f       	add	r27, r26
 a7c:	62 1f       	adc	r22, r18
 a7e:	73 1f       	adc	r23, r19
 a80:	84 1f       	adc	r24, r20
 a82:	48 f4       	brcc	.+18     	; 0xa96 <__addsf3x+0x9c>
 a84:	87 95       	ror	r24
 a86:	77 95       	ror	r23
 a88:	67 95       	ror	r22
 a8a:	b7 95       	ror	r27
 a8c:	f7 95       	ror	r31
 a8e:	9e 3f       	cpi	r25, 0xFE	; 254
 a90:	08 f0       	brcs	.+2      	; 0xa94 <__addsf3x+0x9a>
 a92:	b0 cf       	rjmp	.-160    	; 0x9f4 <__addsf3+0x28>
 a94:	93 95       	inc	r25
 a96:	88 0f       	add	r24, r24
 a98:	08 f0       	brcs	.+2      	; 0xa9c <__addsf3x+0xa2>
 a9a:	99 27       	eor	r25, r25
 a9c:	ee 0f       	add	r30, r30
 a9e:	97 95       	ror	r25
 aa0:	87 95       	ror	r24
 aa2:	08 95       	ret

00000aa4 <__divsf3>:
 aa4:	0e 94 66 05 	call	0xacc	; 0xacc <__divsf3x>
 aa8:	0c 94 47 06 	jmp	0xc8e	; 0xc8e <__fp_round>
 aac:	0e 94 40 06 	call	0xc80	; 0xc80 <__fp_pscB>
 ab0:	58 f0       	brcs	.+22     	; 0xac8 <__divsf3+0x24>
 ab2:	0e 94 39 06 	call	0xc72	; 0xc72 <__fp_pscA>
 ab6:	40 f0       	brcs	.+16     	; 0xac8 <__divsf3+0x24>
 ab8:	29 f4       	brne	.+10     	; 0xac4 <__divsf3+0x20>
 aba:	5f 3f       	cpi	r21, 0xFF	; 255
 abc:	29 f0       	breq	.+10     	; 0xac8 <__divsf3+0x24>
 abe:	0c 94 30 06 	jmp	0xc60	; 0xc60 <__fp_inf>
 ac2:	51 11       	cpse	r21, r1
 ac4:	0c 94 7b 06 	jmp	0xcf6	; 0xcf6 <__fp_szero>
 ac8:	0c 94 36 06 	jmp	0xc6c	; 0xc6c <__fp_nan>

00000acc <__divsf3x>:
 acc:	0e 94 58 06 	call	0xcb0	; 0xcb0 <__fp_split3>
 ad0:	68 f3       	brcs	.-38     	; 0xaac <__divsf3+0x8>

00000ad2 <__divsf3_pse>:
 ad2:	99 23       	and	r25, r25
 ad4:	b1 f3       	breq	.-20     	; 0xac2 <__divsf3+0x1e>
 ad6:	55 23       	and	r21, r21
 ad8:	91 f3       	breq	.-28     	; 0xabe <__divsf3+0x1a>
 ada:	95 1b       	sub	r25, r21
 adc:	55 0b       	sbc	r21, r21
 ade:	bb 27       	eor	r27, r27
 ae0:	aa 27       	eor	r26, r26
 ae2:	62 17       	cp	r22, r18
 ae4:	73 07       	cpc	r23, r19
 ae6:	84 07       	cpc	r24, r20
 ae8:	38 f0       	brcs	.+14     	; 0xaf8 <__divsf3_pse+0x26>
 aea:	9f 5f       	subi	r25, 0xFF	; 255
 aec:	5f 4f       	sbci	r21, 0xFF	; 255
 aee:	22 0f       	add	r18, r18
 af0:	33 1f       	adc	r19, r19
 af2:	44 1f       	adc	r20, r20
 af4:	aa 1f       	adc	r26, r26
 af6:	a9 f3       	breq	.-22     	; 0xae2 <__divsf3_pse+0x10>
 af8:	35 d0       	rcall	.+106    	; 0xb64 <__divsf3_pse+0x92>
 afa:	0e 2e       	mov	r0, r30
 afc:	3a f0       	brmi	.+14     	; 0xb0c <__divsf3_pse+0x3a>
 afe:	e0 e8       	ldi	r30, 0x80	; 128
 b00:	32 d0       	rcall	.+100    	; 0xb66 <__divsf3_pse+0x94>
 b02:	91 50       	subi	r25, 0x01	; 1
 b04:	50 40       	sbci	r21, 0x00	; 0
 b06:	e6 95       	lsr	r30
 b08:	00 1c       	adc	r0, r0
 b0a:	ca f7       	brpl	.-14     	; 0xafe <__divsf3_pse+0x2c>
 b0c:	2b d0       	rcall	.+86     	; 0xb64 <__divsf3_pse+0x92>
 b0e:	fe 2f       	mov	r31, r30
 b10:	29 d0       	rcall	.+82     	; 0xb64 <__divsf3_pse+0x92>
 b12:	66 0f       	add	r22, r22
 b14:	77 1f       	adc	r23, r23
 b16:	88 1f       	adc	r24, r24
 b18:	bb 1f       	adc	r27, r27
 b1a:	26 17       	cp	r18, r22
 b1c:	37 07       	cpc	r19, r23
 b1e:	48 07       	cpc	r20, r24
 b20:	ab 07       	cpc	r26, r27
 b22:	b0 e8       	ldi	r27, 0x80	; 128
 b24:	09 f0       	breq	.+2      	; 0xb28 <__divsf3_pse+0x56>
 b26:	bb 0b       	sbc	r27, r27
 b28:	80 2d       	mov	r24, r0
 b2a:	bf 01       	movw	r22, r30
 b2c:	ff 27       	eor	r31, r31
 b2e:	93 58       	subi	r25, 0x83	; 131
 b30:	5f 4f       	sbci	r21, 0xFF	; 255
 b32:	3a f0       	brmi	.+14     	; 0xb42 <__divsf3_pse+0x70>
 b34:	9e 3f       	cpi	r25, 0xFE	; 254
 b36:	51 05       	cpc	r21, r1
 b38:	78 f0       	brcs	.+30     	; 0xb58 <__divsf3_pse+0x86>
 b3a:	0c 94 30 06 	jmp	0xc60	; 0xc60 <__fp_inf>
 b3e:	0c 94 7b 06 	jmp	0xcf6	; 0xcf6 <__fp_szero>
 b42:	5f 3f       	cpi	r21, 0xFF	; 255
 b44:	e4 f3       	brlt	.-8      	; 0xb3e <__divsf3_pse+0x6c>
 b46:	98 3e       	cpi	r25, 0xE8	; 232
 b48:	d4 f3       	brlt	.-12     	; 0xb3e <__divsf3_pse+0x6c>
 b4a:	86 95       	lsr	r24
 b4c:	77 95       	ror	r23
 b4e:	67 95       	ror	r22
 b50:	b7 95       	ror	r27
 b52:	f7 95       	ror	r31
 b54:	9f 5f       	subi	r25, 0xFF	; 255
 b56:	c9 f7       	brne	.-14     	; 0xb4a <__divsf3_pse+0x78>
 b58:	88 0f       	add	r24, r24
 b5a:	91 1d       	adc	r25, r1
 b5c:	96 95       	lsr	r25
 b5e:	87 95       	ror	r24
 b60:	97 f9       	bld	r25, 7
 b62:	08 95       	ret
 b64:	e1 e0       	ldi	r30, 0x01	; 1
 b66:	66 0f       	add	r22, r22
 b68:	77 1f       	adc	r23, r23
 b6a:	88 1f       	adc	r24, r24
 b6c:	bb 1f       	adc	r27, r27
 b6e:	62 17       	cp	r22, r18
 b70:	73 07       	cpc	r23, r19
 b72:	84 07       	cpc	r24, r20
 b74:	ba 07       	cpc	r27, r26
 b76:	20 f0       	brcs	.+8      	; 0xb80 <__divsf3_pse+0xae>
 b78:	62 1b       	sub	r22, r18
 b7a:	73 0b       	sbc	r23, r19
 b7c:	84 0b       	sbc	r24, r20
 b7e:	ba 0b       	sbc	r27, r26
 b80:	ee 1f       	adc	r30, r30
 b82:	88 f7       	brcc	.-30     	; 0xb66 <__divsf3_pse+0x94>
 b84:	e0 95       	com	r30
 b86:	08 95       	ret

00000b88 <__fixunssfsi>:
 b88:	0e 94 60 06 	call	0xcc0	; 0xcc0 <__fp_splitA>
 b8c:	88 f0       	brcs	.+34     	; 0xbb0 <__fixunssfsi+0x28>
 b8e:	9f 57       	subi	r25, 0x7F	; 127
 b90:	98 f0       	brcs	.+38     	; 0xbb8 <__fixunssfsi+0x30>
 b92:	b9 2f       	mov	r27, r25
 b94:	99 27       	eor	r25, r25
 b96:	b7 51       	subi	r27, 0x17	; 23
 b98:	b0 f0       	brcs	.+44     	; 0xbc6 <__fixunssfsi+0x3e>
 b9a:	e1 f0       	breq	.+56     	; 0xbd4 <__fixunssfsi+0x4c>
 b9c:	66 0f       	add	r22, r22
 b9e:	77 1f       	adc	r23, r23
 ba0:	88 1f       	adc	r24, r24
 ba2:	99 1f       	adc	r25, r25
 ba4:	1a f0       	brmi	.+6      	; 0xbac <__fixunssfsi+0x24>
 ba6:	ba 95       	dec	r27
 ba8:	c9 f7       	brne	.-14     	; 0xb9c <__fixunssfsi+0x14>
 baa:	14 c0       	rjmp	.+40     	; 0xbd4 <__fixunssfsi+0x4c>
 bac:	b1 30       	cpi	r27, 0x01	; 1
 bae:	91 f0       	breq	.+36     	; 0xbd4 <__fixunssfsi+0x4c>
 bb0:	0e 94 7a 06 	call	0xcf4	; 0xcf4 <__fp_zero>
 bb4:	b1 e0       	ldi	r27, 0x01	; 1
 bb6:	08 95       	ret
 bb8:	0c 94 7a 06 	jmp	0xcf4	; 0xcf4 <__fp_zero>
 bbc:	67 2f       	mov	r22, r23
 bbe:	78 2f       	mov	r23, r24
 bc0:	88 27       	eor	r24, r24
 bc2:	b8 5f       	subi	r27, 0xF8	; 248
 bc4:	39 f0       	breq	.+14     	; 0xbd4 <__fixunssfsi+0x4c>
 bc6:	b9 3f       	cpi	r27, 0xF9	; 249
 bc8:	cc f3       	brlt	.-14     	; 0xbbc <__fixunssfsi+0x34>
 bca:	86 95       	lsr	r24
 bcc:	77 95       	ror	r23
 bce:	67 95       	ror	r22
 bd0:	b3 95       	inc	r27
 bd2:	d9 f7       	brne	.-10     	; 0xbca <__fixunssfsi+0x42>
 bd4:	3e f4       	brtc	.+14     	; 0xbe4 <__fixunssfsi+0x5c>
 bd6:	90 95       	com	r25
 bd8:	80 95       	com	r24
 bda:	70 95       	com	r23
 bdc:	61 95       	neg	r22
 bde:	7f 4f       	sbci	r23, 0xFF	; 255
 be0:	8f 4f       	sbci	r24, 0xFF	; 255
 be2:	9f 4f       	sbci	r25, 0xFF	; 255
 be4:	08 95       	ret

00000be6 <__floatunsisf>:
 be6:	e8 94       	clt
 be8:	09 c0       	rjmp	.+18     	; 0xbfc <__floatsisf+0x12>

00000bea <__floatsisf>:
 bea:	97 fb       	bst	r25, 7
 bec:	3e f4       	brtc	.+14     	; 0xbfc <__floatsisf+0x12>
 bee:	90 95       	com	r25
 bf0:	80 95       	com	r24
 bf2:	70 95       	com	r23
 bf4:	61 95       	neg	r22
 bf6:	7f 4f       	sbci	r23, 0xFF	; 255
 bf8:	8f 4f       	sbci	r24, 0xFF	; 255
 bfa:	9f 4f       	sbci	r25, 0xFF	; 255
 bfc:	99 23       	and	r25, r25
 bfe:	a9 f0       	breq	.+42     	; 0xc2a <__floatsisf+0x40>
 c00:	f9 2f       	mov	r31, r25
 c02:	96 e9       	ldi	r25, 0x96	; 150
 c04:	bb 27       	eor	r27, r27
 c06:	93 95       	inc	r25
 c08:	f6 95       	lsr	r31
 c0a:	87 95       	ror	r24
 c0c:	77 95       	ror	r23
 c0e:	67 95       	ror	r22
 c10:	b7 95       	ror	r27
 c12:	f1 11       	cpse	r31, r1
 c14:	f8 cf       	rjmp	.-16     	; 0xc06 <__floatsisf+0x1c>
 c16:	fa f4       	brpl	.+62     	; 0xc56 <__floatsisf+0x6c>
 c18:	bb 0f       	add	r27, r27
 c1a:	11 f4       	brne	.+4      	; 0xc20 <__floatsisf+0x36>
 c1c:	60 ff       	sbrs	r22, 0
 c1e:	1b c0       	rjmp	.+54     	; 0xc56 <__floatsisf+0x6c>
 c20:	6f 5f       	subi	r22, 0xFF	; 255
 c22:	7f 4f       	sbci	r23, 0xFF	; 255
 c24:	8f 4f       	sbci	r24, 0xFF	; 255
 c26:	9f 4f       	sbci	r25, 0xFF	; 255
 c28:	16 c0       	rjmp	.+44     	; 0xc56 <__floatsisf+0x6c>
 c2a:	88 23       	and	r24, r24
 c2c:	11 f0       	breq	.+4      	; 0xc32 <__floatsisf+0x48>
 c2e:	96 e9       	ldi	r25, 0x96	; 150
 c30:	11 c0       	rjmp	.+34     	; 0xc54 <__floatsisf+0x6a>
 c32:	77 23       	and	r23, r23
 c34:	21 f0       	breq	.+8      	; 0xc3e <__floatsisf+0x54>
 c36:	9e e8       	ldi	r25, 0x8E	; 142
 c38:	87 2f       	mov	r24, r23
 c3a:	76 2f       	mov	r23, r22
 c3c:	05 c0       	rjmp	.+10     	; 0xc48 <__floatsisf+0x5e>
 c3e:	66 23       	and	r22, r22
 c40:	71 f0       	breq	.+28     	; 0xc5e <__floatsisf+0x74>
 c42:	96 e8       	ldi	r25, 0x86	; 134
 c44:	86 2f       	mov	r24, r22
 c46:	70 e0       	ldi	r23, 0x00	; 0
 c48:	60 e0       	ldi	r22, 0x00	; 0
 c4a:	2a f0       	brmi	.+10     	; 0xc56 <__floatsisf+0x6c>
 c4c:	9a 95       	dec	r25
 c4e:	66 0f       	add	r22, r22
 c50:	77 1f       	adc	r23, r23
 c52:	88 1f       	adc	r24, r24
 c54:	da f7       	brpl	.-10     	; 0xc4c <__floatsisf+0x62>
 c56:	88 0f       	add	r24, r24
 c58:	96 95       	lsr	r25
 c5a:	87 95       	ror	r24
 c5c:	97 f9       	bld	r25, 7
 c5e:	08 95       	ret

00000c60 <__fp_inf>:
 c60:	97 f9       	bld	r25, 7
 c62:	9f 67       	ori	r25, 0x7F	; 127
 c64:	80 e8       	ldi	r24, 0x80	; 128
 c66:	70 e0       	ldi	r23, 0x00	; 0
 c68:	60 e0       	ldi	r22, 0x00	; 0
 c6a:	08 95       	ret

00000c6c <__fp_nan>:
 c6c:	9f ef       	ldi	r25, 0xFF	; 255
 c6e:	80 ec       	ldi	r24, 0xC0	; 192
 c70:	08 95       	ret

00000c72 <__fp_pscA>:
 c72:	00 24       	eor	r0, r0
 c74:	0a 94       	dec	r0
 c76:	16 16       	cp	r1, r22
 c78:	17 06       	cpc	r1, r23
 c7a:	18 06       	cpc	r1, r24
 c7c:	09 06       	cpc	r0, r25
 c7e:	08 95       	ret

00000c80 <__fp_pscB>:
 c80:	00 24       	eor	r0, r0
 c82:	0a 94       	dec	r0
 c84:	12 16       	cp	r1, r18
 c86:	13 06       	cpc	r1, r19
 c88:	14 06       	cpc	r1, r20
 c8a:	05 06       	cpc	r0, r21
 c8c:	08 95       	ret

00000c8e <__fp_round>:
 c8e:	09 2e       	mov	r0, r25
 c90:	03 94       	inc	r0
 c92:	00 0c       	add	r0, r0
 c94:	11 f4       	brne	.+4      	; 0xc9a <__fp_round+0xc>
 c96:	88 23       	and	r24, r24
 c98:	52 f0       	brmi	.+20     	; 0xcae <__fp_round+0x20>
 c9a:	bb 0f       	add	r27, r27
 c9c:	40 f4       	brcc	.+16     	; 0xcae <__fp_round+0x20>
 c9e:	bf 2b       	or	r27, r31
 ca0:	11 f4       	brne	.+4      	; 0xca6 <__fp_round+0x18>
 ca2:	60 ff       	sbrs	r22, 0
 ca4:	04 c0       	rjmp	.+8      	; 0xcae <__fp_round+0x20>
 ca6:	6f 5f       	subi	r22, 0xFF	; 255
 ca8:	7f 4f       	sbci	r23, 0xFF	; 255
 caa:	8f 4f       	sbci	r24, 0xFF	; 255
 cac:	9f 4f       	sbci	r25, 0xFF	; 255
 cae:	08 95       	ret

00000cb0 <__fp_split3>:
 cb0:	57 fd       	sbrc	r21, 7
 cb2:	90 58       	subi	r25, 0x80	; 128
 cb4:	44 0f       	add	r20, r20
 cb6:	55 1f       	adc	r21, r21
 cb8:	59 f0       	breq	.+22     	; 0xcd0 <__fp_splitA+0x10>
 cba:	5f 3f       	cpi	r21, 0xFF	; 255
 cbc:	71 f0       	breq	.+28     	; 0xcda <__fp_splitA+0x1a>
 cbe:	47 95       	ror	r20

00000cc0 <__fp_splitA>:
 cc0:	88 0f       	add	r24, r24
 cc2:	97 fb       	bst	r25, 7
 cc4:	99 1f       	adc	r25, r25
 cc6:	61 f0       	breq	.+24     	; 0xce0 <__fp_splitA+0x20>
 cc8:	9f 3f       	cpi	r25, 0xFF	; 255
 cca:	79 f0       	breq	.+30     	; 0xcea <__fp_splitA+0x2a>
 ccc:	87 95       	ror	r24
 cce:	08 95       	ret
 cd0:	12 16       	cp	r1, r18
 cd2:	13 06       	cpc	r1, r19
 cd4:	14 06       	cpc	r1, r20
 cd6:	55 1f       	adc	r21, r21
 cd8:	f2 cf       	rjmp	.-28     	; 0xcbe <__fp_split3+0xe>
 cda:	46 95       	lsr	r20
 cdc:	f1 df       	rcall	.-30     	; 0xcc0 <__fp_splitA>
 cde:	08 c0       	rjmp	.+16     	; 0xcf0 <__fp_splitA+0x30>
 ce0:	16 16       	cp	r1, r22
 ce2:	17 06       	cpc	r1, r23
 ce4:	18 06       	cpc	r1, r24
 ce6:	99 1f       	adc	r25, r25
 ce8:	f1 cf       	rjmp	.-30     	; 0xccc <__fp_splitA+0xc>
 cea:	86 95       	lsr	r24
 cec:	71 05       	cpc	r23, r1
 cee:	61 05       	cpc	r22, r1
 cf0:	08 94       	sec
 cf2:	08 95       	ret

00000cf4 <__fp_zero>:
 cf4:	e8 94       	clt

00000cf6 <__fp_szero>:
 cf6:	bb 27       	eor	r27, r27
 cf8:	66 27       	eor	r22, r22
 cfa:	77 27       	eor	r23, r23
 cfc:	cb 01       	movw	r24, r22
 cfe:	97 f9       	bld	r25, 7
 d00:	08 95       	ret

00000d02 <__mulsf3>:
 d02:	0e 94 94 06 	call	0xd28	; 0xd28 <__mulsf3x>
 d06:	0c 94 47 06 	jmp	0xc8e	; 0xc8e <__fp_round>
 d0a:	0e 94 39 06 	call	0xc72	; 0xc72 <__fp_pscA>
 d0e:	38 f0       	brcs	.+14     	; 0xd1e <__mulsf3+0x1c>
 d10:	0e 94 40 06 	call	0xc80	; 0xc80 <__fp_pscB>
 d14:	20 f0       	brcs	.+8      	; 0xd1e <__mulsf3+0x1c>
 d16:	95 23       	and	r25, r21
 d18:	11 f0       	breq	.+4      	; 0xd1e <__mulsf3+0x1c>
 d1a:	0c 94 30 06 	jmp	0xc60	; 0xc60 <__fp_inf>
 d1e:	0c 94 36 06 	jmp	0xc6c	; 0xc6c <__fp_nan>
 d22:	11 24       	eor	r1, r1
 d24:	0c 94 7b 06 	jmp	0xcf6	; 0xcf6 <__fp_szero>

00000d28 <__mulsf3x>:
 d28:	0e 94 58 06 	call	0xcb0	; 0xcb0 <__fp_split3>
 d2c:	70 f3       	brcs	.-36     	; 0xd0a <__mulsf3+0x8>

00000d2e <__mulsf3_pse>:
 d2e:	95 9f       	mul	r25, r21
 d30:	c1 f3       	breq	.-16     	; 0xd22 <__mulsf3+0x20>
 d32:	95 0f       	add	r25, r21
 d34:	50 e0       	ldi	r21, 0x00	; 0
 d36:	55 1f       	adc	r21, r21
 d38:	62 9f       	mul	r22, r18
 d3a:	f0 01       	movw	r30, r0
 d3c:	72 9f       	mul	r23, r18
 d3e:	bb 27       	eor	r27, r27
 d40:	f0 0d       	add	r31, r0
 d42:	b1 1d       	adc	r27, r1
 d44:	63 9f       	mul	r22, r19
 d46:	aa 27       	eor	r26, r26
 d48:	f0 0d       	add	r31, r0
 d4a:	b1 1d       	adc	r27, r1
 d4c:	aa 1f       	adc	r26, r26
 d4e:	64 9f       	mul	r22, r20
 d50:	66 27       	eor	r22, r22
 d52:	b0 0d       	add	r27, r0
 d54:	a1 1d       	adc	r26, r1
 d56:	66 1f       	adc	r22, r22
 d58:	82 9f       	mul	r24, r18
 d5a:	22 27       	eor	r18, r18
 d5c:	b0 0d       	add	r27, r0
 d5e:	a1 1d       	adc	r26, r1
 d60:	62 1f       	adc	r22, r18
 d62:	73 9f       	mul	r23, r19
 d64:	b0 0d       	add	r27, r0
 d66:	a1 1d       	adc	r26, r1
 d68:	62 1f       	adc	r22, r18
 d6a:	83 9f       	mul	r24, r19
 d6c:	a0 0d       	add	r26, r0
 d6e:	61 1d       	adc	r22, r1
 d70:	22 1f       	adc	r18, r18
 d72:	74 9f       	mul	r23, r20
 d74:	33 27       	eor	r19, r19
 d76:	a0 0d       	add	r26, r0
 d78:	61 1d       	adc	r22, r1
 d7a:	23 1f       	adc	r18, r19
 d7c:	84 9f       	mul	r24, r20
 d7e:	60 0d       	add	r22, r0
 d80:	21 1d       	adc	r18, r1
 d82:	82 2f       	mov	r24, r18
 d84:	76 2f       	mov	r23, r22
 d86:	6a 2f       	mov	r22, r26
 d88:	11 24       	eor	r1, r1
 d8a:	9f 57       	subi	r25, 0x7F	; 127
 d8c:	50 40       	sbci	r21, 0x00	; 0
 d8e:	9a f0       	brmi	.+38     	; 0xdb6 <__mulsf3_pse+0x88>
 d90:	f1 f0       	breq	.+60     	; 0xdce <__mulsf3_pse+0xa0>
 d92:	88 23       	and	r24, r24
 d94:	4a f0       	brmi	.+18     	; 0xda8 <__mulsf3_pse+0x7a>
 d96:	ee 0f       	add	r30, r30
 d98:	ff 1f       	adc	r31, r31
 d9a:	bb 1f       	adc	r27, r27
 d9c:	66 1f       	adc	r22, r22
 d9e:	77 1f       	adc	r23, r23
 da0:	88 1f       	adc	r24, r24
 da2:	91 50       	subi	r25, 0x01	; 1
 da4:	50 40       	sbci	r21, 0x00	; 0
 da6:	a9 f7       	brne	.-22     	; 0xd92 <__mulsf3_pse+0x64>
 da8:	9e 3f       	cpi	r25, 0xFE	; 254
 daa:	51 05       	cpc	r21, r1
 dac:	80 f0       	brcs	.+32     	; 0xdce <__mulsf3_pse+0xa0>
 dae:	0c 94 30 06 	jmp	0xc60	; 0xc60 <__fp_inf>
 db2:	0c 94 7b 06 	jmp	0xcf6	; 0xcf6 <__fp_szero>
 db6:	5f 3f       	cpi	r21, 0xFF	; 255
 db8:	e4 f3       	brlt	.-8      	; 0xdb2 <__mulsf3_pse+0x84>
 dba:	98 3e       	cpi	r25, 0xE8	; 232
 dbc:	d4 f3       	brlt	.-12     	; 0xdb2 <__mulsf3_pse+0x84>
 dbe:	86 95       	lsr	r24
 dc0:	77 95       	ror	r23
 dc2:	67 95       	ror	r22
 dc4:	b7 95       	ror	r27
 dc6:	f7 95       	ror	r31
 dc8:	e7 95       	ror	r30
 dca:	9f 5f       	subi	r25, 0xFF	; 255
 dcc:	c1 f7       	brne	.-16     	; 0xdbe <__mulsf3_pse+0x90>
 dce:	fe 2b       	or	r31, r30
 dd0:	88 0f       	add	r24, r24
 dd2:	91 1d       	adc	r25, r1
 dd4:	96 95       	lsr	r25
 dd6:	87 95       	ror	r24
 dd8:	97 f9       	bld	r25, 7
 dda:	08 95       	ret

00000ddc <_exit>:
 ddc:	f8 94       	cli

00000dde <__stop_program>:
 dde:	ff cf       	rjmp	.-2      	; 0xdde <__stop_program>
=======
00000886 <TIM0_STOP>:
 886:	88 b7       	in	r24, 0x38	; 56
 888:	81 60       	ori	r24, 0x01	; 1
 88a:	88 bf       	out	0x38, r24	; 56
 88c:	80 e0       	ldi	r24, 0x00	; 0
 88e:	90 e0       	ldi	r25, 0x00	; 0
 890:	0e 94 1a 04 	call	0x834	; 0x834 <SET_prescaler>
 894:	08 95       	ret

00000896 <Timer_MODEs>:


/***************** init********************************/
void Timer_MODEs(uint8_t T_mode)
{
	if(T_mode==MODE0)
 896:	81 11       	cpse	r24, r1
 898:	04 c0       	rjmp	.+8      	; 0x8a2 <Timer_MODEs+0xc>
	{
		_TCCR0_ &=~((1<<_WGM00_)|(1<<_WGM01_));
 89a:	83 b7       	in	r24, 0x33	; 51
 89c:	87 7b       	andi	r24, 0xB7	; 183
 89e:	83 bf       	out	0x33, r24	; 51
 8a0:	08 95       	ret
	}
	else if (T_mode==MODE1)
 8a2:	81 30       	cpi	r24, 0x01	; 1
 8a4:	39 f4       	brne	.+14     	; 0x8b4 <Timer_MODEs+0x1e>
	{
		_TCCR0_ |= (1<<_WGM01_);
 8a6:	83 b7       	in	r24, 0x33	; 51
 8a8:	88 60       	ori	r24, 0x08	; 8
 8aa:	83 bf       	out	0x33, r24	; 51
		_TCCR0_ &= ~(1<<_WGM00_);
 8ac:	83 b7       	in	r24, 0x33	; 51
 8ae:	8f 7b       	andi	r24, 0xBF	; 191
 8b0:	83 bf       	out	0x33, r24	; 51
 8b2:	08 95       	ret
	}
	else if(T_mode==MODE2)
 8b4:	82 30       	cpi	r24, 0x02	; 2
 8b6:	39 f4       	brne	.+14     	; 0x8c6 <Timer_MODEs+0x30>
	{
		_TCCR0_ |= (1<<_WGM00_);
 8b8:	83 b7       	in	r24, 0x33	; 51
 8ba:	80 64       	ori	r24, 0x40	; 64
 8bc:	83 bf       	out	0x33, r24	; 51
		_TCCR0_ &= ~(1<<_WGM01_);		
 8be:	83 b7       	in	r24, 0x33	; 51
 8c0:	87 7f       	andi	r24, 0xF7	; 247
 8c2:	83 bf       	out	0x33, r24	; 51
 8c4:	08 95       	ret
	}
	else if(T_mode==Fast_PWM)
 8c6:	83 30       	cpi	r24, 0x03	; 3
 8c8:	19 f4       	brne	.+6      	; 0x8d0 <Timer_MODEs+0x3a>
	{
		_TCCR0_ |=(1<< _WGM00_)|(1<< _WGM01_);
 8ca:	83 b7       	in	r24, 0x33	; 51
 8cc:	88 64       	ori	r24, 0x48	; 72
 8ce:	83 bf       	out	0x33, r24	; 51
 8d0:	08 95       	ret

000008d2 <TIM0_PWM_start>:
#include "../../includes/definitions.h"

extern float TON, TOFF, period;

void TIM0_PWM_start(float duty, float freq)
{
 8d2:	8f 92       	push	r8
 8d4:	9f 92       	push	r9
 8d6:	af 92       	push	r10
 8d8:	bf 92       	push	r11
 8da:	cf 92       	push	r12
 8dc:	df 92       	push	r13
 8de:	ef 92       	push	r14
 8e0:	ff 92       	push	r15
 8e2:	4b 01       	movw	r8, r22
 8e4:	5c 01       	movw	r10, r24
	period = 1/freq;
 8e6:	60 e0       	ldi	r22, 0x00	; 0
 8e8:	70 e0       	ldi	r23, 0x00	; 0
 8ea:	80 e8       	ldi	r24, 0x80	; 128
 8ec:	9f e3       	ldi	r25, 0x3F	; 63
 8ee:	0e 94 51 05 	call	0xaa2	; 0xaa2 <__divsf3>
 8f2:	6b 01       	movw	r12, r22
 8f4:	7c 01       	movw	r14, r24
 8f6:	60 93 73 00 	sts	0x0073, r22	; 0x800073 <period>
 8fa:	70 93 74 00 	sts	0x0074, r23	; 0x800074 <period+0x1>
 8fe:	80 93 75 00 	sts	0x0075, r24	; 0x800075 <period+0x2>
 902:	90 93 76 00 	sts	0x0076, r25	; 0x800076 <period+0x3>
	TON=(period*duty)/100;
 906:	a5 01       	movw	r20, r10
 908:	94 01       	movw	r18, r8
 90a:	0e 94 80 06 	call	0xd00	; 0xd00 <__mulsf3>
 90e:	20 e0       	ldi	r18, 0x00	; 0
 910:	30 e0       	ldi	r19, 0x00	; 0
 912:	48 ec       	ldi	r20, 0xC8	; 200
 914:	52 e4       	ldi	r21, 0x42	; 66
 916:	0e 94 51 05 	call	0xaa2	; 0xaa2 <__divsf3>
 91a:	4b 01       	movw	r8, r22
 91c:	5c 01       	movw	r10, r24
	TOFF=period-TON;
	TON= 255-((CLOCK_INTERNAL*TON)/Prescaler_256_);
 91e:	20 e0       	ldi	r18, 0x00	; 0
 920:	34 e2       	ldi	r19, 0x24	; 36
 922:	44 e7       	ldi	r20, 0x74	; 116
 924:	59 e4       	ldi	r21, 0x49	; 73
 926:	0e 94 80 06 	call	0xd00	; 0xd00 <__mulsf3>
 92a:	20 e0       	ldi	r18, 0x00	; 0
 92c:	30 e0       	ldi	r19, 0x00	; 0
 92e:	40 e8       	ldi	r20, 0x80	; 128
 930:	5b e3       	ldi	r21, 0x3B	; 59
 932:	0e 94 80 06 	call	0xd00	; 0xd00 <__mulsf3>
 936:	9b 01       	movw	r18, r22
 938:	ac 01       	movw	r20, r24
 93a:	60 e0       	ldi	r22, 0x00	; 0
 93c:	70 e0       	ldi	r23, 0x00	; 0
 93e:	8f e7       	ldi	r24, 0x7F	; 127
 940:	93 e4       	ldi	r25, 0x43	; 67
 942:	0e 94 e4 04 	call	0x9c8	; 0x9c8 <__subsf3>
 946:	60 93 6f 00 	sts	0x006F, r22	; 0x80006f <TON>
 94a:	70 93 70 00 	sts	0x0070, r23	; 0x800070 <TON+0x1>
 94e:	80 93 71 00 	sts	0x0071, r24	; 0x800071 <TON+0x2>
 952:	90 93 72 00 	sts	0x0072, r25	; 0x800072 <TON+0x3>
	TOFF= 255-((CLOCK_INTERNAL*TOFF)/Prescaler_256_);
 956:	a5 01       	movw	r20, r10
 958:	94 01       	movw	r18, r8
 95a:	c7 01       	movw	r24, r14
 95c:	b6 01       	movw	r22, r12
 95e:	0e 94 e4 04 	call	0x9c8	; 0x9c8 <__subsf3>
 962:	20 e0       	ldi	r18, 0x00	; 0
 964:	34 e2       	ldi	r19, 0x24	; 36
 966:	44 e7       	ldi	r20, 0x74	; 116
 968:	59 e4       	ldi	r21, 0x49	; 73
 96a:	0e 94 80 06 	call	0xd00	; 0xd00 <__mulsf3>
 96e:	20 e0       	ldi	r18, 0x00	; 0
 970:	30 e0       	ldi	r19, 0x00	; 0
 972:	40 e8       	ldi	r20, 0x80	; 128
 974:	5b e3       	ldi	r21, 0x3B	; 59
 976:	0e 94 80 06 	call	0xd00	; 0xd00 <__mulsf3>
 97a:	9b 01       	movw	r18, r22
 97c:	ac 01       	movw	r20, r24
 97e:	60 e0       	ldi	r22, 0x00	; 0
 980:	70 e0       	ldi	r23, 0x00	; 0
 982:	8f e7       	ldi	r24, 0x7F	; 127
 984:	93 e4       	ldi	r25, 0x43	; 67
 986:	0e 94 e4 04 	call	0x9c8	; 0x9c8 <__subsf3>
 98a:	60 93 6b 00 	sts	0x006B, r22	; 0x80006b <TOFF>
 98e:	70 93 6c 00 	sts	0x006C, r23	; 0x80006c <TOFF+0x1>
 992:	80 93 6d 00 	sts	0x006D, r24	; 0x80006d <TOFF+0x2>
 996:	90 93 6e 00 	sts	0x006E, r25	; 0x80006e <TOFF+0x3>
	SET_prescaler(Prescaler_256_);
 99a:	80 e0       	ldi	r24, 0x00	; 0
 99c:	91 e0       	ldi	r25, 0x01	; 1
 99e:	0e 94 1a 04 	call	0x834	; 0x834 <SET_prescaler>
	
}
 9a2:	ff 90       	pop	r15
 9a4:	ef 90       	pop	r14
 9a6:	df 90       	pop	r13
 9a8:	cf 90       	pop	r12
 9aa:	bf 90       	pop	r11
 9ac:	af 90       	pop	r10
 9ae:	9f 90       	pop	r9
 9b0:	8f 90       	pop	r8
 9b2:	08 95       	ret

000009b4 <TIM0_PWM_INIT>:

	// Enable OVF interrupt and global interrupt
	
void TIM0_PWM_INIT(){
	Timer_MODEs(MODE0);
 9b4:	80 e0       	ldi	r24, 0x00	; 0
 9b6:	0e 94 4b 04 	call	0x896	; 0x896 <Timer_MODEs>
	_TIMSK_ |= (1<<_TOIE0_);
 9ba:	89 b7       	in	r24, 0x39	; 57
 9bc:	81 60       	ori	r24, 0x01	; 1
 9be:	89 bf       	out	0x39, r24	; 57
	_SREG_ |= (1<<I);
 9c0:	8f b7       	in	r24, 0x3f	; 63
 9c2:	80 68       	ori	r24, 0x80	; 128
 9c4:	8f bf       	out	0x3f, r24	; 63
 9c6:	08 95       	ret

000009c8 <__subsf3>:
 9c8:	50 58       	subi	r21, 0x80	; 128

000009ca <__addsf3>:
 9ca:	bb 27       	eor	r27, r27
 9cc:	aa 27       	eor	r26, r26
 9ce:	0e 94 fc 04 	call	0x9f8	; 0x9f8 <__addsf3x>
 9d2:	0c 94 46 06 	jmp	0xc8c	; 0xc8c <__fp_round>
 9d6:	0e 94 38 06 	call	0xc70	; 0xc70 <__fp_pscA>
 9da:	38 f0       	brcs	.+14     	; 0x9ea <__addsf3+0x20>
 9dc:	0e 94 3f 06 	call	0xc7e	; 0xc7e <__fp_pscB>
 9e0:	20 f0       	brcs	.+8      	; 0x9ea <__addsf3+0x20>
 9e2:	39 f4       	brne	.+14     	; 0x9f2 <__addsf3+0x28>
 9e4:	9f 3f       	cpi	r25, 0xFF	; 255
 9e6:	19 f4       	brne	.+6      	; 0x9ee <__addsf3+0x24>
 9e8:	26 f4       	brtc	.+8      	; 0x9f2 <__addsf3+0x28>
 9ea:	0c 94 35 06 	jmp	0xc6a	; 0xc6a <__fp_nan>
 9ee:	0e f4       	brtc	.+2      	; 0x9f2 <__addsf3+0x28>
 9f0:	e0 95       	com	r30
 9f2:	e7 fb       	bst	r30, 7
 9f4:	0c 94 2f 06 	jmp	0xc5e	; 0xc5e <__fp_inf>

000009f8 <__addsf3x>:
 9f8:	e9 2f       	mov	r30, r25
 9fa:	0e 94 57 06 	call	0xcae	; 0xcae <__fp_split3>
 9fe:	58 f3       	brcs	.-42     	; 0x9d6 <__addsf3+0xc>
 a00:	ba 17       	cp	r27, r26
 a02:	62 07       	cpc	r22, r18
 a04:	73 07       	cpc	r23, r19
 a06:	84 07       	cpc	r24, r20
 a08:	95 07       	cpc	r25, r21
 a0a:	20 f0       	brcs	.+8      	; 0xa14 <__addsf3x+0x1c>
 a0c:	79 f4       	brne	.+30     	; 0xa2c <__addsf3x+0x34>
 a0e:	a6 f5       	brtc	.+104    	; 0xa78 <__addsf3x+0x80>
 a10:	0c 94 79 06 	jmp	0xcf2	; 0xcf2 <__fp_zero>
 a14:	0e f4       	brtc	.+2      	; 0xa18 <__addsf3x+0x20>
 a16:	e0 95       	com	r30
 a18:	0b 2e       	mov	r0, r27
 a1a:	ba 2f       	mov	r27, r26
 a1c:	a0 2d       	mov	r26, r0
 a1e:	0b 01       	movw	r0, r22
 a20:	b9 01       	movw	r22, r18
 a22:	90 01       	movw	r18, r0
 a24:	0c 01       	movw	r0, r24
 a26:	ca 01       	movw	r24, r20
 a28:	a0 01       	movw	r20, r0
 a2a:	11 24       	eor	r1, r1
 a2c:	ff 27       	eor	r31, r31
 a2e:	59 1b       	sub	r21, r25
 a30:	99 f0       	breq	.+38     	; 0xa58 <__addsf3x+0x60>
 a32:	59 3f       	cpi	r21, 0xF9	; 249
 a34:	50 f4       	brcc	.+20     	; 0xa4a <__addsf3x+0x52>
 a36:	50 3e       	cpi	r21, 0xE0	; 224
 a38:	68 f1       	brcs	.+90     	; 0xa94 <__addsf3x+0x9c>
 a3a:	1a 16       	cp	r1, r26
 a3c:	f0 40       	sbci	r31, 0x00	; 0
 a3e:	a2 2f       	mov	r26, r18
 a40:	23 2f       	mov	r18, r19
 a42:	34 2f       	mov	r19, r20
 a44:	44 27       	eor	r20, r20
 a46:	58 5f       	subi	r21, 0xF8	; 248
 a48:	f3 cf       	rjmp	.-26     	; 0xa30 <__addsf3x+0x38>
 a4a:	46 95       	lsr	r20
 a4c:	37 95       	ror	r19
 a4e:	27 95       	ror	r18
 a50:	a7 95       	ror	r26
 a52:	f0 40       	sbci	r31, 0x00	; 0
 a54:	53 95       	inc	r21
 a56:	c9 f7       	brne	.-14     	; 0xa4a <__addsf3x+0x52>
 a58:	7e f4       	brtc	.+30     	; 0xa78 <__addsf3x+0x80>
 a5a:	1f 16       	cp	r1, r31
 a5c:	ba 0b       	sbc	r27, r26
 a5e:	62 0b       	sbc	r22, r18
 a60:	73 0b       	sbc	r23, r19
 a62:	84 0b       	sbc	r24, r20
 a64:	ba f0       	brmi	.+46     	; 0xa94 <__addsf3x+0x9c>
 a66:	91 50       	subi	r25, 0x01	; 1
 a68:	a1 f0       	breq	.+40     	; 0xa92 <__addsf3x+0x9a>
 a6a:	ff 0f       	add	r31, r31
 a6c:	bb 1f       	adc	r27, r27
 a6e:	66 1f       	adc	r22, r22
 a70:	77 1f       	adc	r23, r23
 a72:	88 1f       	adc	r24, r24
 a74:	c2 f7       	brpl	.-16     	; 0xa66 <__addsf3x+0x6e>
 a76:	0e c0       	rjmp	.+28     	; 0xa94 <__addsf3x+0x9c>
 a78:	ba 0f       	add	r27, r26
 a7a:	62 1f       	adc	r22, r18
 a7c:	73 1f       	adc	r23, r19
 a7e:	84 1f       	adc	r24, r20
 a80:	48 f4       	brcc	.+18     	; 0xa94 <__addsf3x+0x9c>
 a82:	87 95       	ror	r24
 a84:	77 95       	ror	r23
 a86:	67 95       	ror	r22
 a88:	b7 95       	ror	r27
 a8a:	f7 95       	ror	r31
 a8c:	9e 3f       	cpi	r25, 0xFE	; 254
 a8e:	08 f0       	brcs	.+2      	; 0xa92 <__addsf3x+0x9a>
 a90:	b0 cf       	rjmp	.-160    	; 0x9f2 <__addsf3+0x28>
 a92:	93 95       	inc	r25
 a94:	88 0f       	add	r24, r24
 a96:	08 f0       	brcs	.+2      	; 0xa9a <__addsf3x+0xa2>
 a98:	99 27       	eor	r25, r25
 a9a:	ee 0f       	add	r30, r30
 a9c:	97 95       	ror	r25
 a9e:	87 95       	ror	r24
 aa0:	08 95       	ret

00000aa2 <__divsf3>:
 aa2:	0e 94 65 05 	call	0xaca	; 0xaca <__divsf3x>
 aa6:	0c 94 46 06 	jmp	0xc8c	; 0xc8c <__fp_round>
 aaa:	0e 94 3f 06 	call	0xc7e	; 0xc7e <__fp_pscB>
 aae:	58 f0       	brcs	.+22     	; 0xac6 <__divsf3+0x24>
 ab0:	0e 94 38 06 	call	0xc70	; 0xc70 <__fp_pscA>
 ab4:	40 f0       	brcs	.+16     	; 0xac6 <__divsf3+0x24>
 ab6:	29 f4       	brne	.+10     	; 0xac2 <__divsf3+0x20>
 ab8:	5f 3f       	cpi	r21, 0xFF	; 255
 aba:	29 f0       	breq	.+10     	; 0xac6 <__divsf3+0x24>
 abc:	0c 94 2f 06 	jmp	0xc5e	; 0xc5e <__fp_inf>
 ac0:	51 11       	cpse	r21, r1
 ac2:	0c 94 7a 06 	jmp	0xcf4	; 0xcf4 <__fp_szero>
 ac6:	0c 94 35 06 	jmp	0xc6a	; 0xc6a <__fp_nan>

00000aca <__divsf3x>:
 aca:	0e 94 57 06 	call	0xcae	; 0xcae <__fp_split3>
 ace:	68 f3       	brcs	.-38     	; 0xaaa <__divsf3+0x8>

00000ad0 <__divsf3_pse>:
 ad0:	99 23       	and	r25, r25
 ad2:	b1 f3       	breq	.-20     	; 0xac0 <__divsf3+0x1e>
 ad4:	55 23       	and	r21, r21
 ad6:	91 f3       	breq	.-28     	; 0xabc <__divsf3+0x1a>
 ad8:	95 1b       	sub	r25, r21
 ada:	55 0b       	sbc	r21, r21
 adc:	bb 27       	eor	r27, r27
 ade:	aa 27       	eor	r26, r26
 ae0:	62 17       	cp	r22, r18
 ae2:	73 07       	cpc	r23, r19
 ae4:	84 07       	cpc	r24, r20
 ae6:	38 f0       	brcs	.+14     	; 0xaf6 <__divsf3_pse+0x26>
 ae8:	9f 5f       	subi	r25, 0xFF	; 255
 aea:	5f 4f       	sbci	r21, 0xFF	; 255
 aec:	22 0f       	add	r18, r18
 aee:	33 1f       	adc	r19, r19
 af0:	44 1f       	adc	r20, r20
 af2:	aa 1f       	adc	r26, r26
 af4:	a9 f3       	breq	.-22     	; 0xae0 <__divsf3_pse+0x10>
 af6:	35 d0       	rcall	.+106    	; 0xb62 <__divsf3_pse+0x92>
 af8:	0e 2e       	mov	r0, r30
 afa:	3a f0       	brmi	.+14     	; 0xb0a <__divsf3_pse+0x3a>
 afc:	e0 e8       	ldi	r30, 0x80	; 128
 afe:	32 d0       	rcall	.+100    	; 0xb64 <__divsf3_pse+0x94>
 b00:	91 50       	subi	r25, 0x01	; 1
 b02:	50 40       	sbci	r21, 0x00	; 0
 b04:	e6 95       	lsr	r30
 b06:	00 1c       	adc	r0, r0
 b08:	ca f7       	brpl	.-14     	; 0xafc <__divsf3_pse+0x2c>
 b0a:	2b d0       	rcall	.+86     	; 0xb62 <__divsf3_pse+0x92>
 b0c:	fe 2f       	mov	r31, r30
 b0e:	29 d0       	rcall	.+82     	; 0xb62 <__divsf3_pse+0x92>
 b10:	66 0f       	add	r22, r22
 b12:	77 1f       	adc	r23, r23
 b14:	88 1f       	adc	r24, r24
 b16:	bb 1f       	adc	r27, r27
 b18:	26 17       	cp	r18, r22
 b1a:	37 07       	cpc	r19, r23
 b1c:	48 07       	cpc	r20, r24
 b1e:	ab 07       	cpc	r26, r27
 b20:	b0 e8       	ldi	r27, 0x80	; 128
 b22:	09 f0       	breq	.+2      	; 0xb26 <__divsf3_pse+0x56>
 b24:	bb 0b       	sbc	r27, r27
 b26:	80 2d       	mov	r24, r0
 b28:	bf 01       	movw	r22, r30
 b2a:	ff 27       	eor	r31, r31
 b2c:	93 58       	subi	r25, 0x83	; 131
 b2e:	5f 4f       	sbci	r21, 0xFF	; 255
 b30:	3a f0       	brmi	.+14     	; 0xb40 <__divsf3_pse+0x70>
 b32:	9e 3f       	cpi	r25, 0xFE	; 254
 b34:	51 05       	cpc	r21, r1
 b36:	78 f0       	brcs	.+30     	; 0xb56 <__divsf3_pse+0x86>
 b38:	0c 94 2f 06 	jmp	0xc5e	; 0xc5e <__fp_inf>
 b3c:	0c 94 7a 06 	jmp	0xcf4	; 0xcf4 <__fp_szero>
 b40:	5f 3f       	cpi	r21, 0xFF	; 255
 b42:	e4 f3       	brlt	.-8      	; 0xb3c <__divsf3_pse+0x6c>
 b44:	98 3e       	cpi	r25, 0xE8	; 232
 b46:	d4 f3       	brlt	.-12     	; 0xb3c <__divsf3_pse+0x6c>
 b48:	86 95       	lsr	r24
 b4a:	77 95       	ror	r23
 b4c:	67 95       	ror	r22
 b4e:	b7 95       	ror	r27
 b50:	f7 95       	ror	r31
 b52:	9f 5f       	subi	r25, 0xFF	; 255
 b54:	c9 f7       	brne	.-14     	; 0xb48 <__divsf3_pse+0x78>
 b56:	88 0f       	add	r24, r24
 b58:	91 1d       	adc	r25, r1
 b5a:	96 95       	lsr	r25
 b5c:	87 95       	ror	r24
 b5e:	97 f9       	bld	r25, 7
 b60:	08 95       	ret
 b62:	e1 e0       	ldi	r30, 0x01	; 1
 b64:	66 0f       	add	r22, r22
 b66:	77 1f       	adc	r23, r23
 b68:	88 1f       	adc	r24, r24
 b6a:	bb 1f       	adc	r27, r27
 b6c:	62 17       	cp	r22, r18
 b6e:	73 07       	cpc	r23, r19
 b70:	84 07       	cpc	r24, r20
 b72:	ba 07       	cpc	r27, r26
 b74:	20 f0       	brcs	.+8      	; 0xb7e <__divsf3_pse+0xae>
 b76:	62 1b       	sub	r22, r18
 b78:	73 0b       	sbc	r23, r19
 b7a:	84 0b       	sbc	r24, r20
 b7c:	ba 0b       	sbc	r27, r26
 b7e:	ee 1f       	adc	r30, r30
 b80:	88 f7       	brcc	.-30     	; 0xb64 <__divsf3_pse+0x94>
 b82:	e0 95       	com	r30
 b84:	08 95       	ret

00000b86 <__fixunssfsi>:
 b86:	0e 94 5f 06 	call	0xcbe	; 0xcbe <__fp_splitA>
 b8a:	88 f0       	brcs	.+34     	; 0xbae <__fixunssfsi+0x28>
 b8c:	9f 57       	subi	r25, 0x7F	; 127
 b8e:	98 f0       	brcs	.+38     	; 0xbb6 <__fixunssfsi+0x30>
 b90:	b9 2f       	mov	r27, r25
 b92:	99 27       	eor	r25, r25
 b94:	b7 51       	subi	r27, 0x17	; 23
 b96:	b0 f0       	brcs	.+44     	; 0xbc4 <__fixunssfsi+0x3e>
 b98:	e1 f0       	breq	.+56     	; 0xbd2 <__fixunssfsi+0x4c>
 b9a:	66 0f       	add	r22, r22
 b9c:	77 1f       	adc	r23, r23
 b9e:	88 1f       	adc	r24, r24
 ba0:	99 1f       	adc	r25, r25
 ba2:	1a f0       	brmi	.+6      	; 0xbaa <__fixunssfsi+0x24>
 ba4:	ba 95       	dec	r27
 ba6:	c9 f7       	brne	.-14     	; 0xb9a <__fixunssfsi+0x14>
 ba8:	14 c0       	rjmp	.+40     	; 0xbd2 <__fixunssfsi+0x4c>
 baa:	b1 30       	cpi	r27, 0x01	; 1
 bac:	91 f0       	breq	.+36     	; 0xbd2 <__fixunssfsi+0x4c>
 bae:	0e 94 79 06 	call	0xcf2	; 0xcf2 <__fp_zero>
 bb2:	b1 e0       	ldi	r27, 0x01	; 1
 bb4:	08 95       	ret
 bb6:	0c 94 79 06 	jmp	0xcf2	; 0xcf2 <__fp_zero>
 bba:	67 2f       	mov	r22, r23
 bbc:	78 2f       	mov	r23, r24
 bbe:	88 27       	eor	r24, r24
 bc0:	b8 5f       	subi	r27, 0xF8	; 248
 bc2:	39 f0       	breq	.+14     	; 0xbd2 <__fixunssfsi+0x4c>
 bc4:	b9 3f       	cpi	r27, 0xF9	; 249
 bc6:	cc f3       	brlt	.-14     	; 0xbba <__fixunssfsi+0x34>
 bc8:	86 95       	lsr	r24
 bca:	77 95       	ror	r23
 bcc:	67 95       	ror	r22
 bce:	b3 95       	inc	r27
 bd0:	d9 f7       	brne	.-10     	; 0xbc8 <__fixunssfsi+0x42>
 bd2:	3e f4       	brtc	.+14     	; 0xbe2 <__fixunssfsi+0x5c>
 bd4:	90 95       	com	r25
 bd6:	80 95       	com	r24
 bd8:	70 95       	com	r23
 bda:	61 95       	neg	r22
 bdc:	7f 4f       	sbci	r23, 0xFF	; 255
 bde:	8f 4f       	sbci	r24, 0xFF	; 255
 be0:	9f 4f       	sbci	r25, 0xFF	; 255
 be2:	08 95       	ret

00000be4 <__floatunsisf>:
 be4:	e8 94       	clt
 be6:	09 c0       	rjmp	.+18     	; 0xbfa <__floatsisf+0x12>

00000be8 <__floatsisf>:
 be8:	97 fb       	bst	r25, 7
 bea:	3e f4       	brtc	.+14     	; 0xbfa <__floatsisf+0x12>
 bec:	90 95       	com	r25
 bee:	80 95       	com	r24
 bf0:	70 95       	com	r23
 bf2:	61 95       	neg	r22
 bf4:	7f 4f       	sbci	r23, 0xFF	; 255
 bf6:	8f 4f       	sbci	r24, 0xFF	; 255
 bf8:	9f 4f       	sbci	r25, 0xFF	; 255
 bfa:	99 23       	and	r25, r25
 bfc:	a9 f0       	breq	.+42     	; 0xc28 <__floatsisf+0x40>
 bfe:	f9 2f       	mov	r31, r25
 c00:	96 e9       	ldi	r25, 0x96	; 150
 c02:	bb 27       	eor	r27, r27
 c04:	93 95       	inc	r25
 c06:	f6 95       	lsr	r31
 c08:	87 95       	ror	r24
 c0a:	77 95       	ror	r23
 c0c:	67 95       	ror	r22
 c0e:	b7 95       	ror	r27
 c10:	f1 11       	cpse	r31, r1
 c12:	f8 cf       	rjmp	.-16     	; 0xc04 <__floatsisf+0x1c>
 c14:	fa f4       	brpl	.+62     	; 0xc54 <__floatsisf+0x6c>
 c16:	bb 0f       	add	r27, r27
 c18:	11 f4       	brne	.+4      	; 0xc1e <__floatsisf+0x36>
 c1a:	60 ff       	sbrs	r22, 0
 c1c:	1b c0       	rjmp	.+54     	; 0xc54 <__floatsisf+0x6c>
 c1e:	6f 5f       	subi	r22, 0xFF	; 255
 c20:	7f 4f       	sbci	r23, 0xFF	; 255
 c22:	8f 4f       	sbci	r24, 0xFF	; 255
 c24:	9f 4f       	sbci	r25, 0xFF	; 255
 c26:	16 c0       	rjmp	.+44     	; 0xc54 <__floatsisf+0x6c>
 c28:	88 23       	and	r24, r24
 c2a:	11 f0       	breq	.+4      	; 0xc30 <__floatsisf+0x48>
 c2c:	96 e9       	ldi	r25, 0x96	; 150
 c2e:	11 c0       	rjmp	.+34     	; 0xc52 <__floatsisf+0x6a>
 c30:	77 23       	and	r23, r23
 c32:	21 f0       	breq	.+8      	; 0xc3c <__floatsisf+0x54>
 c34:	9e e8       	ldi	r25, 0x8E	; 142
 c36:	87 2f       	mov	r24, r23
 c38:	76 2f       	mov	r23, r22
 c3a:	05 c0       	rjmp	.+10     	; 0xc46 <__floatsisf+0x5e>
 c3c:	66 23       	and	r22, r22
 c3e:	71 f0       	breq	.+28     	; 0xc5c <__floatsisf+0x74>
 c40:	96 e8       	ldi	r25, 0x86	; 134
 c42:	86 2f       	mov	r24, r22
 c44:	70 e0       	ldi	r23, 0x00	; 0
 c46:	60 e0       	ldi	r22, 0x00	; 0
 c48:	2a f0       	brmi	.+10     	; 0xc54 <__floatsisf+0x6c>
 c4a:	9a 95       	dec	r25
 c4c:	66 0f       	add	r22, r22
 c4e:	77 1f       	adc	r23, r23
 c50:	88 1f       	adc	r24, r24
 c52:	da f7       	brpl	.-10     	; 0xc4a <__floatsisf+0x62>
 c54:	88 0f       	add	r24, r24
 c56:	96 95       	lsr	r25
 c58:	87 95       	ror	r24
 c5a:	97 f9       	bld	r25, 7
 c5c:	08 95       	ret

00000c5e <__fp_inf>:
 c5e:	97 f9       	bld	r25, 7
 c60:	9f 67       	ori	r25, 0x7F	; 127
 c62:	80 e8       	ldi	r24, 0x80	; 128
 c64:	70 e0       	ldi	r23, 0x00	; 0
 c66:	60 e0       	ldi	r22, 0x00	; 0
 c68:	08 95       	ret

00000c6a <__fp_nan>:
 c6a:	9f ef       	ldi	r25, 0xFF	; 255
 c6c:	80 ec       	ldi	r24, 0xC0	; 192
 c6e:	08 95       	ret

00000c70 <__fp_pscA>:
 c70:	00 24       	eor	r0, r0
 c72:	0a 94       	dec	r0
 c74:	16 16       	cp	r1, r22
 c76:	17 06       	cpc	r1, r23
 c78:	18 06       	cpc	r1, r24
 c7a:	09 06       	cpc	r0, r25
 c7c:	08 95       	ret

00000c7e <__fp_pscB>:
 c7e:	00 24       	eor	r0, r0
 c80:	0a 94       	dec	r0
 c82:	12 16       	cp	r1, r18
 c84:	13 06       	cpc	r1, r19
 c86:	14 06       	cpc	r1, r20
 c88:	05 06       	cpc	r0, r21
 c8a:	08 95       	ret

00000c8c <__fp_round>:
 c8c:	09 2e       	mov	r0, r25
 c8e:	03 94       	inc	r0
 c90:	00 0c       	add	r0, r0
 c92:	11 f4       	brne	.+4      	; 0xc98 <__fp_round+0xc>
 c94:	88 23       	and	r24, r24
 c96:	52 f0       	brmi	.+20     	; 0xcac <__fp_round+0x20>
 c98:	bb 0f       	add	r27, r27
 c9a:	40 f4       	brcc	.+16     	; 0xcac <__fp_round+0x20>
 c9c:	bf 2b       	or	r27, r31
 c9e:	11 f4       	brne	.+4      	; 0xca4 <__fp_round+0x18>
 ca0:	60 ff       	sbrs	r22, 0
 ca2:	04 c0       	rjmp	.+8      	; 0xcac <__fp_round+0x20>
 ca4:	6f 5f       	subi	r22, 0xFF	; 255
 ca6:	7f 4f       	sbci	r23, 0xFF	; 255
 ca8:	8f 4f       	sbci	r24, 0xFF	; 255
 caa:	9f 4f       	sbci	r25, 0xFF	; 255
 cac:	08 95       	ret

00000cae <__fp_split3>:
 cae:	57 fd       	sbrc	r21, 7
 cb0:	90 58       	subi	r25, 0x80	; 128
 cb2:	44 0f       	add	r20, r20
 cb4:	55 1f       	adc	r21, r21
 cb6:	59 f0       	breq	.+22     	; 0xcce <__fp_splitA+0x10>
 cb8:	5f 3f       	cpi	r21, 0xFF	; 255
 cba:	71 f0       	breq	.+28     	; 0xcd8 <__fp_splitA+0x1a>
 cbc:	47 95       	ror	r20

00000cbe <__fp_splitA>:
 cbe:	88 0f       	add	r24, r24
 cc0:	97 fb       	bst	r25, 7
 cc2:	99 1f       	adc	r25, r25
 cc4:	61 f0       	breq	.+24     	; 0xcde <__fp_splitA+0x20>
 cc6:	9f 3f       	cpi	r25, 0xFF	; 255
 cc8:	79 f0       	breq	.+30     	; 0xce8 <__fp_splitA+0x2a>
 cca:	87 95       	ror	r24
 ccc:	08 95       	ret
 cce:	12 16       	cp	r1, r18
 cd0:	13 06       	cpc	r1, r19
 cd2:	14 06       	cpc	r1, r20
 cd4:	55 1f       	adc	r21, r21
 cd6:	f2 cf       	rjmp	.-28     	; 0xcbc <__fp_split3+0xe>
 cd8:	46 95       	lsr	r20
 cda:	f1 df       	rcall	.-30     	; 0xcbe <__fp_splitA>
 cdc:	08 c0       	rjmp	.+16     	; 0xcee <__fp_splitA+0x30>
 cde:	16 16       	cp	r1, r22
 ce0:	17 06       	cpc	r1, r23
 ce2:	18 06       	cpc	r1, r24
 ce4:	99 1f       	adc	r25, r25
 ce6:	f1 cf       	rjmp	.-30     	; 0xcca <__fp_splitA+0xc>
 ce8:	86 95       	lsr	r24
 cea:	71 05       	cpc	r23, r1
 cec:	61 05       	cpc	r22, r1
 cee:	08 94       	sec
 cf0:	08 95       	ret

00000cf2 <__fp_zero>:
 cf2:	e8 94       	clt

00000cf4 <__fp_szero>:
 cf4:	bb 27       	eor	r27, r27
 cf6:	66 27       	eor	r22, r22
 cf8:	77 27       	eor	r23, r23
 cfa:	cb 01       	movw	r24, r22
 cfc:	97 f9       	bld	r25, 7
 cfe:	08 95       	ret

00000d00 <__mulsf3>:
 d00:	0e 94 93 06 	call	0xd26	; 0xd26 <__mulsf3x>
 d04:	0c 94 46 06 	jmp	0xc8c	; 0xc8c <__fp_round>
 d08:	0e 94 38 06 	call	0xc70	; 0xc70 <__fp_pscA>
 d0c:	38 f0       	brcs	.+14     	; 0xd1c <__mulsf3+0x1c>
 d0e:	0e 94 3f 06 	call	0xc7e	; 0xc7e <__fp_pscB>
 d12:	20 f0       	brcs	.+8      	; 0xd1c <__mulsf3+0x1c>
 d14:	95 23       	and	r25, r21
 d16:	11 f0       	breq	.+4      	; 0xd1c <__mulsf3+0x1c>
 d18:	0c 94 2f 06 	jmp	0xc5e	; 0xc5e <__fp_inf>
 d1c:	0c 94 35 06 	jmp	0xc6a	; 0xc6a <__fp_nan>
 d20:	11 24       	eor	r1, r1
 d22:	0c 94 7a 06 	jmp	0xcf4	; 0xcf4 <__fp_szero>

00000d26 <__mulsf3x>:
 d26:	0e 94 57 06 	call	0xcae	; 0xcae <__fp_split3>
 d2a:	70 f3       	brcs	.-36     	; 0xd08 <__mulsf3+0x8>

00000d2c <__mulsf3_pse>:
 d2c:	95 9f       	mul	r25, r21
 d2e:	c1 f3       	breq	.-16     	; 0xd20 <__mulsf3+0x20>
 d30:	95 0f       	add	r25, r21
 d32:	50 e0       	ldi	r21, 0x00	; 0
 d34:	55 1f       	adc	r21, r21
 d36:	62 9f       	mul	r22, r18
 d38:	f0 01       	movw	r30, r0
 d3a:	72 9f       	mul	r23, r18
 d3c:	bb 27       	eor	r27, r27
 d3e:	f0 0d       	add	r31, r0
 d40:	b1 1d       	adc	r27, r1
 d42:	63 9f       	mul	r22, r19
 d44:	aa 27       	eor	r26, r26
 d46:	f0 0d       	add	r31, r0
 d48:	b1 1d       	adc	r27, r1
 d4a:	aa 1f       	adc	r26, r26
 d4c:	64 9f       	mul	r22, r20
 d4e:	66 27       	eor	r22, r22
 d50:	b0 0d       	add	r27, r0
 d52:	a1 1d       	adc	r26, r1
 d54:	66 1f       	adc	r22, r22
 d56:	82 9f       	mul	r24, r18
 d58:	22 27       	eor	r18, r18
 d5a:	b0 0d       	add	r27, r0
 d5c:	a1 1d       	adc	r26, r1
 d5e:	62 1f       	adc	r22, r18
 d60:	73 9f       	mul	r23, r19
 d62:	b0 0d       	add	r27, r0
 d64:	a1 1d       	adc	r26, r1
 d66:	62 1f       	adc	r22, r18
 d68:	83 9f       	mul	r24, r19
 d6a:	a0 0d       	add	r26, r0
 d6c:	61 1d       	adc	r22, r1
 d6e:	22 1f       	adc	r18, r18
 d70:	74 9f       	mul	r23, r20
 d72:	33 27       	eor	r19, r19
 d74:	a0 0d       	add	r26, r0
 d76:	61 1d       	adc	r22, r1
 d78:	23 1f       	adc	r18, r19
 d7a:	84 9f       	mul	r24, r20
 d7c:	60 0d       	add	r22, r0
 d7e:	21 1d       	adc	r18, r1
 d80:	82 2f       	mov	r24, r18
 d82:	76 2f       	mov	r23, r22
 d84:	6a 2f       	mov	r22, r26
 d86:	11 24       	eor	r1, r1
 d88:	9f 57       	subi	r25, 0x7F	; 127
 d8a:	50 40       	sbci	r21, 0x00	; 0
 d8c:	9a f0       	brmi	.+38     	; 0xdb4 <__mulsf3_pse+0x88>
 d8e:	f1 f0       	breq	.+60     	; 0xdcc <__mulsf3_pse+0xa0>
 d90:	88 23       	and	r24, r24
 d92:	4a f0       	brmi	.+18     	; 0xda6 <__mulsf3_pse+0x7a>
 d94:	ee 0f       	add	r30, r30
 d96:	ff 1f       	adc	r31, r31
 d98:	bb 1f       	adc	r27, r27
 d9a:	66 1f       	adc	r22, r22
 d9c:	77 1f       	adc	r23, r23
 d9e:	88 1f       	adc	r24, r24
 da0:	91 50       	subi	r25, 0x01	; 1
 da2:	50 40       	sbci	r21, 0x00	; 0
 da4:	a9 f7       	brne	.-22     	; 0xd90 <__mulsf3_pse+0x64>
 da6:	9e 3f       	cpi	r25, 0xFE	; 254
 da8:	51 05       	cpc	r21, r1
 daa:	80 f0       	brcs	.+32     	; 0xdcc <__mulsf3_pse+0xa0>
 dac:	0c 94 2f 06 	jmp	0xc5e	; 0xc5e <__fp_inf>
 db0:	0c 94 7a 06 	jmp	0xcf4	; 0xcf4 <__fp_szero>
 db4:	5f 3f       	cpi	r21, 0xFF	; 255
 db6:	e4 f3       	brlt	.-8      	; 0xdb0 <__mulsf3_pse+0x84>
 db8:	98 3e       	cpi	r25, 0xE8	; 232
 dba:	d4 f3       	brlt	.-12     	; 0xdb0 <__mulsf3_pse+0x84>
 dbc:	86 95       	lsr	r24
 dbe:	77 95       	ror	r23
 dc0:	67 95       	ror	r22
 dc2:	b7 95       	ror	r27
 dc4:	f7 95       	ror	r31
 dc6:	e7 95       	ror	r30
 dc8:	9f 5f       	subi	r25, 0xFF	; 255
 dca:	c1 f7       	brne	.-16     	; 0xdbc <__mulsf3_pse+0x90>
 dcc:	fe 2b       	or	r31, r30
 dce:	88 0f       	add	r24, r24
 dd0:	91 1d       	adc	r25, r1
 dd2:	96 95       	lsr	r25
 dd4:	87 95       	ror	r24
 dd6:	97 f9       	bld	r25, 7
 dd8:	08 95       	ret

00000dda <_exit>:
 dda:	f8 94       	cli

00000ddc <__stop_program>:
 ddc:	ff cf       	rjmp	.-2      	; 0xddc <__stop_program>
>>>>>>> parent of e4935ad... ..


carFinalProject.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000dea  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         0000000a  00800060  00000dea  00000e7e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          0000000d  0080006a  0080006a  00000e88  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000e88  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000eb8  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000001e8  00000000  00000000  00000ef4  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001cae  00000000  00000000  000010dc  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000a9c  00000000  00000000  00002d8a  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000eb2  00000000  00000000  00003826  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000414  00000000  00000000  000046d8  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000006e6  00000000  00000000  00004aec  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000c58  00000000  00000000  000051d2  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000178  00000000  00000000  00005e2a  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  2c:	0c 94 99 02 	jmp	0x532	; 0x532 <__vector_11>
  30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	ea ee       	ldi	r30, 0xEA	; 234
  68:	fd e0       	ldi	r31, 0x0D	; 13
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	aa 36       	cpi	r26, 0x6A	; 106
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>

00000076 <__do_clear_bss>:
  76:	20 e0       	ldi	r18, 0x00	; 0
  78:	aa e6       	ldi	r26, 0x6A	; 106
  7a:	b0 e0       	ldi	r27, 0x00	; 0
  7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
  7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
  80:	a7 37       	cpi	r26, 0x77	; 119
  82:	b2 07       	cpc	r27, r18
  84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
  86:	0e 94 94 02 	call	0x528	; 0x528 <main>
  8a:	0c 94 f3 06 	jmp	0xde6	; 0xde6 <_exit>

0000008e <__bad_interrupt>:
  8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <APP_INIT>:
#include "../ECUAL/REMOTE/REMOTE.h"


void APP_INIT(){
	
	TIM0_PWM_INIT();
  92:	0e 94 e0 04 	call	0x9c0	; 0x9c0 <TIM0_PWM_INIT>
	
	REMOTE_INIT();
  96:	0e 94 6f 01 	call	0x2de	; 0x2de <REMOTE_INIT>
	
	CAR_INIT();
  9a:	0e 94 72 00 	call	0xe4	; 0xe4 <CAR_INIT>
  9e:	08 95       	ret

000000a0 <APP_UPDATE>:
	
}

void APP_UPDATE(){
	
	while(REMOTE_MOVE_PRESSED()){
  a0:	02 c0       	rjmp	.+4      	; 0xa6 <APP_UPDATE+0x6>
		REMOTE_MOVE();
  a2:	0e 94 b0 01 	call	0x360	; 0x360 <REMOTE_MOVE>
	
}

void APP_UPDATE(){
	
	while(REMOTE_MOVE_PRESSED()){
  a6:	0e 94 5c 02 	call	0x4b8	; 0x4b8 <REMOTE_MOVE_PRESSED>
  aa:	89 2b       	or	r24, r25
  ac:	d1 f7       	brne	.-12     	; 0xa2 <APP_UPDATE+0x2>
		REMOTE_MOVE();
	}
	
	CAR_STOP();
  ae:	0e 94 37 01 	call	0x26e	; 0x26e <CAR_STOP>
	
	while(REMOTE_LEFT_PRESSED()){
  b2:	02 c0       	rjmp	.+4      	; 0xb8 <APP_UPDATE+0x18>
		REMOTE_LEFT();
  b4:	0e 94 e0 01 	call	0x3c0	; 0x3c0 <REMOTE_LEFT>
		REMOTE_MOVE();
	}
	
	CAR_STOP();
	
	while(REMOTE_LEFT_PRESSED()){
  b8:	0e 94 6a 02 	call	0x4d4	; 0x4d4 <REMOTE_LEFT_PRESSED>
  bc:	89 2b       	or	r24, r25
  be:	d1 f7       	brne	.-12     	; 0xb4 <APP_UPDATE+0x14>
		REMOTE_LEFT();
	}
	
	CAR_STOP();
  c0:	0e 94 37 01 	call	0x26e	; 0x26e <CAR_STOP>
	
	while(REMOTE_RIGHT_PRESSED()){
  c4:	02 c0       	rjmp	.+4      	; 0xca <APP_UPDATE+0x2a>
		REMOTE_RIGHT();
  c6:	0e 94 f4 01 	call	0x3e8	; 0x3e8 <REMOTE_RIGHT>
		REMOTE_LEFT();
	}
	
	CAR_STOP();
	
	while(REMOTE_RIGHT_PRESSED()){
  ca:	0e 94 78 02 	call	0x4f0	; 0x4f0 <REMOTE_RIGHT_PRESSED>
  ce:	89 2b       	or	r24, r25
  d0:	d1 f7       	brne	.-12     	; 0xc6 <APP_UPDATE+0x26>
		REMOTE_RIGHT();
	}
	
	CAR_STOP();
  d2:	0e 94 37 01 	call	0x26e	; 0x26e <CAR_STOP>
	
	if(REMOTE_G_PRESSED()){
  d6:	0e 94 86 02 	call	0x50c	; 0x50c <REMOTE_G_PRESSED>
  da:	89 2b       	or	r24, r25
  dc:	11 f0       	breq	.+4      	; 0xe2 <APP_UPDATE+0x42>
		REMOTE_G();
  de:	0e 94 08 02 	call	0x410	; 0x410 <REMOTE_G>
  e2:	08 95       	ret

000000e4 <CAR_INIT>:

void CAR_INIT(){

// Set enable pins as output

DIO_INIT_BIT(PORT_B, EN1, OUTPUT);
  e4:	41 e0       	ldi	r20, 0x01	; 1
  e6:	50 e0       	ldi	r21, 0x00	; 0
  e8:	61 e0       	ldi	r22, 0x01	; 1
  ea:	70 e0       	ldi	r23, 0x00	; 0
  ec:	82 e0       	ldi	r24, 0x02	; 2
  ee:	90 e0       	ldi	r25, 0x00	; 0
  f0:	0e 94 df 02 	call	0x5be	; 0x5be <DIO_INIT_BIT>
DIO_INIT_BIT(PORT_B, EN2, OUTPUT);
  f4:	41 e0       	ldi	r20, 0x01	; 1
  f6:	50 e0       	ldi	r21, 0x00	; 0
  f8:	62 e0       	ldi	r22, 0x02	; 2
  fa:	70 e0       	ldi	r23, 0x00	; 0
  fc:	82 e0       	ldi	r24, 0x02	; 2
  fe:	90 e0       	ldi	r25, 0x00	; 0
 100:	0e 94 df 02 	call	0x5be	; 0x5be <DIO_INIT_BIT>

// Set direction control pins as output

DIO_INIT_BIT(PORT_B, M1_B, OUTPUT);
 104:	41 e0       	ldi	r20, 0x01	; 1
 106:	50 e0       	ldi	r21, 0x00	; 0
 108:	64 e0       	ldi	r22, 0x04	; 4
 10a:	70 e0       	ldi	r23, 0x00	; 0
 10c:	82 e0       	ldi	r24, 0x02	; 2
 10e:	90 e0       	ldi	r25, 0x00	; 0
 110:	0e 94 df 02 	call	0x5be	; 0x5be <DIO_INIT_BIT>
DIO_INIT_BIT(PORT_B, M1_F, OUTPUT);
 114:	41 e0       	ldi	r20, 0x01	; 1
 116:	50 e0       	ldi	r21, 0x00	; 0
 118:	65 e0       	ldi	r22, 0x05	; 5
 11a:	70 e0       	ldi	r23, 0x00	; 0
 11c:	82 e0       	ldi	r24, 0x02	; 2
 11e:	90 e0       	ldi	r25, 0x00	; 0
 120:	0e 94 df 02 	call	0x5be	; 0x5be <DIO_INIT_BIT>
DIO_INIT_BIT(PORT_B, M2_B, OUTPUT);
 124:	41 e0       	ldi	r20, 0x01	; 1
 126:	50 e0       	ldi	r21, 0x00	; 0
 128:	66 e0       	ldi	r22, 0x06	; 6
 12a:	70 e0       	ldi	r23, 0x00	; 0
 12c:	82 e0       	ldi	r24, 0x02	; 2
 12e:	90 e0       	ldi	r25, 0x00	; 0
 130:	0e 94 df 02 	call	0x5be	; 0x5be <DIO_INIT_BIT>
DIO_INIT_BIT(PORT_B, M2_F, OUTPUT);
 134:	41 e0       	ldi	r20, 0x01	; 1
 136:	50 e0       	ldi	r21, 0x00	; 0
 138:	67 e0       	ldi	r22, 0x07	; 7
 13a:	70 e0       	ldi	r23, 0x00	; 0
 13c:	82 e0       	ldi	r24, 0x02	; 2
 13e:	90 e0       	ldi	r25, 0x00	; 0
 140:	0e 94 df 02 	call	0x5be	; 0x5be <DIO_INIT_BIT>

// Set initial direction as forward and initial speed 30%

DIO_WRITE_BIT(PORT_B, M1_F, HIGH);
 144:	41 e0       	ldi	r20, 0x01	; 1
 146:	50 e0       	ldi	r21, 0x00	; 0
 148:	65 e0       	ldi	r22, 0x05	; 5
 14a:	70 e0       	ldi	r23, 0x00	; 0
 14c:	82 e0       	ldi	r24, 0x02	; 2
 14e:	90 e0       	ldi	r25, 0x00	; 0
 150:	0e 94 66 03 	call	0x6cc	; 0x6cc <DIO_WRITE_BIT>
DIO_WRITE_BIT(PORT_B, M2_F, HIGH);
 154:	41 e0       	ldi	r20, 0x01	; 1
 156:	50 e0       	ldi	r21, 0x00	; 0
 158:	67 e0       	ldi	r22, 0x07	; 7
 15a:	70 e0       	ldi	r23, 0x00	; 0
 15c:	82 e0       	ldi	r24, 0x02	; 2
 15e:	90 e0       	ldi	r25, 0x00	; 0
 160:	0e 94 66 03 	call	0x6cc	; 0x6cc <DIO_WRITE_BIT>
 164:	08 95       	ret

00000166 <CAR_FORWARD>:

}

void CAR_FORWARD(){
	DIO_WRITE_BIT(PORT_B, M1_F, HIGH);
 166:	41 e0       	ldi	r20, 0x01	; 1
 168:	50 e0       	ldi	r21, 0x00	; 0
 16a:	65 e0       	ldi	r22, 0x05	; 5
 16c:	70 e0       	ldi	r23, 0x00	; 0
 16e:	82 e0       	ldi	r24, 0x02	; 2
 170:	90 e0       	ldi	r25, 0x00	; 0
 172:	0e 94 66 03 	call	0x6cc	; 0x6cc <DIO_WRITE_BIT>
	DIO_WRITE_BIT(PORT_B, M1_B, LOW);
 176:	40 e0       	ldi	r20, 0x00	; 0
 178:	50 e0       	ldi	r21, 0x00	; 0
 17a:	64 e0       	ldi	r22, 0x04	; 4
 17c:	70 e0       	ldi	r23, 0x00	; 0
 17e:	82 e0       	ldi	r24, 0x02	; 2
 180:	90 e0       	ldi	r25, 0x00	; 0
 182:	0e 94 66 03 	call	0x6cc	; 0x6cc <DIO_WRITE_BIT>
	DIO_WRITE_BIT(PORT_B, M2_F, HIGH);
 186:	41 e0       	ldi	r20, 0x01	; 1
 188:	50 e0       	ldi	r21, 0x00	; 0
 18a:	67 e0       	ldi	r22, 0x07	; 7
 18c:	70 e0       	ldi	r23, 0x00	; 0
 18e:	82 e0       	ldi	r24, 0x02	; 2
 190:	90 e0       	ldi	r25, 0x00	; 0
 192:	0e 94 66 03 	call	0x6cc	; 0x6cc <DIO_WRITE_BIT>
	DIO_WRITE_BIT(PORT_B, M2_B, LOW);
 196:	40 e0       	ldi	r20, 0x00	; 0
 198:	50 e0       	ldi	r21, 0x00	; 0
 19a:	66 e0       	ldi	r22, 0x06	; 6
 19c:	70 e0       	ldi	r23, 0x00	; 0
 19e:	82 e0       	ldi	r24, 0x02	; 2
 1a0:	90 e0       	ldi	r25, 0x00	; 0
 1a2:	0e 94 66 03 	call	0x6cc	; 0x6cc <DIO_WRITE_BIT>
 1a6:	08 95       	ret

000001a8 <CAR_BACKWARD>:
}

void CAR_BACKWARD(){
	DIO_WRITE_BIT(PORT_B, M1_F, LOW);
 1a8:	40 e0       	ldi	r20, 0x00	; 0
 1aa:	50 e0       	ldi	r21, 0x00	; 0
 1ac:	65 e0       	ldi	r22, 0x05	; 5
 1ae:	70 e0       	ldi	r23, 0x00	; 0
 1b0:	82 e0       	ldi	r24, 0x02	; 2
 1b2:	90 e0       	ldi	r25, 0x00	; 0
 1b4:	0e 94 66 03 	call	0x6cc	; 0x6cc <DIO_WRITE_BIT>
	DIO_WRITE_BIT(PORT_B, M1_B, HIGH);
 1b8:	41 e0       	ldi	r20, 0x01	; 1
 1ba:	50 e0       	ldi	r21, 0x00	; 0
 1bc:	64 e0       	ldi	r22, 0x04	; 4
 1be:	70 e0       	ldi	r23, 0x00	; 0
 1c0:	82 e0       	ldi	r24, 0x02	; 2
 1c2:	90 e0       	ldi	r25, 0x00	; 0
 1c4:	0e 94 66 03 	call	0x6cc	; 0x6cc <DIO_WRITE_BIT>
	DIO_WRITE_BIT(PORT_B, M2_F, LOW);
 1c8:	40 e0       	ldi	r20, 0x00	; 0
 1ca:	50 e0       	ldi	r21, 0x00	; 0
 1cc:	67 e0       	ldi	r22, 0x07	; 7
 1ce:	70 e0       	ldi	r23, 0x00	; 0
 1d0:	82 e0       	ldi	r24, 0x02	; 2
 1d2:	90 e0       	ldi	r25, 0x00	; 0
 1d4:	0e 94 66 03 	call	0x6cc	; 0x6cc <DIO_WRITE_BIT>
	DIO_WRITE_BIT(PORT_B, M2_B, HIGH);
 1d8:	41 e0       	ldi	r20, 0x01	; 1
 1da:	50 e0       	ldi	r21, 0x00	; 0
 1dc:	66 e0       	ldi	r22, 0x06	; 6
 1de:	70 e0       	ldi	r23, 0x00	; 0
 1e0:	82 e0       	ldi	r24, 0x02	; 2
 1e2:	90 e0       	ldi	r25, 0x00	; 0
 1e4:	0e 94 66 03 	call	0x6cc	; 0x6cc <DIO_WRITE_BIT>
 1e8:	08 95       	ret

000001ea <CAR_LEFT>:
}

void CAR_LEFT(){
	DIO_WRITE_BIT(PORT_B, M1_F, HIGH);
 1ea:	41 e0       	ldi	r20, 0x01	; 1
 1ec:	50 e0       	ldi	r21, 0x00	; 0
 1ee:	65 e0       	ldi	r22, 0x05	; 5
 1f0:	70 e0       	ldi	r23, 0x00	; 0
 1f2:	82 e0       	ldi	r24, 0x02	; 2
 1f4:	90 e0       	ldi	r25, 0x00	; 0
 1f6:	0e 94 66 03 	call	0x6cc	; 0x6cc <DIO_WRITE_BIT>
	DIO_WRITE_BIT(PORT_B, M1_B, LOW);
 1fa:	40 e0       	ldi	r20, 0x00	; 0
 1fc:	50 e0       	ldi	r21, 0x00	; 0
 1fe:	64 e0       	ldi	r22, 0x04	; 4
 200:	70 e0       	ldi	r23, 0x00	; 0
 202:	82 e0       	ldi	r24, 0x02	; 2
 204:	90 e0       	ldi	r25, 0x00	; 0
 206:	0e 94 66 03 	call	0x6cc	; 0x6cc <DIO_WRITE_BIT>
	DIO_WRITE_BIT(PORT_B, M2_F, LOW);
 20a:	40 e0       	ldi	r20, 0x00	; 0
 20c:	50 e0       	ldi	r21, 0x00	; 0
 20e:	67 e0       	ldi	r22, 0x07	; 7
 210:	70 e0       	ldi	r23, 0x00	; 0
 212:	82 e0       	ldi	r24, 0x02	; 2
 214:	90 e0       	ldi	r25, 0x00	; 0
 216:	0e 94 66 03 	call	0x6cc	; 0x6cc <DIO_WRITE_BIT>
	DIO_WRITE_BIT(PORT_B, M2_B, HIGH);
 21a:	41 e0       	ldi	r20, 0x01	; 1
 21c:	50 e0       	ldi	r21, 0x00	; 0
 21e:	66 e0       	ldi	r22, 0x06	; 6
 220:	70 e0       	ldi	r23, 0x00	; 0
 222:	82 e0       	ldi	r24, 0x02	; 2
 224:	90 e0       	ldi	r25, 0x00	; 0
 226:	0e 94 66 03 	call	0x6cc	; 0x6cc <DIO_WRITE_BIT>
 22a:	08 95       	ret

0000022c <CAR_RIGHT>:
}

void CAR_RIGHT(){
	DIO_WRITE_BIT(PORT_B, M1_F, LOW);
 22c:	40 e0       	ldi	r20, 0x00	; 0
 22e:	50 e0       	ldi	r21, 0x00	; 0
 230:	65 e0       	ldi	r22, 0x05	; 5
 232:	70 e0       	ldi	r23, 0x00	; 0
 234:	82 e0       	ldi	r24, 0x02	; 2
 236:	90 e0       	ldi	r25, 0x00	; 0
 238:	0e 94 66 03 	call	0x6cc	; 0x6cc <DIO_WRITE_BIT>
	DIO_WRITE_BIT(PORT_B, M1_B, HIGH);
 23c:	41 e0       	ldi	r20, 0x01	; 1
 23e:	50 e0       	ldi	r21, 0x00	; 0
 240:	64 e0       	ldi	r22, 0x04	; 4
 242:	70 e0       	ldi	r23, 0x00	; 0
 244:	82 e0       	ldi	r24, 0x02	; 2
 246:	90 e0       	ldi	r25, 0x00	; 0
 248:	0e 94 66 03 	call	0x6cc	; 0x6cc <DIO_WRITE_BIT>
	DIO_WRITE_BIT(PORT_B, M2_F, HIGH);
 24c:	41 e0       	ldi	r20, 0x01	; 1
 24e:	50 e0       	ldi	r21, 0x00	; 0
 250:	67 e0       	ldi	r22, 0x07	; 7
 252:	70 e0       	ldi	r23, 0x00	; 0
 254:	82 e0       	ldi	r24, 0x02	; 2
 256:	90 e0       	ldi	r25, 0x00	; 0
 258:	0e 94 66 03 	call	0x6cc	; 0x6cc <DIO_WRITE_BIT>
	DIO_WRITE_BIT(PORT_B, M2_B, LOW);
 25c:	40 e0       	ldi	r20, 0x00	; 0
 25e:	50 e0       	ldi	r21, 0x00	; 0
 260:	66 e0       	ldi	r22, 0x06	; 6
 262:	70 e0       	ldi	r23, 0x00	; 0
 264:	82 e0       	ldi	r24, 0x02	; 2
 266:	90 e0       	ldi	r25, 0x00	; 0
 268:	0e 94 66 03 	call	0x6cc	; 0x6cc <DIO_WRITE_BIT>
 26c:	08 95       	ret

0000026e <CAR_STOP>:
}

void CAR_STOP(){
	
	TIM0_STOP();
 26e:	0e 94 49 04 	call	0x892	; 0x892 <TIM0_STOP>
	_TIMSK_ &=~(1<<_TOIE0_);
 272:	89 b7       	in	r24, 0x39	; 57
 274:	8e 7f       	andi	r24, 0xFE	; 254
 276:	89 bf       	out	0x39, r24	; 57
	DIO_WRITE_BIT(PORT_B, EN1 , LOW);
 278:	40 e0       	ldi	r20, 0x00	; 0
 27a:	50 e0       	ldi	r21, 0x00	; 0
 27c:	61 e0       	ldi	r22, 0x01	; 1
 27e:	70 e0       	ldi	r23, 0x00	; 0
 280:	82 e0       	ldi	r24, 0x02	; 2
 282:	90 e0       	ldi	r25, 0x00	; 0
 284:	0e 94 66 03 	call	0x6cc	; 0x6cc <DIO_WRITE_BIT>
	DIO_WRITE_BIT(PORT_B, EN2 , LOW);
 288:	40 e0       	ldi	r20, 0x00	; 0
 28a:	50 e0       	ldi	r21, 0x00	; 0
 28c:	62 e0       	ldi	r22, 0x02	; 2
 28e:	70 e0       	ldi	r23, 0x00	; 0
 290:	82 e0       	ldi	r24, 0x02	; 2
 292:	90 e0       	ldi	r25, 0x00	; 0
 294:	0e 94 66 03 	call	0x6cc	; 0x6cc <DIO_WRITE_BIT>
 298:	08 95       	ret

0000029a <CAR_MOTORS_ON>:
}

void CAR_MOTORS_ON(){
	DIO_WRITE_BIT(PORT_B, EN1 , HIGH);
 29a:	41 e0       	ldi	r20, 0x01	; 1
 29c:	50 e0       	ldi	r21, 0x00	; 0
 29e:	61 e0       	ldi	r22, 0x01	; 1
 2a0:	70 e0       	ldi	r23, 0x00	; 0
 2a2:	82 e0       	ldi	r24, 0x02	; 2
 2a4:	90 e0       	ldi	r25, 0x00	; 0
 2a6:	0e 94 66 03 	call	0x6cc	; 0x6cc <DIO_WRITE_BIT>
	DIO_WRITE_BIT(PORT_B, EN2 , HIGH);
 2aa:	41 e0       	ldi	r20, 0x01	; 1
 2ac:	50 e0       	ldi	r21, 0x00	; 0
 2ae:	62 e0       	ldi	r22, 0x02	; 2
 2b0:	70 e0       	ldi	r23, 0x00	; 0
 2b2:	82 e0       	ldi	r24, 0x02	; 2
 2b4:	90 e0       	ldi	r25, 0x00	; 0
 2b6:	0e 94 66 03 	call	0x6cc	; 0x6cc <DIO_WRITE_BIT>
 2ba:	08 95       	ret

000002bc <CAR_MOTORS_OFF>:
}

void CAR_MOTORS_OFF(){
	DIO_WRITE_BIT(PORT_B, EN1 , LOW);
 2bc:	40 e0       	ldi	r20, 0x00	; 0
 2be:	50 e0       	ldi	r21, 0x00	; 0
 2c0:	61 e0       	ldi	r22, 0x01	; 1
 2c2:	70 e0       	ldi	r23, 0x00	; 0
 2c4:	82 e0       	ldi	r24, 0x02	; 2
 2c6:	90 e0       	ldi	r25, 0x00	; 0
 2c8:	0e 94 66 03 	call	0x6cc	; 0x6cc <DIO_WRITE_BIT>
	DIO_WRITE_BIT(PORT_B, EN2 , LOW);
 2cc:	40 e0       	ldi	r20, 0x00	; 0
 2ce:	50 e0       	ldi	r21, 0x00	; 0
 2d0:	62 e0       	ldi	r22, 0x02	; 2
 2d2:	70 e0       	ldi	r23, 0x00	; 0
 2d4:	82 e0       	ldi	r24, 0x02	; 2
 2d6:	90 e0       	ldi	r25, 0x00	; 0
 2d8:	0e 94 66 03 	call	0x6cc	; 0x6cc <DIO_WRITE_BIT>
 2dc:	08 95       	ret

000002de <REMOTE_INIT>:

void REMOTE_INIT(){

// Enable pin pull-ups for all connected push-buttons

DIO_INIT_BIT(PORT_A, LEFT_B, INPUT);
 2de:	40 e0       	ldi	r20, 0x00	; 0
 2e0:	50 e0       	ldi	r21, 0x00	; 0
 2e2:	61 e0       	ldi	r22, 0x01	; 1
 2e4:	70 e0       	ldi	r23, 0x00	; 0
 2e6:	81 e0       	ldi	r24, 0x01	; 1
 2e8:	90 e0       	ldi	r25, 0x00	; 0
 2ea:	0e 94 df 02 	call	0x5be	; 0x5be <DIO_INIT_BIT>
DIO_INIT_BIT(PORT_A, RIGHT_B, INPUT);
 2ee:	40 e0       	ldi	r20, 0x00	; 0
 2f0:	50 e0       	ldi	r21, 0x00	; 0
 2f2:	63 e0       	ldi	r22, 0x03	; 3
 2f4:	70 e0       	ldi	r23, 0x00	; 0
 2f6:	81 e0       	ldi	r24, 0x01	; 1
 2f8:	90 e0       	ldi	r25, 0x00	; 0
 2fa:	0e 94 df 02 	call	0x5be	; 0x5be <DIO_INIT_BIT>
DIO_INIT_BIT(PORT_A, MOVE_STOP_B, INPUT);
 2fe:	40 e0       	ldi	r20, 0x00	; 0
 300:	50 e0       	ldi	r21, 0x00	; 0
 302:	65 e0       	ldi	r22, 0x05	; 5
 304:	70 e0       	ldi	r23, 0x00	; 0
 306:	81 e0       	ldi	r24, 0x01	; 1
 308:	90 e0       	ldi	r25, 0x00	; 0
 30a:	0e 94 df 02 	call	0x5be	; 0x5be <DIO_INIT_BIT>
DIO_INIT_BIT(PORT_A, CHNG_SPD_DIR_B, INPUT);
 30e:	40 e0       	ldi	r20, 0x00	; 0
 310:	50 e0       	ldi	r21, 0x00	; 0
 312:	67 e0       	ldi	r22, 0x07	; 7
 314:	70 e0       	ldi	r23, 0x00	; 0
 316:	81 e0       	ldi	r24, 0x01	; 1
 318:	90 e0       	ldi	r25, 0x00	; 0
 31a:	0e 94 df 02 	call	0x5be	; 0x5be <DIO_INIT_BIT>

DIO_WRITE_BIT(PORT_A, LEFT_B, HIGH);
 31e:	41 e0       	ldi	r20, 0x01	; 1
 320:	50 e0       	ldi	r21, 0x00	; 0
 322:	61 e0       	ldi	r22, 0x01	; 1
 324:	70 e0       	ldi	r23, 0x00	; 0
 326:	81 e0       	ldi	r24, 0x01	; 1
 328:	90 e0       	ldi	r25, 0x00	; 0
 32a:	0e 94 66 03 	call	0x6cc	; 0x6cc <DIO_WRITE_BIT>
DIO_WRITE_BIT(PORT_A, RIGHT_B, HIGH);
 32e:	41 e0       	ldi	r20, 0x01	; 1
 330:	50 e0       	ldi	r21, 0x00	; 0
 332:	63 e0       	ldi	r22, 0x03	; 3
 334:	70 e0       	ldi	r23, 0x00	; 0
 336:	81 e0       	ldi	r24, 0x01	; 1
 338:	90 e0       	ldi	r25, 0x00	; 0
 33a:	0e 94 66 03 	call	0x6cc	; 0x6cc <DIO_WRITE_BIT>
DIO_WRITE_BIT(PORT_A, MOVE_STOP_B, HIGH);
 33e:	41 e0       	ldi	r20, 0x01	; 1
 340:	50 e0       	ldi	r21, 0x00	; 0
 342:	65 e0       	ldi	r22, 0x05	; 5
 344:	70 e0       	ldi	r23, 0x00	; 0
 346:	81 e0       	ldi	r24, 0x01	; 1
 348:	90 e0       	ldi	r25, 0x00	; 0
 34a:	0e 94 66 03 	call	0x6cc	; 0x6cc <DIO_WRITE_BIT>
DIO_WRITE_BIT(PORT_A, CHNG_SPD_DIR_B, HIGH);
 34e:	41 e0       	ldi	r20, 0x01	; 1
 350:	50 e0       	ldi	r21, 0x00	; 0
 352:	67 e0       	ldi	r22, 0x07	; 7
 354:	70 e0       	ldi	r23, 0x00	; 0
 356:	81 e0       	ldi	r24, 0x01	; 1
 358:	90 e0       	ldi	r25, 0x00	; 0
 35a:	0e 94 66 03 	call	0x6cc	; 0x6cc <DIO_WRITE_BIT>
 35e:	08 95       	ret

00000360 <REMOTE_MOVE>:

}


void REMOTE_MOVE(){
 360:	cf 92       	push	r12
 362:	df 92       	push	r13
 364:	ef 92       	push	r14
 366:	ff 92       	push	r15
	_TIMSK_ |= (1<<_TOIE0_);
 368:	89 b7       	in	r24, 0x39	; 57
 36a:	81 60       	ori	r24, 0x01	; 1
 36c:	89 bf       	out	0x39, r24	; 57
	if(direction == 1){
 36e:	80 91 68 00 	lds	r24, 0x0068	; 0x800068 <direction>
 372:	90 91 69 00 	lds	r25, 0x0069	; 0x800069 <direction+0x1>
 376:	81 30       	cpi	r24, 0x01	; 1
 378:	91 05       	cpc	r25, r1
 37a:	19 f4       	brne	.+6      	; 0x382 <REMOTE_MOVE+0x22>
		CAR_FORWARD();
 37c:	0e 94 b3 00 	call	0x166	; 0x166 <CAR_FORWARD>
 380:	04 c0       	rjmp	.+8      	; 0x38a <REMOTE_MOVE+0x2a>
	}
	else if(direction == 2){
 382:	02 97       	sbiw	r24, 0x02	; 2
 384:	11 f4       	brne	.+4      	; 0x38a <REMOTE_MOVE+0x2a>
		CAR_BACKWARD();
 386:	0e 94 d4 00 	call	0x1a8	; 0x1a8 <CAR_BACKWARD>
	}
	TIM0_PWM_start(duty, freq);
 38a:	c0 90 64 00 	lds	r12, 0x0064	; 0x800064 <freq>
 38e:	d0 90 65 00 	lds	r13, 0x0065	; 0x800065 <freq+0x1>
 392:	e0 90 66 00 	lds	r14, 0x0066	; 0x800066 <freq+0x2>
 396:	f0 90 67 00 	lds	r15, 0x0067	; 0x800067 <freq+0x3>
 39a:	60 91 62 00 	lds	r22, 0x0062	; 0x800062 <duty>
 39e:	70 91 63 00 	lds	r23, 0x0063	; 0x800063 <duty+0x1>
 3a2:	07 2e       	mov	r0, r23
 3a4:	00 0c       	add	r0, r0
 3a6:	88 0b       	sbc	r24, r24
 3a8:	99 0b       	sbc	r25, r25
 3aa:	0e 94 fa 05 	call	0xbf4	; 0xbf4 <__floatsisf>
 3ae:	a7 01       	movw	r20, r14
 3b0:	96 01       	movw	r18, r12
 3b2:	0e 94 6f 04 	call	0x8de	; 0x8de <TIM0_PWM_start>
}
 3b6:	ff 90       	pop	r15
 3b8:	ef 90       	pop	r14
 3ba:	df 90       	pop	r13
 3bc:	cf 90       	pop	r12
 3be:	08 95       	ret

000003c0 <REMOTE_LEFT>:

void REMOTE_LEFT(){
	_TIMSK_ |= (1<<_TOIE0_);
 3c0:	89 b7       	in	r24, 0x39	; 57
 3c2:	81 60       	ori	r24, 0x01	; 1
 3c4:	89 bf       	out	0x39, r24	; 57
	CAR_LEFT();
 3c6:	0e 94 f5 00 	call	0x1ea	; 0x1ea <CAR_LEFT>
	TIM0_PWM_start(DUTY_30, freq);
 3ca:	20 91 64 00 	lds	r18, 0x0064	; 0x800064 <freq>
 3ce:	30 91 65 00 	lds	r19, 0x0065	; 0x800065 <freq+0x1>
 3d2:	40 91 66 00 	lds	r20, 0x0066	; 0x800066 <freq+0x2>
 3d6:	50 91 67 00 	lds	r21, 0x0067	; 0x800067 <freq+0x3>
 3da:	60 e0       	ldi	r22, 0x00	; 0
 3dc:	70 e0       	ldi	r23, 0x00	; 0
 3de:	80 ef       	ldi	r24, 0xF0	; 240
 3e0:	91 e4       	ldi	r25, 0x41	; 65
 3e2:	0e 94 6f 04 	call	0x8de	; 0x8de <TIM0_PWM_start>
 3e6:	08 95       	ret

000003e8 <REMOTE_RIGHT>:
}

void REMOTE_RIGHT(){
	_TIMSK_ |= (1<<_TOIE0_);
 3e8:	89 b7       	in	r24, 0x39	; 57
 3ea:	81 60       	ori	r24, 0x01	; 1
 3ec:	89 bf       	out	0x39, r24	; 57
	CAR_RIGHT();
 3ee:	0e 94 16 01 	call	0x22c	; 0x22c <CAR_RIGHT>
	TIM0_PWM_start(DUTY_30, freq);
 3f2:	20 91 64 00 	lds	r18, 0x0064	; 0x800064 <freq>
 3f6:	30 91 65 00 	lds	r19, 0x0065	; 0x800065 <freq+0x1>
 3fa:	40 91 66 00 	lds	r20, 0x0066	; 0x800066 <freq+0x2>
 3fe:	50 91 67 00 	lds	r21, 0x0067	; 0x800067 <freq+0x3>
 402:	60 e0       	ldi	r22, 0x00	; 0
 404:	70 e0       	ldi	r23, 0x00	; 0
 406:	80 ef       	ldi	r24, 0xF0	; 240
 408:	91 e4       	ldi	r25, 0x41	; 65
 40a:	0e 94 6f 04 	call	0x8de	; 0x8de <TIM0_PWM_start>
 40e:	08 95       	ret

00000410 <REMOTE_G>:
}

void REMOTE_G(){
	count++;
 410:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <__data_start>
 414:	90 91 61 00 	lds	r25, 0x0061	; 0x800061 <__data_start+0x1>
 418:	01 96       	adiw	r24, 0x01	; 1
 41a:	90 93 61 00 	sts	0x0061, r25	; 0x800061 <__data_start+0x1>
 41e:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__data_start>
	if (count == 1){
 422:	81 30       	cpi	r24, 0x01	; 1
 424:	91 05       	cpc	r25, r1
 426:	69 f4       	brne	.+26     	; 0x442 <REMOTE_G+0x32>
		duty = DUTY_30;
 428:	8e e1       	ldi	r24, 0x1E	; 30
 42a:	90 e0       	ldi	r25, 0x00	; 0
 42c:	90 93 63 00 	sts	0x0063, r25	; 0x800063 <duty+0x1>
 430:	80 93 62 00 	sts	0x0062, r24	; 0x800062 <duty>
		direction = FORWARD;
 434:	81 e0       	ldi	r24, 0x01	; 1
 436:	90 e0       	ldi	r25, 0x00	; 0
 438:	90 93 69 00 	sts	0x0069, r25	; 0x800069 <direction+0x1>
 43c:	80 93 68 00 	sts	0x0068, r24	; 0x800068 <direction>
 440:	32 c0       	rjmp	.+100    	; 0x4a6 <REMOTE_G+0x96>
	}
	else if(count == 2){
 442:	82 30       	cpi	r24, 0x02	; 2
 444:	91 05       	cpc	r25, r1
 446:	69 f4       	brne	.+26     	; 0x462 <REMOTE_G+0x52>
		duty = DUTY_60;
 448:	8c e3       	ldi	r24, 0x3C	; 60
 44a:	90 e0       	ldi	r25, 0x00	; 0
 44c:	90 93 63 00 	sts	0x0063, r25	; 0x800063 <duty+0x1>
 450:	80 93 62 00 	sts	0x0062, r24	; 0x800062 <duty>
		direction = FORWARD;
 454:	81 e0       	ldi	r24, 0x01	; 1
 456:	90 e0       	ldi	r25, 0x00	; 0
 458:	90 93 69 00 	sts	0x0069, r25	; 0x800069 <direction+0x1>
 45c:	80 93 68 00 	sts	0x0068, r24	; 0x800068 <direction>
 460:	22 c0       	rjmp	.+68     	; 0x4a6 <REMOTE_G+0x96>
	}
	else if(count == 3){
 462:	83 30       	cpi	r24, 0x03	; 3
 464:	91 05       	cpc	r25, r1
 466:	69 f4       	brne	.+26     	; 0x482 <REMOTE_G+0x72>
		duty = DUTY_90;
 468:	8a e5       	ldi	r24, 0x5A	; 90
 46a:	90 e0       	ldi	r25, 0x00	; 0
 46c:	90 93 63 00 	sts	0x0063, r25	; 0x800063 <duty+0x1>
 470:	80 93 62 00 	sts	0x0062, r24	; 0x800062 <duty>
		direction = FORWARD;
 474:	81 e0       	ldi	r24, 0x01	; 1
 476:	90 e0       	ldi	r25, 0x00	; 0
 478:	90 93 69 00 	sts	0x0069, r25	; 0x800069 <direction+0x1>
 47c:	80 93 68 00 	sts	0x0068, r24	; 0x800068 <direction>
 480:	12 c0       	rjmp	.+36     	; 0x4a6 <REMOTE_G+0x96>
	}
	else if(count == 4){
 482:	04 97       	sbiw	r24, 0x04	; 4
 484:	81 f4       	brne	.+32     	; 0x4a6 <REMOTE_G+0x96>
		duty = DUTY_30;
 486:	8e e1       	ldi	r24, 0x1E	; 30
 488:	90 e0       	ldi	r25, 0x00	; 0
 48a:	90 93 63 00 	sts	0x0063, r25	; 0x800063 <duty+0x1>
 48e:	80 93 62 00 	sts	0x0062, r24	; 0x800062 <duty>
		direction = BACKWARD;
 492:	82 e0       	ldi	r24, 0x02	; 2
 494:	90 e0       	ldi	r25, 0x00	; 0
 496:	90 93 69 00 	sts	0x0069, r25	; 0x800069 <direction+0x1>
 49a:	80 93 68 00 	sts	0x0068, r24	; 0x800068 <direction>
		count = 0;
 49e:	10 92 61 00 	sts	0x0061, r1	; 0x800061 <__data_start+0x1>
 4a2:	10 92 60 00 	sts	0x0060, r1	; 0x800060 <__data_start>
	}
	while(!DIO_READ_BIT(PORT_A, CHNG_SPD_DIR_B));
 4a6:	67 e0       	ldi	r22, 0x07	; 7
 4a8:	70 e0       	ldi	r23, 0x00	; 0
 4aa:	81 e0       	ldi	r24, 0x01	; 1
 4ac:	90 e0       	ldi	r25, 0x00	; 0
 4ae:	0e 94 ed 03 	call	0x7da	; 0x7da <DIO_READ_BIT>
 4b2:	88 23       	and	r24, r24
 4b4:	c1 f3       	breq	.-16     	; 0x4a6 <REMOTE_G+0x96>
}
 4b6:	08 95       	ret

000004b8 <REMOTE_MOVE_PRESSED>:

int REMOTE_MOVE_PRESSED(){
	return !DIO_READ_BIT(PORT_A, MOVE_STOP_B);
 4b8:	65 e0       	ldi	r22, 0x05	; 5
 4ba:	70 e0       	ldi	r23, 0x00	; 0
 4bc:	81 e0       	ldi	r24, 0x01	; 1
 4be:	90 e0       	ldi	r25, 0x00	; 0
 4c0:	0e 94 ed 03 	call	0x7da	; 0x7da <DIO_READ_BIT>
 4c4:	21 e0       	ldi	r18, 0x01	; 1
 4c6:	30 e0       	ldi	r19, 0x00	; 0
 4c8:	88 23       	and	r24, r24
 4ca:	11 f0       	breq	.+4      	; 0x4d0 <REMOTE_MOVE_PRESSED+0x18>
 4cc:	20 e0       	ldi	r18, 0x00	; 0
 4ce:	30 e0       	ldi	r19, 0x00	; 0
}
 4d0:	c9 01       	movw	r24, r18
 4d2:	08 95       	ret

000004d4 <REMOTE_LEFT_PRESSED>:

int REMOTE_LEFT_PRESSED(){
	return !DIO_READ_BIT(PORT_A, LEFT_B);
 4d4:	61 e0       	ldi	r22, 0x01	; 1
 4d6:	70 e0       	ldi	r23, 0x00	; 0
 4d8:	81 e0       	ldi	r24, 0x01	; 1
 4da:	90 e0       	ldi	r25, 0x00	; 0
 4dc:	0e 94 ed 03 	call	0x7da	; 0x7da <DIO_READ_BIT>
 4e0:	21 e0       	ldi	r18, 0x01	; 1
 4e2:	30 e0       	ldi	r19, 0x00	; 0
 4e4:	88 23       	and	r24, r24
 4e6:	11 f0       	breq	.+4      	; 0x4ec <REMOTE_LEFT_PRESSED+0x18>
 4e8:	20 e0       	ldi	r18, 0x00	; 0
 4ea:	30 e0       	ldi	r19, 0x00	; 0
}
 4ec:	c9 01       	movw	r24, r18
 4ee:	08 95       	ret

000004f0 <REMOTE_RIGHT_PRESSED>:

int REMOTE_RIGHT_PRESSED(){
	return !DIO_READ_BIT(PORT_A, RIGHT_B);
 4f0:	63 e0       	ldi	r22, 0x03	; 3
 4f2:	70 e0       	ldi	r23, 0x00	; 0
 4f4:	81 e0       	ldi	r24, 0x01	; 1
 4f6:	90 e0       	ldi	r25, 0x00	; 0
 4f8:	0e 94 ed 03 	call	0x7da	; 0x7da <DIO_READ_BIT>
 4fc:	21 e0       	ldi	r18, 0x01	; 1
 4fe:	30 e0       	ldi	r19, 0x00	; 0
 500:	88 23       	and	r24, r24
 502:	11 f0       	breq	.+4      	; 0x508 <REMOTE_RIGHT_PRESSED+0x18>
 504:	20 e0       	ldi	r18, 0x00	; 0
 506:	30 e0       	ldi	r19, 0x00	; 0
}
 508:	c9 01       	movw	r24, r18
 50a:	08 95       	ret

0000050c <REMOTE_G_PRESSED>:

int REMOTE_G_PRESSED(){
	return !DIO_READ_BIT(PORT_A, CHNG_SPD_DIR_B);
 50c:	67 e0       	ldi	r22, 0x07	; 7
 50e:	70 e0       	ldi	r23, 0x00	; 0
 510:	81 e0       	ldi	r24, 0x01	; 1
 512:	90 e0       	ldi	r25, 0x00	; 0
 514:	0e 94 ed 03 	call	0x7da	; 0x7da <DIO_READ_BIT>
 518:	21 e0       	ldi	r18, 0x01	; 1
 51a:	30 e0       	ldi	r19, 0x00	; 0
 51c:	88 23       	and	r24, r24
 51e:	11 f0       	breq	.+4      	; 0x524 <REMOTE_G_PRESSED+0x18>
 520:	20 e0       	ldi	r18, 0x00	; 0
 522:	30 e0       	ldi	r19, 0x00	; 0
 524:	c9 01       	movw	r24, r18
 526:	08 95       	ret

00000528 <main>:
int count = 1;

int main(void)
{

	APP_INIT();
 528:	0e 94 49 00 	call	0x92	; 0x92 <APP_INIT>
	
	
    while (1) 
    {
		
		APP_UPDATE();
 52c:	0e 94 50 00 	call	0xa0	; 0xa0 <APP_UPDATE>
 530:	fd cf       	rjmp	.-6      	; 0x52c <main+0x4>

00000532 <__vector_11>:
		
    }
}

void __vector_11 (void)
{
 532:	1f 92       	push	r1
 534:	0f 92       	push	r0
 536:	0f b6       	in	r0, 0x3f	; 63
 538:	0f 92       	push	r0
 53a:	11 24       	eor	r1, r1
 53c:	2f 93       	push	r18
 53e:	3f 93       	push	r19
 540:	4f 93       	push	r20
 542:	5f 93       	push	r21
 544:	6f 93       	push	r22
 546:	7f 93       	push	r23
 548:	8f 93       	push	r24
 54a:	9f 93       	push	r25
 54c:	af 93       	push	r26
 54e:	bf 93       	push	r27
 550:	ef 93       	push	r30
 552:	ff 93       	push	r31
	if (flag==0)
 554:	80 91 6a 00 	lds	r24, 0x006A	; 0x80006a <__data_end>
 558:	81 11       	cpse	r24, r1
 55a:	11 c0       	rjmp	.+34     	; 0x57e <__vector_11+0x4c>
	{
		CAR_MOTORS_ON();
 55c:	0e 94 4d 01 	call	0x29a	; 0x29a <CAR_MOTORS_ON>
		_TCNT0_=TON;
 560:	60 91 6f 00 	lds	r22, 0x006F	; 0x80006f <TON>
 564:	70 91 70 00 	lds	r23, 0x0070	; 0x800070 <TON+0x1>
 568:	80 91 71 00 	lds	r24, 0x0071	; 0x800071 <TON+0x2>
 56c:	90 91 72 00 	lds	r25, 0x0072	; 0x800072 <TON+0x3>
 570:	0e 94 c9 05 	call	0xb92	; 0xb92 <__fixunssfsi>
 574:	62 bf       	out	0x32, r22	; 50
		flag=1;
 576:	81 e0       	ldi	r24, 0x01	; 1
 578:	80 93 6a 00 	sts	0x006A, r24	; 0x80006a <__data_end>
 57c:	0f c0       	rjmp	.+30     	; 0x59c <__vector_11+0x6a>
	}
	else
	{
		CAR_MOTORS_OFF();
 57e:	0e 94 5e 01 	call	0x2bc	; 0x2bc <CAR_MOTORS_OFF>
		_TCNT0_= TOFF;
 582:	60 91 6b 00 	lds	r22, 0x006B	; 0x80006b <TOFF>
 586:	70 91 6c 00 	lds	r23, 0x006C	; 0x80006c <TOFF+0x1>
 58a:	80 91 6d 00 	lds	r24, 0x006D	; 0x80006d <TOFF+0x2>
 58e:	90 91 6e 00 	lds	r25, 0x006E	; 0x80006e <TOFF+0x3>
 592:	0e 94 c9 05 	call	0xb92	; 0xb92 <__fixunssfsi>
 596:	62 bf       	out	0x32, r22	; 50
		flag=0;
 598:	10 92 6a 00 	sts	0x006A, r1	; 0x80006a <__data_end>
	}
 59c:	ff 91       	pop	r31
 59e:	ef 91       	pop	r30
 5a0:	bf 91       	pop	r27
 5a2:	af 91       	pop	r26
 5a4:	9f 91       	pop	r25
 5a6:	8f 91       	pop	r24
 5a8:	7f 91       	pop	r23
 5aa:	6f 91       	pop	r22
 5ac:	5f 91       	pop	r21
 5ae:	4f 91       	pop	r20
 5b0:	3f 91       	pop	r19
 5b2:	2f 91       	pop	r18
 5b4:	0f 90       	pop	r0
 5b6:	0f be       	out	0x3f, r0	; 63
 5b8:	0f 90       	pop	r0
 5ba:	1f 90       	pop	r1
 5bc:	18 95       	reti

000005be <DIO_INIT_BIT>:
 5be:	82 30       	cpi	r24, 0x02	; 2
 5c0:	91 05       	cpc	r25, r1
 5c2:	51 f1       	breq	.+84     	; 0x618 <DIO_INIT_BIT+0x5a>
 5c4:	1c f4       	brge	.+6      	; 0x5cc <DIO_INIT_BIT+0xe>
 5c6:	01 97       	sbiw	r24, 0x01	; 1
 5c8:	49 f0       	breq	.+18     	; 0x5dc <DIO_INIT_BIT+0x1e>
 5ca:	08 95       	ret
 5cc:	83 30       	cpi	r24, 0x03	; 3
 5ce:	91 05       	cpc	r25, r1
 5d0:	09 f4       	brne	.+2      	; 0x5d4 <DIO_INIT_BIT+0x16>
 5d2:	40 c0       	rjmp	.+128    	; 0x654 <DIO_INIT_BIT+0x96>
 5d4:	04 97       	sbiw	r24, 0x04	; 4
 5d6:	09 f4       	brne	.+2      	; 0x5da <DIO_INIT_BIT+0x1c>
 5d8:	5b c0       	rjmp	.+182    	; 0x690 <DIO_INIT_BIT+0xd2>
 5da:	08 95       	ret
 5dc:	41 15       	cp	r20, r1
 5de:	51 05       	cpc	r21, r1
 5e0:	21 f0       	breq	.+8      	; 0x5ea <DIO_INIT_BIT+0x2c>
 5e2:	41 30       	cpi	r20, 0x01	; 1
 5e4:	51 05       	cpc	r21, r1
 5e6:	69 f0       	breq	.+26     	; 0x602 <DIO_INIT_BIT+0x44>
 5e8:	08 95       	ret
 5ea:	2a b3       	in	r18, 0x1a	; 26
 5ec:	81 e0       	ldi	r24, 0x01	; 1
 5ee:	90 e0       	ldi	r25, 0x00	; 0
 5f0:	02 c0       	rjmp	.+4      	; 0x5f6 <DIO_INIT_BIT+0x38>
 5f2:	88 0f       	add	r24, r24
 5f4:	99 1f       	adc	r25, r25
 5f6:	6a 95       	dec	r22
 5f8:	e2 f7       	brpl	.-8      	; 0x5f2 <DIO_INIT_BIT+0x34>
 5fa:	80 95       	com	r24
 5fc:	82 23       	and	r24, r18
 5fe:	8a bb       	out	0x1a, r24	; 26
 600:	08 95       	ret
 602:	2a b3       	in	r18, 0x1a	; 26
 604:	81 e0       	ldi	r24, 0x01	; 1
 606:	90 e0       	ldi	r25, 0x00	; 0
 608:	02 c0       	rjmp	.+4      	; 0x60e <DIO_INIT_BIT+0x50>
 60a:	88 0f       	add	r24, r24
 60c:	99 1f       	adc	r25, r25
 60e:	6a 95       	dec	r22
 610:	e2 f7       	brpl	.-8      	; 0x60a <DIO_INIT_BIT+0x4c>
 612:	82 2b       	or	r24, r18
 614:	8a bb       	out	0x1a, r24	; 26
 616:	08 95       	ret
 618:	41 15       	cp	r20, r1
 61a:	51 05       	cpc	r21, r1
 61c:	21 f0       	breq	.+8      	; 0x626 <DIO_INIT_BIT+0x68>
 61e:	41 30       	cpi	r20, 0x01	; 1
 620:	51 05       	cpc	r21, r1
 622:	69 f0       	breq	.+26     	; 0x63e <DIO_INIT_BIT+0x80>
 624:	08 95       	ret
 626:	27 b3       	in	r18, 0x17	; 23
 628:	81 e0       	ldi	r24, 0x01	; 1
 62a:	90 e0       	ldi	r25, 0x00	; 0
 62c:	02 c0       	rjmp	.+4      	; 0x632 <DIO_INIT_BIT+0x74>
 62e:	88 0f       	add	r24, r24
 630:	99 1f       	adc	r25, r25
 632:	6a 95       	dec	r22
 634:	e2 f7       	brpl	.-8      	; 0x62e <DIO_INIT_BIT+0x70>
 636:	80 95       	com	r24
 638:	82 23       	and	r24, r18
 63a:	87 bb       	out	0x17, r24	; 23
 63c:	08 95       	ret
 63e:	27 b3       	in	r18, 0x17	; 23
 640:	81 e0       	ldi	r24, 0x01	; 1
 642:	90 e0       	ldi	r25, 0x00	; 0
 644:	02 c0       	rjmp	.+4      	; 0x64a <DIO_INIT_BIT+0x8c>
 646:	88 0f       	add	r24, r24
 648:	99 1f       	adc	r25, r25
 64a:	6a 95       	dec	r22
 64c:	e2 f7       	brpl	.-8      	; 0x646 <DIO_INIT_BIT+0x88>
 64e:	82 2b       	or	r24, r18
 650:	87 bb       	out	0x17, r24	; 23
 652:	08 95       	ret
 654:	41 15       	cp	r20, r1
 656:	51 05       	cpc	r21, r1
 658:	21 f0       	breq	.+8      	; 0x662 <DIO_INIT_BIT+0xa4>
 65a:	41 30       	cpi	r20, 0x01	; 1
 65c:	51 05       	cpc	r21, r1
 65e:	69 f0       	breq	.+26     	; 0x67a <DIO_INIT_BIT+0xbc>
 660:	08 95       	ret
 662:	24 b3       	in	r18, 0x14	; 20
 664:	81 e0       	ldi	r24, 0x01	; 1
 666:	90 e0       	ldi	r25, 0x00	; 0
 668:	02 c0       	rjmp	.+4      	; 0x66e <DIO_INIT_BIT+0xb0>
 66a:	88 0f       	add	r24, r24
 66c:	99 1f       	adc	r25, r25
 66e:	6a 95       	dec	r22
 670:	e2 f7       	brpl	.-8      	; 0x66a <DIO_INIT_BIT+0xac>
 672:	80 95       	com	r24
 674:	82 23       	and	r24, r18
 676:	84 bb       	out	0x14, r24	; 20
 678:	08 95       	ret
 67a:	24 b3       	in	r18, 0x14	; 20
 67c:	81 e0       	ldi	r24, 0x01	; 1
 67e:	90 e0       	ldi	r25, 0x00	; 0
 680:	02 c0       	rjmp	.+4      	; 0x686 <DIO_INIT_BIT+0xc8>
 682:	88 0f       	add	r24, r24
 684:	99 1f       	adc	r25, r25
 686:	6a 95       	dec	r22
 688:	e2 f7       	brpl	.-8      	; 0x682 <DIO_INIT_BIT+0xc4>
 68a:	82 2b       	or	r24, r18
 68c:	84 bb       	out	0x14, r24	; 20
 68e:	08 95       	ret
 690:	41 15       	cp	r20, r1
 692:	51 05       	cpc	r21, r1
 694:	21 f0       	breq	.+8      	; 0x69e <DIO_INIT_BIT+0xe0>
 696:	41 30       	cpi	r20, 0x01	; 1
 698:	51 05       	cpc	r21, r1
 69a:	69 f0       	breq	.+26     	; 0x6b6 <DIO_INIT_BIT+0xf8>
 69c:	08 95       	ret
 69e:	21 b3       	in	r18, 0x11	; 17
 6a0:	81 e0       	ldi	r24, 0x01	; 1
 6a2:	90 e0       	ldi	r25, 0x00	; 0
 6a4:	02 c0       	rjmp	.+4      	; 0x6aa <DIO_INIT_BIT+0xec>
 6a6:	88 0f       	add	r24, r24
 6a8:	99 1f       	adc	r25, r25
 6aa:	6a 95       	dec	r22
 6ac:	e2 f7       	brpl	.-8      	; 0x6a6 <DIO_INIT_BIT+0xe8>
 6ae:	80 95       	com	r24
 6b0:	82 23       	and	r24, r18
 6b2:	81 bb       	out	0x11, r24	; 17
 6b4:	08 95       	ret
 6b6:	21 b3       	in	r18, 0x11	; 17
 6b8:	81 e0       	ldi	r24, 0x01	; 1
 6ba:	90 e0       	ldi	r25, 0x00	; 0
 6bc:	02 c0       	rjmp	.+4      	; 0x6c2 <DIO_INIT_BIT+0x104>
 6be:	88 0f       	add	r24, r24
 6c0:	99 1f       	adc	r25, r25
 6c2:	6a 95       	dec	r22
 6c4:	e2 f7       	brpl	.-8      	; 0x6be <DIO_INIT_BIT+0x100>
 6c6:	82 2b       	or	r24, r18
 6c8:	81 bb       	out	0x11, r24	; 17
 6ca:	08 95       	ret

000006cc <DIO_WRITE_BIT>:
 6cc:	82 30       	cpi	r24, 0x02	; 2
 6ce:	91 05       	cpc	r25, r1
 6d0:	51 f1       	breq	.+84     	; 0x726 <DIO_WRITE_BIT+0x5a>
 6d2:	1c f4       	brge	.+6      	; 0x6da <DIO_WRITE_BIT+0xe>
 6d4:	01 97       	sbiw	r24, 0x01	; 1
 6d6:	49 f0       	breq	.+18     	; 0x6ea <DIO_WRITE_BIT+0x1e>
 6d8:	08 95       	ret
 6da:	83 30       	cpi	r24, 0x03	; 3
 6dc:	91 05       	cpc	r25, r1
 6de:	09 f4       	brne	.+2      	; 0x6e2 <DIO_WRITE_BIT+0x16>
 6e0:	40 c0       	rjmp	.+128    	; 0x762 <DIO_WRITE_BIT+0x96>
 6e2:	04 97       	sbiw	r24, 0x04	; 4
 6e4:	09 f4       	brne	.+2      	; 0x6e8 <DIO_WRITE_BIT+0x1c>
 6e6:	5b c0       	rjmp	.+182    	; 0x79e <DIO_WRITE_BIT+0xd2>
 6e8:	08 95       	ret
 6ea:	41 15       	cp	r20, r1
 6ec:	51 05       	cpc	r21, r1
 6ee:	21 f0       	breq	.+8      	; 0x6f8 <DIO_WRITE_BIT+0x2c>
 6f0:	41 30       	cpi	r20, 0x01	; 1
 6f2:	51 05       	cpc	r21, r1
 6f4:	69 f0       	breq	.+26     	; 0x710 <DIO_WRITE_BIT+0x44>
 6f6:	08 95       	ret
 6f8:	2b b3       	in	r18, 0x1b	; 27
 6fa:	81 e0       	ldi	r24, 0x01	; 1
 6fc:	90 e0       	ldi	r25, 0x00	; 0
 6fe:	02 c0       	rjmp	.+4      	; 0x704 <DIO_WRITE_BIT+0x38>
 700:	88 0f       	add	r24, r24
 702:	99 1f       	adc	r25, r25
 704:	6a 95       	dec	r22
 706:	e2 f7       	brpl	.-8      	; 0x700 <DIO_WRITE_BIT+0x34>
 708:	80 95       	com	r24
 70a:	82 23       	and	r24, r18
 70c:	8b bb       	out	0x1b, r24	; 27
 70e:	08 95       	ret
 710:	2b b3       	in	r18, 0x1b	; 27
 712:	81 e0       	ldi	r24, 0x01	; 1
 714:	90 e0       	ldi	r25, 0x00	; 0
 716:	02 c0       	rjmp	.+4      	; 0x71c <DIO_WRITE_BIT+0x50>
 718:	88 0f       	add	r24, r24
 71a:	99 1f       	adc	r25, r25
 71c:	6a 95       	dec	r22
 71e:	e2 f7       	brpl	.-8      	; 0x718 <DIO_WRITE_BIT+0x4c>
 720:	82 2b       	or	r24, r18
 722:	8b bb       	out	0x1b, r24	; 27
 724:	08 95       	ret
 726:	41 15       	cp	r20, r1
 728:	51 05       	cpc	r21, r1
 72a:	21 f0       	breq	.+8      	; 0x734 <DIO_WRITE_BIT+0x68>
 72c:	41 30       	cpi	r20, 0x01	; 1
 72e:	51 05       	cpc	r21, r1
 730:	69 f0       	breq	.+26     	; 0x74c <DIO_WRITE_BIT+0x80>
 732:	08 95       	ret
 734:	28 b3       	in	r18, 0x18	; 24
 736:	81 e0       	ldi	r24, 0x01	; 1
 738:	90 e0       	ldi	r25, 0x00	; 0
 73a:	02 c0       	rjmp	.+4      	; 0x740 <DIO_WRITE_BIT+0x74>
 73c:	88 0f       	add	r24, r24
 73e:	99 1f       	adc	r25, r25
 740:	6a 95       	dec	r22
 742:	e2 f7       	brpl	.-8      	; 0x73c <DIO_WRITE_BIT+0x70>
 744:	80 95       	com	r24
 746:	82 23       	and	r24, r18
 748:	88 bb       	out	0x18, r24	; 24
 74a:	08 95       	ret
 74c:	28 b3       	in	r18, 0x18	; 24
 74e:	81 e0       	ldi	r24, 0x01	; 1
 750:	90 e0       	ldi	r25, 0x00	; 0
 752:	02 c0       	rjmp	.+4      	; 0x758 <DIO_WRITE_BIT+0x8c>
 754:	88 0f       	add	r24, r24
 756:	99 1f       	adc	r25, r25
 758:	6a 95       	dec	r22
 75a:	e2 f7       	brpl	.-8      	; 0x754 <DIO_WRITE_BIT+0x88>
 75c:	82 2b       	or	r24, r18
 75e:	88 bb       	out	0x18, r24	; 24
 760:	08 95       	ret
 762:	41 15       	cp	r20, r1
 764:	51 05       	cpc	r21, r1
 766:	21 f0       	breq	.+8      	; 0x770 <DIO_WRITE_BIT+0xa4>
 768:	41 30       	cpi	r20, 0x01	; 1
 76a:	51 05       	cpc	r21, r1
 76c:	69 f0       	breq	.+26     	; 0x788 <DIO_WRITE_BIT+0xbc>
 76e:	08 95       	ret
 770:	25 b3       	in	r18, 0x15	; 21
 772:	81 e0       	ldi	r24, 0x01	; 1
 774:	90 e0       	ldi	r25, 0x00	; 0
 776:	02 c0       	rjmp	.+4      	; 0x77c <DIO_WRITE_BIT+0xb0>
 778:	88 0f       	add	r24, r24
 77a:	99 1f       	adc	r25, r25
 77c:	6a 95       	dec	r22
 77e:	e2 f7       	brpl	.-8      	; 0x778 <DIO_WRITE_BIT+0xac>
 780:	80 95       	com	r24
 782:	82 23       	and	r24, r18
 784:	85 bb       	out	0x15, r24	; 21
 786:	08 95       	ret
 788:	25 b3       	in	r18, 0x15	; 21
 78a:	81 e0       	ldi	r24, 0x01	; 1
 78c:	90 e0       	ldi	r25, 0x00	; 0
 78e:	02 c0       	rjmp	.+4      	; 0x794 <DIO_WRITE_BIT+0xc8>
 790:	88 0f       	add	r24, r24
 792:	99 1f       	adc	r25, r25
 794:	6a 95       	dec	r22
 796:	e2 f7       	brpl	.-8      	; 0x790 <DIO_WRITE_BIT+0xc4>
 798:	82 2b       	or	r24, r18
 79a:	85 bb       	out	0x15, r24	; 21
 79c:	08 95       	ret
 79e:	41 15       	cp	r20, r1
 7a0:	51 05       	cpc	r21, r1
 7a2:	21 f0       	breq	.+8      	; 0x7ac <DIO_WRITE_BIT+0xe0>
 7a4:	41 30       	cpi	r20, 0x01	; 1
 7a6:	51 05       	cpc	r21, r1
 7a8:	69 f0       	breq	.+26     	; 0x7c4 <DIO_WRITE_BIT+0xf8>
 7aa:	08 95       	ret
 7ac:	22 b3       	in	r18, 0x12	; 18
 7ae:	81 e0       	ldi	r24, 0x01	; 1
 7b0:	90 e0       	ldi	r25, 0x00	; 0
 7b2:	02 c0       	rjmp	.+4      	; 0x7b8 <DIO_WRITE_BIT+0xec>
 7b4:	88 0f       	add	r24, r24
 7b6:	99 1f       	adc	r25, r25
 7b8:	6a 95       	dec	r22
 7ba:	e2 f7       	brpl	.-8      	; 0x7b4 <DIO_WRITE_BIT+0xe8>
 7bc:	80 95       	com	r24
 7be:	82 23       	and	r24, r18
 7c0:	82 bb       	out	0x12, r24	; 18
 7c2:	08 95       	ret
 7c4:	22 b3       	in	r18, 0x12	; 18
 7c6:	81 e0       	ldi	r24, 0x01	; 1
 7c8:	90 e0       	ldi	r25, 0x00	; 0
 7ca:	02 c0       	rjmp	.+4      	; 0x7d0 <DIO_WRITE_BIT+0x104>
 7cc:	88 0f       	add	r24, r24
 7ce:	99 1f       	adc	r25, r25
 7d0:	6a 95       	dec	r22
 7d2:	e2 f7       	brpl	.-8      	; 0x7cc <DIO_WRITE_BIT+0x100>
 7d4:	82 2b       	or	r24, r18
 7d6:	82 bb       	out	0x12, r24	; 18
 7d8:	08 95       	ret

000007da <DIO_READ_BIT>:
 7da:	82 30       	cpi	r24, 0x02	; 2
 7dc:	91 05       	cpc	r25, r1
 7de:	99 f0       	breq	.+38     	; 0x806 <DIO_READ_BIT+0x2c>
 7e0:	1c f4       	brge	.+6      	; 0x7e8 <DIO_READ_BIT+0xe>
 7e2:	01 97       	sbiw	r24, 0x01	; 1
 7e4:	39 f0       	breq	.+14     	; 0x7f4 <DIO_READ_BIT+0x1a>
 7e6:	2a c0       	rjmp	.+84     	; 0x83c <DIO_READ_BIT+0x62>
 7e8:	83 30       	cpi	r24, 0x03	; 3
 7ea:	91 05       	cpc	r25, r1
 7ec:	a9 f0       	breq	.+42     	; 0x818 <DIO_READ_BIT+0x3e>
 7ee:	04 97       	sbiw	r24, 0x04	; 4
 7f0:	e1 f0       	breq	.+56     	; 0x82a <DIO_READ_BIT+0x50>
 7f2:	24 c0       	rjmp	.+72     	; 0x83c <DIO_READ_BIT+0x62>
 7f4:	89 b3       	in	r24, 0x19	; 25
 7f6:	90 e0       	ldi	r25, 0x00	; 0
 7f8:	02 c0       	rjmp	.+4      	; 0x7fe <DIO_READ_BIT+0x24>
 7fa:	95 95       	asr	r25
 7fc:	87 95       	ror	r24
 7fe:	6a 95       	dec	r22
 800:	e2 f7       	brpl	.-8      	; 0x7fa <DIO_READ_BIT+0x20>
 802:	81 70       	andi	r24, 0x01	; 1
 804:	08 95       	ret
 806:	86 b3       	in	r24, 0x16	; 22
 808:	90 e0       	ldi	r25, 0x00	; 0
 80a:	02 c0       	rjmp	.+4      	; 0x810 <DIO_READ_BIT+0x36>
 80c:	95 95       	asr	r25
 80e:	87 95       	ror	r24
 810:	6a 95       	dec	r22
 812:	e2 f7       	brpl	.-8      	; 0x80c <DIO_READ_BIT+0x32>
 814:	81 70       	andi	r24, 0x01	; 1
 816:	08 95       	ret
 818:	83 b3       	in	r24, 0x13	; 19
 81a:	90 e0       	ldi	r25, 0x00	; 0
 81c:	02 c0       	rjmp	.+4      	; 0x822 <DIO_READ_BIT+0x48>
 81e:	95 95       	asr	r25
 820:	87 95       	ror	r24
 822:	6a 95       	dec	r22
 824:	e2 f7       	brpl	.-8      	; 0x81e <DIO_READ_BIT+0x44>
 826:	81 70       	andi	r24, 0x01	; 1
 828:	08 95       	ret
 82a:	80 b3       	in	r24, 0x10	; 16
 82c:	90 e0       	ldi	r25, 0x00	; 0
 82e:	02 c0       	rjmp	.+4      	; 0x834 <DIO_READ_BIT+0x5a>
 830:	95 95       	asr	r25
 832:	87 95       	ror	r24
 834:	6a 95       	dec	r22
 836:	e2 f7       	brpl	.-8      	; 0x830 <DIO_READ_BIT+0x56>
 838:	81 70       	andi	r24, 0x01	; 1
 83a:	08 95       	ret
 83c:	80 e0       	ldi	r24, 0x00	; 0
 83e:	08 95       	ret

00000840 <SET_prescaler>:
 840:	00 97       	sbiw	r24, 0x00	; 0
 842:	19 f4       	brne	.+6      	; 0x84a <SET_prescaler+0xa>
 844:	83 b7       	in	r24, 0x33	; 51
 846:	83 bf       	out	0x33, r24	; 51
 848:	08 95       	ret
 84a:	81 30       	cpi	r24, 0x01	; 1
 84c:	91 05       	cpc	r25, r1
 84e:	21 f4       	brne	.+8      	; 0x858 <SET_prescaler+0x18>
 850:	83 b7       	in	r24, 0x33	; 51
 852:	81 60       	ori	r24, 0x01	; 1
 854:	83 bf       	out	0x33, r24	; 51
 856:	08 95       	ret
 858:	88 30       	cpi	r24, 0x08	; 8
 85a:	91 05       	cpc	r25, r1
 85c:	21 f4       	brne	.+8      	; 0x866 <__stack+0x7>
 85e:	83 b7       	in	r24, 0x33	; 51
 860:	82 60       	ori	r24, 0x02	; 2
 862:	83 bf       	out	0x33, r24	; 51
 864:	08 95       	ret
 866:	80 34       	cpi	r24, 0x40	; 64
 868:	91 05       	cpc	r25, r1
 86a:	21 f4       	brne	.+8      	; 0x874 <__stack+0x15>
 86c:	83 b7       	in	r24, 0x33	; 51
 86e:	83 60       	ori	r24, 0x03	; 3
 870:	83 bf       	out	0x33, r24	; 51
 872:	08 95       	ret
 874:	81 15       	cp	r24, r1
 876:	21 e0       	ldi	r18, 0x01	; 1
 878:	92 07       	cpc	r25, r18
 87a:	21 f4       	brne	.+8      	; 0x884 <__stack+0x25>
 87c:	83 b7       	in	r24, 0x33	; 51
 87e:	84 60       	ori	r24, 0x04	; 4
 880:	83 bf       	out	0x33, r24	; 51
 882:	08 95       	ret
 884:	81 15       	cp	r24, r1
 886:	94 40       	sbci	r25, 0x04	; 4
 888:	19 f4       	brne	.+6      	; 0x890 <__stack+0x31>
 88a:	83 b7       	in	r24, 0x33	; 51
 88c:	85 60       	ori	r24, 0x05	; 5
 88e:	83 bf       	out	0x33, r24	; 51
 890:	08 95       	ret

00000892 <TIM0_STOP>:
 892:	88 b7       	in	r24, 0x38	; 56
 894:	81 60       	ori	r24, 0x01	; 1
 896:	88 bf       	out	0x38, r24	; 56
 898:	80 e0       	ldi	r24, 0x00	; 0
 89a:	90 e0       	ldi	r25, 0x00	; 0
 89c:	0e 94 20 04 	call	0x840	; 0x840 <SET_prescaler>
 8a0:	08 95       	ret

000008a2 <Timer_MODEs>:
 8a2:	81 11       	cpse	r24, r1
 8a4:	04 c0       	rjmp	.+8      	; 0x8ae <Timer_MODEs+0xc>
 8a6:	83 b7       	in	r24, 0x33	; 51
 8a8:	87 7b       	andi	r24, 0xB7	; 183
 8aa:	83 bf       	out	0x33, r24	; 51
 8ac:	08 95       	ret
 8ae:	81 30       	cpi	r24, 0x01	; 1
 8b0:	39 f4       	brne	.+14     	; 0x8c0 <Timer_MODEs+0x1e>
 8b2:	83 b7       	in	r24, 0x33	; 51
 8b4:	88 60       	ori	r24, 0x08	; 8
 8b6:	83 bf       	out	0x33, r24	; 51
 8b8:	83 b7       	in	r24, 0x33	; 51
 8ba:	8f 7b       	andi	r24, 0xBF	; 191
 8bc:	83 bf       	out	0x33, r24	; 51
 8be:	08 95       	ret
 8c0:	82 30       	cpi	r24, 0x02	; 2
 8c2:	39 f4       	brne	.+14     	; 0x8d2 <Timer_MODEs+0x30>
 8c4:	83 b7       	in	r24, 0x33	; 51
 8c6:	80 64       	ori	r24, 0x40	; 64
 8c8:	83 bf       	out	0x33, r24	; 51
 8ca:	83 b7       	in	r24, 0x33	; 51
 8cc:	87 7f       	andi	r24, 0xF7	; 247
 8ce:	83 bf       	out	0x33, r24	; 51
 8d0:	08 95       	ret
 8d2:	83 30       	cpi	r24, 0x03	; 3
 8d4:	19 f4       	brne	.+6      	; 0x8dc <Timer_MODEs+0x3a>
 8d6:	83 b7       	in	r24, 0x33	; 51
 8d8:	88 64       	ori	r24, 0x48	; 72
 8da:	83 bf       	out	0x33, r24	; 51
 8dc:	08 95       	ret

000008de <TIM0_PWM_start>:
 8de:	8f 92       	push	r8
 8e0:	9f 92       	push	r9
 8e2:	af 92       	push	r10
 8e4:	bf 92       	push	r11
 8e6:	cf 92       	push	r12
 8e8:	df 92       	push	r13
 8ea:	ef 92       	push	r14
 8ec:	ff 92       	push	r15
 8ee:	4b 01       	movw	r8, r22
 8f0:	5c 01       	movw	r10, r24
 8f2:	60 e0       	ldi	r22, 0x00	; 0
 8f4:	70 e0       	ldi	r23, 0x00	; 0
 8f6:	80 e8       	ldi	r24, 0x80	; 128
 8f8:	9f e3       	ldi	r25, 0x3F	; 63
 8fa:	0e 94 57 05 	call	0xaae	; 0xaae <__divsf3>
 8fe:	6b 01       	movw	r12, r22
 900:	7c 01       	movw	r14, r24
 902:	60 93 73 00 	sts	0x0073, r22	; 0x800073 <period>
 906:	70 93 74 00 	sts	0x0074, r23	; 0x800074 <period+0x1>
 90a:	80 93 75 00 	sts	0x0075, r24	; 0x800075 <period+0x2>
 90e:	90 93 76 00 	sts	0x0076, r25	; 0x800076 <period+0x3>
 912:	a5 01       	movw	r20, r10
 914:	94 01       	movw	r18, r8
 916:	0e 94 86 06 	call	0xd0c	; 0xd0c <__mulsf3>
 91a:	20 e0       	ldi	r18, 0x00	; 0
 91c:	30 e0       	ldi	r19, 0x00	; 0
 91e:	48 ec       	ldi	r20, 0xC8	; 200
 920:	52 e4       	ldi	r21, 0x42	; 66
 922:	0e 94 57 05 	call	0xaae	; 0xaae <__divsf3>
 926:	4b 01       	movw	r8, r22
 928:	5c 01       	movw	r10, r24
 92a:	20 e0       	ldi	r18, 0x00	; 0
 92c:	34 e2       	ldi	r19, 0x24	; 36
 92e:	44 e7       	ldi	r20, 0x74	; 116
 930:	59 e4       	ldi	r21, 0x49	; 73
 932:	0e 94 86 06 	call	0xd0c	; 0xd0c <__mulsf3>
 936:	20 e0       	ldi	r18, 0x00	; 0
 938:	30 e0       	ldi	r19, 0x00	; 0
 93a:	40 e8       	ldi	r20, 0x80	; 128
 93c:	5b e3       	ldi	r21, 0x3B	; 59
 93e:	0e 94 86 06 	call	0xd0c	; 0xd0c <__mulsf3>
 942:	9b 01       	movw	r18, r22
 944:	ac 01       	movw	r20, r24
 946:	60 e0       	ldi	r22, 0x00	; 0
 948:	70 e0       	ldi	r23, 0x00	; 0
 94a:	8f e7       	ldi	r24, 0x7F	; 127
 94c:	93 e4       	ldi	r25, 0x43	; 67
 94e:	0e 94 ea 04 	call	0x9d4	; 0x9d4 <__subsf3>
 952:	60 93 6f 00 	sts	0x006F, r22	; 0x80006f <TON>
 956:	70 93 70 00 	sts	0x0070, r23	; 0x800070 <TON+0x1>
 95a:	80 93 71 00 	sts	0x0071, r24	; 0x800071 <TON+0x2>
 95e:	90 93 72 00 	sts	0x0072, r25	; 0x800072 <TON+0x3>
 962:	a5 01       	movw	r20, r10
 964:	94 01       	movw	r18, r8
 966:	c7 01       	movw	r24, r14
 968:	b6 01       	movw	r22, r12
 96a:	0e 94 ea 04 	call	0x9d4	; 0x9d4 <__subsf3>
 96e:	20 e0       	ldi	r18, 0x00	; 0
 970:	34 e2       	ldi	r19, 0x24	; 36
 972:	44 e7       	ldi	r20, 0x74	; 116
 974:	59 e4       	ldi	r21, 0x49	; 73
 976:	0e 94 86 06 	call	0xd0c	; 0xd0c <__mulsf3>
 97a:	20 e0       	ldi	r18, 0x00	; 0
 97c:	30 e0       	ldi	r19, 0x00	; 0
 97e:	40 e8       	ldi	r20, 0x80	; 128
 980:	5b e3       	ldi	r21, 0x3B	; 59
 982:	0e 94 86 06 	call	0xd0c	; 0xd0c <__mulsf3>
 986:	9b 01       	movw	r18, r22
 988:	ac 01       	movw	r20, r24
 98a:	60 e0       	ldi	r22, 0x00	; 0
 98c:	70 e0       	ldi	r23, 0x00	; 0
 98e:	8f e7       	ldi	r24, 0x7F	; 127
 990:	93 e4       	ldi	r25, 0x43	; 67
 992:	0e 94 ea 04 	call	0x9d4	; 0x9d4 <__subsf3>
 996:	60 93 6b 00 	sts	0x006B, r22	; 0x80006b <TOFF>
 99a:	70 93 6c 00 	sts	0x006C, r23	; 0x80006c <TOFF+0x1>
 99e:	80 93 6d 00 	sts	0x006D, r24	; 0x80006d <TOFF+0x2>
 9a2:	90 93 6e 00 	sts	0x006E, r25	; 0x80006e <TOFF+0x3>
 9a6:	80 e0       	ldi	r24, 0x00	; 0
 9a8:	91 e0       	ldi	r25, 0x01	; 1
 9aa:	0e 94 20 04 	call	0x840	; 0x840 <SET_prescaler>
 9ae:	ff 90       	pop	r15
 9b0:	ef 90       	pop	r14
 9b2:	df 90       	pop	r13
 9b4:	cf 90       	pop	r12
 9b6:	bf 90       	pop	r11
 9b8:	af 90       	pop	r10
 9ba:	9f 90       	pop	r9
 9bc:	8f 90       	pop	r8
 9be:	08 95       	ret

000009c0 <TIM0_PWM_INIT>:
 9c0:	80 e0       	ldi	r24, 0x00	; 0
 9c2:	0e 94 51 04 	call	0x8a2	; 0x8a2 <Timer_MODEs>
 9c6:	89 b7       	in	r24, 0x39	; 57
 9c8:	81 60       	ori	r24, 0x01	; 1
 9ca:	89 bf       	out	0x39, r24	; 57
 9cc:	8f b7       	in	r24, 0x3f	; 63
 9ce:	80 68       	ori	r24, 0x80	; 128
 9d0:	8f bf       	out	0x3f, r24	; 63
 9d2:	08 95       	ret

000009d4 <__subsf3>:
 9d4:	50 58       	subi	r21, 0x80	; 128

000009d6 <__addsf3>:
 9d6:	bb 27       	eor	r27, r27
 9d8:	aa 27       	eor	r26, r26
 9da:	0e 94 02 05 	call	0xa04	; 0xa04 <__addsf3x>
 9de:	0c 94 4c 06 	jmp	0xc98	; 0xc98 <__fp_round>
 9e2:	0e 94 3e 06 	call	0xc7c	; 0xc7c <__fp_pscA>
 9e6:	38 f0       	brcs	.+14     	; 0x9f6 <__addsf3+0x20>
 9e8:	0e 94 45 06 	call	0xc8a	; 0xc8a <__fp_pscB>
 9ec:	20 f0       	brcs	.+8      	; 0x9f6 <__addsf3+0x20>
 9ee:	39 f4       	brne	.+14     	; 0x9fe <__addsf3+0x28>
 9f0:	9f 3f       	cpi	r25, 0xFF	; 255
 9f2:	19 f4       	brne	.+6      	; 0x9fa <__addsf3+0x24>
 9f4:	26 f4       	brtc	.+8      	; 0x9fe <__addsf3+0x28>
 9f6:	0c 94 3b 06 	jmp	0xc76	; 0xc76 <__fp_nan>
 9fa:	0e f4       	brtc	.+2      	; 0x9fe <__addsf3+0x28>
 9fc:	e0 95       	com	r30
 9fe:	e7 fb       	bst	r30, 7
 a00:	0c 94 35 06 	jmp	0xc6a	; 0xc6a <__fp_inf>

00000a04 <__addsf3x>:
 a04:	e9 2f       	mov	r30, r25
 a06:	0e 94 5d 06 	call	0xcba	; 0xcba <__fp_split3>
 a0a:	58 f3       	brcs	.-42     	; 0x9e2 <__addsf3+0xc>
 a0c:	ba 17       	cp	r27, r26
 a0e:	62 07       	cpc	r22, r18
 a10:	73 07       	cpc	r23, r19
 a12:	84 07       	cpc	r24, r20
 a14:	95 07       	cpc	r25, r21
 a16:	20 f0       	brcs	.+8      	; 0xa20 <__addsf3x+0x1c>
 a18:	79 f4       	brne	.+30     	; 0xa38 <__addsf3x+0x34>
 a1a:	a6 f5       	brtc	.+104    	; 0xa84 <__addsf3x+0x80>
 a1c:	0c 94 7f 06 	jmp	0xcfe	; 0xcfe <__fp_zero>
 a20:	0e f4       	brtc	.+2      	; 0xa24 <__addsf3x+0x20>
 a22:	e0 95       	com	r30
 a24:	0b 2e       	mov	r0, r27
 a26:	ba 2f       	mov	r27, r26
 a28:	a0 2d       	mov	r26, r0
 a2a:	0b 01       	movw	r0, r22
 a2c:	b9 01       	movw	r22, r18
 a2e:	90 01       	movw	r18, r0
 a30:	0c 01       	movw	r0, r24
 a32:	ca 01       	movw	r24, r20
 a34:	a0 01       	movw	r20, r0
 a36:	11 24       	eor	r1, r1
 a38:	ff 27       	eor	r31, r31
 a3a:	59 1b       	sub	r21, r25
 a3c:	99 f0       	breq	.+38     	; 0xa64 <__addsf3x+0x60>
 a3e:	59 3f       	cpi	r21, 0xF9	; 249
 a40:	50 f4       	brcc	.+20     	; 0xa56 <__addsf3x+0x52>
 a42:	50 3e       	cpi	r21, 0xE0	; 224
 a44:	68 f1       	brcs	.+90     	; 0xaa0 <__addsf3x+0x9c>
 a46:	1a 16       	cp	r1, r26
 a48:	f0 40       	sbci	r31, 0x00	; 0
 a4a:	a2 2f       	mov	r26, r18
 a4c:	23 2f       	mov	r18, r19
 a4e:	34 2f       	mov	r19, r20
 a50:	44 27       	eor	r20, r20
 a52:	58 5f       	subi	r21, 0xF8	; 248
 a54:	f3 cf       	rjmp	.-26     	; 0xa3c <__addsf3x+0x38>
 a56:	46 95       	lsr	r20
 a58:	37 95       	ror	r19
 a5a:	27 95       	ror	r18
 a5c:	a7 95       	ror	r26
 a5e:	f0 40       	sbci	r31, 0x00	; 0
 a60:	53 95       	inc	r21
 a62:	c9 f7       	brne	.-14     	; 0xa56 <__addsf3x+0x52>
 a64:	7e f4       	brtc	.+30     	; 0xa84 <__addsf3x+0x80>
 a66:	1f 16       	cp	r1, r31
 a68:	ba 0b       	sbc	r27, r26
 a6a:	62 0b       	sbc	r22, r18
 a6c:	73 0b       	sbc	r23, r19
 a6e:	84 0b       	sbc	r24, r20
 a70:	ba f0       	brmi	.+46     	; 0xaa0 <__addsf3x+0x9c>
 a72:	91 50       	subi	r25, 0x01	; 1
 a74:	a1 f0       	breq	.+40     	; 0xa9e <__addsf3x+0x9a>
 a76:	ff 0f       	add	r31, r31
 a78:	bb 1f       	adc	r27, r27
 a7a:	66 1f       	adc	r22, r22
 a7c:	77 1f       	adc	r23, r23
 a7e:	88 1f       	adc	r24, r24
 a80:	c2 f7       	brpl	.-16     	; 0xa72 <__addsf3x+0x6e>
 a82:	0e c0       	rjmp	.+28     	; 0xaa0 <__addsf3x+0x9c>
 a84:	ba 0f       	add	r27, r26
 a86:	62 1f       	adc	r22, r18
 a88:	73 1f       	adc	r23, r19
 a8a:	84 1f       	adc	r24, r20
 a8c:	48 f4       	brcc	.+18     	; 0xaa0 <__addsf3x+0x9c>
 a8e:	87 95       	ror	r24
 a90:	77 95       	ror	r23
 a92:	67 95       	ror	r22
 a94:	b7 95       	ror	r27
 a96:	f7 95       	ror	r31
 a98:	9e 3f       	cpi	r25, 0xFE	; 254
 a9a:	08 f0       	brcs	.+2      	; 0xa9e <__addsf3x+0x9a>
 a9c:	b0 cf       	rjmp	.-160    	; 0x9fe <__addsf3+0x28>
 a9e:	93 95       	inc	r25
 aa0:	88 0f       	add	r24, r24
 aa2:	08 f0       	brcs	.+2      	; 0xaa6 <__addsf3x+0xa2>
 aa4:	99 27       	eor	r25, r25
 aa6:	ee 0f       	add	r30, r30
 aa8:	97 95       	ror	r25
 aaa:	87 95       	ror	r24
 aac:	08 95       	ret

00000aae <__divsf3>:
 aae:	0e 94 6b 05 	call	0xad6	; 0xad6 <__divsf3x>
 ab2:	0c 94 4c 06 	jmp	0xc98	; 0xc98 <__fp_round>
 ab6:	0e 94 45 06 	call	0xc8a	; 0xc8a <__fp_pscB>
 aba:	58 f0       	brcs	.+22     	; 0xad2 <__divsf3+0x24>
 abc:	0e 94 3e 06 	call	0xc7c	; 0xc7c <__fp_pscA>
 ac0:	40 f0       	brcs	.+16     	; 0xad2 <__divsf3+0x24>
 ac2:	29 f4       	brne	.+10     	; 0xace <__divsf3+0x20>
 ac4:	5f 3f       	cpi	r21, 0xFF	; 255
 ac6:	29 f0       	breq	.+10     	; 0xad2 <__divsf3+0x24>
 ac8:	0c 94 35 06 	jmp	0xc6a	; 0xc6a <__fp_inf>
 acc:	51 11       	cpse	r21, r1
 ace:	0c 94 80 06 	jmp	0xd00	; 0xd00 <__fp_szero>
 ad2:	0c 94 3b 06 	jmp	0xc76	; 0xc76 <__fp_nan>

00000ad6 <__divsf3x>:
 ad6:	0e 94 5d 06 	call	0xcba	; 0xcba <__fp_split3>
 ada:	68 f3       	brcs	.-38     	; 0xab6 <__divsf3+0x8>

00000adc <__divsf3_pse>:
 adc:	99 23       	and	r25, r25
 ade:	b1 f3       	breq	.-20     	; 0xacc <__divsf3+0x1e>
 ae0:	55 23       	and	r21, r21
 ae2:	91 f3       	breq	.-28     	; 0xac8 <__divsf3+0x1a>
 ae4:	95 1b       	sub	r25, r21
 ae6:	55 0b       	sbc	r21, r21
 ae8:	bb 27       	eor	r27, r27
 aea:	aa 27       	eor	r26, r26
 aec:	62 17       	cp	r22, r18
 aee:	73 07       	cpc	r23, r19
 af0:	84 07       	cpc	r24, r20
 af2:	38 f0       	brcs	.+14     	; 0xb02 <__divsf3_pse+0x26>
 af4:	9f 5f       	subi	r25, 0xFF	; 255
 af6:	5f 4f       	sbci	r21, 0xFF	; 255
 af8:	22 0f       	add	r18, r18
 afa:	33 1f       	adc	r19, r19
 afc:	44 1f       	adc	r20, r20
 afe:	aa 1f       	adc	r26, r26
 b00:	a9 f3       	breq	.-22     	; 0xaec <__divsf3_pse+0x10>
 b02:	35 d0       	rcall	.+106    	; 0xb6e <__divsf3_pse+0x92>
 b04:	0e 2e       	mov	r0, r30
 b06:	3a f0       	brmi	.+14     	; 0xb16 <__divsf3_pse+0x3a>
 b08:	e0 e8       	ldi	r30, 0x80	; 128
 b0a:	32 d0       	rcall	.+100    	; 0xb70 <__divsf3_pse+0x94>
 b0c:	91 50       	subi	r25, 0x01	; 1
 b0e:	50 40       	sbci	r21, 0x00	; 0
 b10:	e6 95       	lsr	r30
 b12:	00 1c       	adc	r0, r0
 b14:	ca f7       	brpl	.-14     	; 0xb08 <__divsf3_pse+0x2c>
 b16:	2b d0       	rcall	.+86     	; 0xb6e <__divsf3_pse+0x92>
 b18:	fe 2f       	mov	r31, r30
 b1a:	29 d0       	rcall	.+82     	; 0xb6e <__divsf3_pse+0x92>
 b1c:	66 0f       	add	r22, r22
 b1e:	77 1f       	adc	r23, r23
 b20:	88 1f       	adc	r24, r24
 b22:	bb 1f       	adc	r27, r27
 b24:	26 17       	cp	r18, r22
 b26:	37 07       	cpc	r19, r23
 b28:	48 07       	cpc	r20, r24
 b2a:	ab 07       	cpc	r26, r27
 b2c:	b0 e8       	ldi	r27, 0x80	; 128
 b2e:	09 f0       	breq	.+2      	; 0xb32 <__divsf3_pse+0x56>
 b30:	bb 0b       	sbc	r27, r27
 b32:	80 2d       	mov	r24, r0
 b34:	bf 01       	movw	r22, r30
 b36:	ff 27       	eor	r31, r31
 b38:	93 58       	subi	r25, 0x83	; 131
 b3a:	5f 4f       	sbci	r21, 0xFF	; 255
 b3c:	3a f0       	brmi	.+14     	; 0xb4c <__divsf3_pse+0x70>
 b3e:	9e 3f       	cpi	r25, 0xFE	; 254
 b40:	51 05       	cpc	r21, r1
 b42:	78 f0       	brcs	.+30     	; 0xb62 <__divsf3_pse+0x86>
 b44:	0c 94 35 06 	jmp	0xc6a	; 0xc6a <__fp_inf>
 b48:	0c 94 80 06 	jmp	0xd00	; 0xd00 <__fp_szero>
 b4c:	5f 3f       	cpi	r21, 0xFF	; 255
 b4e:	e4 f3       	brlt	.-8      	; 0xb48 <__divsf3_pse+0x6c>
 b50:	98 3e       	cpi	r25, 0xE8	; 232
 b52:	d4 f3       	brlt	.-12     	; 0xb48 <__divsf3_pse+0x6c>
 b54:	86 95       	lsr	r24
 b56:	77 95       	ror	r23
 b58:	67 95       	ror	r22
 b5a:	b7 95       	ror	r27
 b5c:	f7 95       	ror	r31
 b5e:	9f 5f       	subi	r25, 0xFF	; 255
 b60:	c9 f7       	brne	.-14     	; 0xb54 <__divsf3_pse+0x78>
 b62:	88 0f       	add	r24, r24
 b64:	91 1d       	adc	r25, r1
 b66:	96 95       	lsr	r25
 b68:	87 95       	ror	r24
 b6a:	97 f9       	bld	r25, 7
 b6c:	08 95       	ret
 b6e:	e1 e0       	ldi	r30, 0x01	; 1
 b70:	66 0f       	add	r22, r22
 b72:	77 1f       	adc	r23, r23
 b74:	88 1f       	adc	r24, r24
 b76:	bb 1f       	adc	r27, r27
 b78:	62 17       	cp	r22, r18
 b7a:	73 07       	cpc	r23, r19
 b7c:	84 07       	cpc	r24, r20
 b7e:	ba 07       	cpc	r27, r26
 b80:	20 f0       	brcs	.+8      	; 0xb8a <__divsf3_pse+0xae>
 b82:	62 1b       	sub	r22, r18
 b84:	73 0b       	sbc	r23, r19
 b86:	84 0b       	sbc	r24, r20
 b88:	ba 0b       	sbc	r27, r26
 b8a:	ee 1f       	adc	r30, r30
 b8c:	88 f7       	brcc	.-30     	; 0xb70 <__divsf3_pse+0x94>
 b8e:	e0 95       	com	r30
 b90:	08 95       	ret

00000b92 <__fixunssfsi>:
 b92:	0e 94 65 06 	call	0xcca	; 0xcca <__fp_splitA>
 b96:	88 f0       	brcs	.+34     	; 0xbba <__fixunssfsi+0x28>
 b98:	9f 57       	subi	r25, 0x7F	; 127
 b9a:	98 f0       	brcs	.+38     	; 0xbc2 <__fixunssfsi+0x30>
 b9c:	b9 2f       	mov	r27, r25
 b9e:	99 27       	eor	r25, r25
 ba0:	b7 51       	subi	r27, 0x17	; 23
 ba2:	b0 f0       	brcs	.+44     	; 0xbd0 <__fixunssfsi+0x3e>
 ba4:	e1 f0       	breq	.+56     	; 0xbde <__fixunssfsi+0x4c>
 ba6:	66 0f       	add	r22, r22
 ba8:	77 1f       	adc	r23, r23
 baa:	88 1f       	adc	r24, r24
 bac:	99 1f       	adc	r25, r25
 bae:	1a f0       	brmi	.+6      	; 0xbb6 <__fixunssfsi+0x24>
 bb0:	ba 95       	dec	r27
 bb2:	c9 f7       	brne	.-14     	; 0xba6 <__fixunssfsi+0x14>
 bb4:	14 c0       	rjmp	.+40     	; 0xbde <__fixunssfsi+0x4c>
 bb6:	b1 30       	cpi	r27, 0x01	; 1
 bb8:	91 f0       	breq	.+36     	; 0xbde <__fixunssfsi+0x4c>
 bba:	0e 94 7f 06 	call	0xcfe	; 0xcfe <__fp_zero>
 bbe:	b1 e0       	ldi	r27, 0x01	; 1
 bc0:	08 95       	ret
 bc2:	0c 94 7f 06 	jmp	0xcfe	; 0xcfe <__fp_zero>
 bc6:	67 2f       	mov	r22, r23
 bc8:	78 2f       	mov	r23, r24
 bca:	88 27       	eor	r24, r24
 bcc:	b8 5f       	subi	r27, 0xF8	; 248
 bce:	39 f0       	breq	.+14     	; 0xbde <__fixunssfsi+0x4c>
 bd0:	b9 3f       	cpi	r27, 0xF9	; 249
 bd2:	cc f3       	brlt	.-14     	; 0xbc6 <__fixunssfsi+0x34>
 bd4:	86 95       	lsr	r24
 bd6:	77 95       	ror	r23
 bd8:	67 95       	ror	r22
 bda:	b3 95       	inc	r27
 bdc:	d9 f7       	brne	.-10     	; 0xbd4 <__fixunssfsi+0x42>
 bde:	3e f4       	brtc	.+14     	; 0xbee <__fixunssfsi+0x5c>
 be0:	90 95       	com	r25
 be2:	80 95       	com	r24
 be4:	70 95       	com	r23
 be6:	61 95       	neg	r22
 be8:	7f 4f       	sbci	r23, 0xFF	; 255
 bea:	8f 4f       	sbci	r24, 0xFF	; 255
 bec:	9f 4f       	sbci	r25, 0xFF	; 255
 bee:	08 95       	ret

00000bf0 <__floatunsisf>:
 bf0:	e8 94       	clt
 bf2:	09 c0       	rjmp	.+18     	; 0xc06 <__floatsisf+0x12>

00000bf4 <__floatsisf>:
 bf4:	97 fb       	bst	r25, 7
 bf6:	3e f4       	brtc	.+14     	; 0xc06 <__floatsisf+0x12>
 bf8:	90 95       	com	r25
 bfa:	80 95       	com	r24
 bfc:	70 95       	com	r23
 bfe:	61 95       	neg	r22
 c00:	7f 4f       	sbci	r23, 0xFF	; 255
 c02:	8f 4f       	sbci	r24, 0xFF	; 255
 c04:	9f 4f       	sbci	r25, 0xFF	; 255
 c06:	99 23       	and	r25, r25
 c08:	a9 f0       	breq	.+42     	; 0xc34 <__floatsisf+0x40>
 c0a:	f9 2f       	mov	r31, r25
 c0c:	96 e9       	ldi	r25, 0x96	; 150
 c0e:	bb 27       	eor	r27, r27
 c10:	93 95       	inc	r25
 c12:	f6 95       	lsr	r31
 c14:	87 95       	ror	r24
 c16:	77 95       	ror	r23
 c18:	67 95       	ror	r22
 c1a:	b7 95       	ror	r27
 c1c:	f1 11       	cpse	r31, r1
 c1e:	f8 cf       	rjmp	.-16     	; 0xc10 <__floatsisf+0x1c>
 c20:	fa f4       	brpl	.+62     	; 0xc60 <__floatsisf+0x6c>
 c22:	bb 0f       	add	r27, r27
 c24:	11 f4       	brne	.+4      	; 0xc2a <__floatsisf+0x36>
 c26:	60 ff       	sbrs	r22, 0
 c28:	1b c0       	rjmp	.+54     	; 0xc60 <__floatsisf+0x6c>
 c2a:	6f 5f       	subi	r22, 0xFF	; 255
 c2c:	7f 4f       	sbci	r23, 0xFF	; 255
 c2e:	8f 4f       	sbci	r24, 0xFF	; 255
 c30:	9f 4f       	sbci	r25, 0xFF	; 255
 c32:	16 c0       	rjmp	.+44     	; 0xc60 <__floatsisf+0x6c>
 c34:	88 23       	and	r24, r24
 c36:	11 f0       	breq	.+4      	; 0xc3c <__floatsisf+0x48>
 c38:	96 e9       	ldi	r25, 0x96	; 150
 c3a:	11 c0       	rjmp	.+34     	; 0xc5e <__floatsisf+0x6a>
 c3c:	77 23       	and	r23, r23
 c3e:	21 f0       	breq	.+8      	; 0xc48 <__floatsisf+0x54>
 c40:	9e e8       	ldi	r25, 0x8E	; 142
 c42:	87 2f       	mov	r24, r23
 c44:	76 2f       	mov	r23, r22
 c46:	05 c0       	rjmp	.+10     	; 0xc52 <__floatsisf+0x5e>
 c48:	66 23       	and	r22, r22
 c4a:	71 f0       	breq	.+28     	; 0xc68 <__floatsisf+0x74>
 c4c:	96 e8       	ldi	r25, 0x86	; 134
 c4e:	86 2f       	mov	r24, r22
 c50:	70 e0       	ldi	r23, 0x00	; 0
 c52:	60 e0       	ldi	r22, 0x00	; 0
 c54:	2a f0       	brmi	.+10     	; 0xc60 <__floatsisf+0x6c>
 c56:	9a 95       	dec	r25
 c58:	66 0f       	add	r22, r22
 c5a:	77 1f       	adc	r23, r23
 c5c:	88 1f       	adc	r24, r24
 c5e:	da f7       	brpl	.-10     	; 0xc56 <__floatsisf+0x62>
 c60:	88 0f       	add	r24, r24
 c62:	96 95       	lsr	r25
 c64:	87 95       	ror	r24
 c66:	97 f9       	bld	r25, 7
 c68:	08 95       	ret

00000c6a <__fp_inf>:
 c6a:	97 f9       	bld	r25, 7
 c6c:	9f 67       	ori	r25, 0x7F	; 127
 c6e:	80 e8       	ldi	r24, 0x80	; 128
 c70:	70 e0       	ldi	r23, 0x00	; 0
 c72:	60 e0       	ldi	r22, 0x00	; 0
 c74:	08 95       	ret

00000c76 <__fp_nan>:
 c76:	9f ef       	ldi	r25, 0xFF	; 255
 c78:	80 ec       	ldi	r24, 0xC0	; 192
 c7a:	08 95       	ret

00000c7c <__fp_pscA>:
 c7c:	00 24       	eor	r0, r0
 c7e:	0a 94       	dec	r0
 c80:	16 16       	cp	r1, r22
 c82:	17 06       	cpc	r1, r23
 c84:	18 06       	cpc	r1, r24
 c86:	09 06       	cpc	r0, r25
 c88:	08 95       	ret

00000c8a <__fp_pscB>:
 c8a:	00 24       	eor	r0, r0
 c8c:	0a 94       	dec	r0
 c8e:	12 16       	cp	r1, r18
 c90:	13 06       	cpc	r1, r19
 c92:	14 06       	cpc	r1, r20
 c94:	05 06       	cpc	r0, r21
 c96:	08 95       	ret

00000c98 <__fp_round>:
 c98:	09 2e       	mov	r0, r25
 c9a:	03 94       	inc	r0
 c9c:	00 0c       	add	r0, r0
 c9e:	11 f4       	brne	.+4      	; 0xca4 <__fp_round+0xc>
 ca0:	88 23       	and	r24, r24
 ca2:	52 f0       	brmi	.+20     	; 0xcb8 <__fp_round+0x20>
 ca4:	bb 0f       	add	r27, r27
 ca6:	40 f4       	brcc	.+16     	; 0xcb8 <__fp_round+0x20>
 ca8:	bf 2b       	or	r27, r31
 caa:	11 f4       	brne	.+4      	; 0xcb0 <__fp_round+0x18>
 cac:	60 ff       	sbrs	r22, 0
 cae:	04 c0       	rjmp	.+8      	; 0xcb8 <__fp_round+0x20>
 cb0:	6f 5f       	subi	r22, 0xFF	; 255
 cb2:	7f 4f       	sbci	r23, 0xFF	; 255
 cb4:	8f 4f       	sbci	r24, 0xFF	; 255
 cb6:	9f 4f       	sbci	r25, 0xFF	; 255
 cb8:	08 95       	ret

00000cba <__fp_split3>:
 cba:	57 fd       	sbrc	r21, 7
 cbc:	90 58       	subi	r25, 0x80	; 128
 cbe:	44 0f       	add	r20, r20
 cc0:	55 1f       	adc	r21, r21
 cc2:	59 f0       	breq	.+22     	; 0xcda <__fp_splitA+0x10>
 cc4:	5f 3f       	cpi	r21, 0xFF	; 255
 cc6:	71 f0       	breq	.+28     	; 0xce4 <__fp_splitA+0x1a>
 cc8:	47 95       	ror	r20

00000cca <__fp_splitA>:
 cca:	88 0f       	add	r24, r24
 ccc:	97 fb       	bst	r25, 7
 cce:	99 1f       	adc	r25, r25
 cd0:	61 f0       	breq	.+24     	; 0xcea <__fp_splitA+0x20>
 cd2:	9f 3f       	cpi	r25, 0xFF	; 255
 cd4:	79 f0       	breq	.+30     	; 0xcf4 <__fp_splitA+0x2a>
 cd6:	87 95       	ror	r24
 cd8:	08 95       	ret
 cda:	12 16       	cp	r1, r18
 cdc:	13 06       	cpc	r1, r19
 cde:	14 06       	cpc	r1, r20
 ce0:	55 1f       	adc	r21, r21
 ce2:	f2 cf       	rjmp	.-28     	; 0xcc8 <__fp_split3+0xe>
 ce4:	46 95       	lsr	r20
 ce6:	f1 df       	rcall	.-30     	; 0xcca <__fp_splitA>
 ce8:	08 c0       	rjmp	.+16     	; 0xcfa <__fp_splitA+0x30>
 cea:	16 16       	cp	r1, r22
 cec:	17 06       	cpc	r1, r23
 cee:	18 06       	cpc	r1, r24
 cf0:	99 1f       	adc	r25, r25
 cf2:	f1 cf       	rjmp	.-30     	; 0xcd6 <__fp_splitA+0xc>
 cf4:	86 95       	lsr	r24
 cf6:	71 05       	cpc	r23, r1
 cf8:	61 05       	cpc	r22, r1
 cfa:	08 94       	sec
 cfc:	08 95       	ret

00000cfe <__fp_zero>:
 cfe:	e8 94       	clt

00000d00 <__fp_szero>:
 d00:	bb 27       	eor	r27, r27
 d02:	66 27       	eor	r22, r22
 d04:	77 27       	eor	r23, r23
 d06:	cb 01       	movw	r24, r22
 d08:	97 f9       	bld	r25, 7
 d0a:	08 95       	ret

00000d0c <__mulsf3>:
 d0c:	0e 94 99 06 	call	0xd32	; 0xd32 <__mulsf3x>
 d10:	0c 94 4c 06 	jmp	0xc98	; 0xc98 <__fp_round>
 d14:	0e 94 3e 06 	call	0xc7c	; 0xc7c <__fp_pscA>
 d18:	38 f0       	brcs	.+14     	; 0xd28 <__mulsf3+0x1c>
 d1a:	0e 94 45 06 	call	0xc8a	; 0xc8a <__fp_pscB>
 d1e:	20 f0       	brcs	.+8      	; 0xd28 <__mulsf3+0x1c>
 d20:	95 23       	and	r25, r21
 d22:	11 f0       	breq	.+4      	; 0xd28 <__mulsf3+0x1c>
 d24:	0c 94 35 06 	jmp	0xc6a	; 0xc6a <__fp_inf>
 d28:	0c 94 3b 06 	jmp	0xc76	; 0xc76 <__fp_nan>
 d2c:	11 24       	eor	r1, r1
 d2e:	0c 94 80 06 	jmp	0xd00	; 0xd00 <__fp_szero>

00000d32 <__mulsf3x>:
 d32:	0e 94 5d 06 	call	0xcba	; 0xcba <__fp_split3>
 d36:	70 f3       	brcs	.-36     	; 0xd14 <__mulsf3+0x8>

00000d38 <__mulsf3_pse>:
 d38:	95 9f       	mul	r25, r21
 d3a:	c1 f3       	breq	.-16     	; 0xd2c <__mulsf3+0x20>
 d3c:	95 0f       	add	r25, r21
 d3e:	50 e0       	ldi	r21, 0x00	; 0
 d40:	55 1f       	adc	r21, r21
 d42:	62 9f       	mul	r22, r18
 d44:	f0 01       	movw	r30, r0
 d46:	72 9f       	mul	r23, r18
 d48:	bb 27       	eor	r27, r27
 d4a:	f0 0d       	add	r31, r0
 d4c:	b1 1d       	adc	r27, r1
 d4e:	63 9f       	mul	r22, r19
 d50:	aa 27       	eor	r26, r26
 d52:	f0 0d       	add	r31, r0
 d54:	b1 1d       	adc	r27, r1
 d56:	aa 1f       	adc	r26, r26
 d58:	64 9f       	mul	r22, r20
 d5a:	66 27       	eor	r22, r22
 d5c:	b0 0d       	add	r27, r0
 d5e:	a1 1d       	adc	r26, r1
 d60:	66 1f       	adc	r22, r22
 d62:	82 9f       	mul	r24, r18
 d64:	22 27       	eor	r18, r18
 d66:	b0 0d       	add	r27, r0
 d68:	a1 1d       	adc	r26, r1
 d6a:	62 1f       	adc	r22, r18
 d6c:	73 9f       	mul	r23, r19
 d6e:	b0 0d       	add	r27, r0
 d70:	a1 1d       	adc	r26, r1
 d72:	62 1f       	adc	r22, r18
 d74:	83 9f       	mul	r24, r19
 d76:	a0 0d       	add	r26, r0
 d78:	61 1d       	adc	r22, r1
 d7a:	22 1f       	adc	r18, r18
 d7c:	74 9f       	mul	r23, r20
 d7e:	33 27       	eor	r19, r19
 d80:	a0 0d       	add	r26, r0
 d82:	61 1d       	adc	r22, r1
 d84:	23 1f       	adc	r18, r19
 d86:	84 9f       	mul	r24, r20
 d88:	60 0d       	add	r22, r0
 d8a:	21 1d       	adc	r18, r1
 d8c:	82 2f       	mov	r24, r18
 d8e:	76 2f       	mov	r23, r22
 d90:	6a 2f       	mov	r22, r26
 d92:	11 24       	eor	r1, r1
 d94:	9f 57       	subi	r25, 0x7F	; 127
 d96:	50 40       	sbci	r21, 0x00	; 0
 d98:	9a f0       	brmi	.+38     	; 0xdc0 <__mulsf3_pse+0x88>
 d9a:	f1 f0       	breq	.+60     	; 0xdd8 <__mulsf3_pse+0xa0>
 d9c:	88 23       	and	r24, r24
 d9e:	4a f0       	brmi	.+18     	; 0xdb2 <__mulsf3_pse+0x7a>
 da0:	ee 0f       	add	r30, r30
 da2:	ff 1f       	adc	r31, r31
 da4:	bb 1f       	adc	r27, r27
 da6:	66 1f       	adc	r22, r22
 da8:	77 1f       	adc	r23, r23
 daa:	88 1f       	adc	r24, r24
 dac:	91 50       	subi	r25, 0x01	; 1
 dae:	50 40       	sbci	r21, 0x00	; 0
 db0:	a9 f7       	brne	.-22     	; 0xd9c <__mulsf3_pse+0x64>
 db2:	9e 3f       	cpi	r25, 0xFE	; 254
 db4:	51 05       	cpc	r21, r1
 db6:	80 f0       	brcs	.+32     	; 0xdd8 <__mulsf3_pse+0xa0>
 db8:	0c 94 35 06 	jmp	0xc6a	; 0xc6a <__fp_inf>
 dbc:	0c 94 80 06 	jmp	0xd00	; 0xd00 <__fp_szero>
 dc0:	5f 3f       	cpi	r21, 0xFF	; 255
 dc2:	e4 f3       	brlt	.-8      	; 0xdbc <__mulsf3_pse+0x84>
 dc4:	98 3e       	cpi	r25, 0xE8	; 232
 dc6:	d4 f3       	brlt	.-12     	; 0xdbc <__mulsf3_pse+0x84>
 dc8:	86 95       	lsr	r24
 dca:	77 95       	ror	r23
 dcc:	67 95       	ror	r22
 dce:	b7 95       	ror	r27
 dd0:	f7 95       	ror	r31
 dd2:	e7 95       	ror	r30
 dd4:	9f 5f       	subi	r25, 0xFF	; 255
 dd6:	c1 f7       	brne	.-16     	; 0xdc8 <__mulsf3_pse+0x90>
 dd8:	fe 2b       	or	r31, r30
 dda:	88 0f       	add	r24, r24
 ddc:	91 1d       	adc	r25, r1
 dde:	96 95       	lsr	r25
 de0:	87 95       	ror	r24
 de2:	97 f9       	bld	r25, 7
 de4:	08 95       	ret

00000de6 <_exit>:
 de6:	f8 94       	cli

00000de8 <__stop_program>:
 de8:	ff cf       	rjmp	.-2      	; 0xde8 <__stop_program>
